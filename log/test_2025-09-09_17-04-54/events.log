[0.000000] (-) TimerEvent: {}
[0.000568] (igus_rebel_description) JobQueued: {'identifier': 'igus_rebel_description', 'dependencies': OrderedDict({'igus_rebel_description': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description'})}
[0.000680] (igus_rebel_msgs) JobQueued: {'identifier': 'igus_rebel_msgs', 'dependencies': OrderedDict({'igus_rebel_msgs': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs'})}
[0.000736] (igus_rebel) JobQueued: {'identifier': 'igus_rebel', 'dependencies': OrderedDict({'igus_rebel_msgs': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs', 'igus_rebel': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel'})}
[0.000767] (igus_rebel_moveit_config) JobQueued: {'identifier': 'igus_rebel_moveit_config', 'dependencies': OrderedDict({'igus_rebel_description': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description', 'igus_rebel_moveit_config': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_moveit_config'})}
[0.000795] (igus_rebel_description) JobStarted: {'identifier': 'igus_rebel_description'}
[0.004524] (igus_rebel_msgs) JobStarted: {'identifier': 'igus_rebel_msgs'}
[0.015027] (igus_rebel_description) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'amrl-linux24-04', 'XDG_SESSION_TYPE': 'wayland', 'ROS_APT_SOURCE_VERSION': '1.1.0', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/amrl-linux24-04', 'OLDPWD': '/home/amrl-linux24-04', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '2178', 'SYSTEMD_EXEC_PID': '2614', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3989', 'GNOME_KEYRING_CONTROL': '/run/user/1000/keyring', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'amrl-linux24-04', 'JOURNAL_STREAM': '9:27789', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.SettingsDaemon.MediaKeys.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'amrl-linux24-04', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/amrl-linux24-04-ThinkPad-E16-Gen-2:@/tmp/.ICE-unix/2401,unix/amrl-linux24-04-ThinkPad-E16-Gen-2:/tmp/.ICE-unix/2401', 'INVOCATION_ID': 'a8c54b4195194d3a83d59bc6c61c007c', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.UJD3C3', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:5a724dbf-67e5-4a1e-9f78-8a4d2b7bcf90', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[0.020647] (igus_rebel_msgs) JobEnded: {'identifier': 'igus_rebel_msgs', 'rc': 0}
[0.021280] (igus_rebel) JobStarted: {'identifier': 'igus_rebel'}
[0.022964] (igus_rebel_description) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.023474] (igus_rebel_description) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.023576] (igus_rebel_description) StdoutLine: {'line': b'   Site: amrl-linux24-04-ThinkPad-E16-Gen-2\n'}
[0.023642] (igus_rebel_description) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.023718] (igus_rebel_description) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.023781] (igus_rebel_description) StdoutLine: {'line': b'Create new tag: 20250909-1504 - Experimental\n'}
[0.023843] (igus_rebel_description) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.023903] (igus_rebel_description) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.023962] (igus_rebel_description) StdoutLine: {'line': b'Test project /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description\n'}
[0.024022] (igus_rebel_description) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.024373] (igus_rebel_description) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.024501] (igus_rebel_description) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.024570] (igus_rebel_description) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.024638] (igus_rebel_description) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.024720] (igus_rebel_description) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.025071] (igus_rebel_description) StdoutLine: {'line': b'test 1\n'}
[0.025142] (igus_rebel_description) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.025200] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.025258] (igus_rebel_description) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml" "--package-name" "igus_rebel_description" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/jazzy/bin/ament_lint_cmake" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml"\n'}
[0.025319] (igus_rebel_description) StdoutLine: {'line': b'1: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description\n'}
[0.025377] (igus_rebel_description) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.038948] (igus_rebel) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'amrl-linux24-04', 'XDG_SESSION_TYPE': 'wayland', 'ROS_APT_SOURCE_VERSION': '1.1.0', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel/lib:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/amrl-linux24-04', 'OLDPWD': '/home/amrl-linux24-04', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '2178', 'SYSTEMD_EXEC_PID': '2614', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3989', 'GNOME_KEYRING_CONTROL': '/run/user/1000/keyring', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'amrl-linux24-04', 'JOURNAL_STREAM': '9:27789', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.SettingsDaemon.MediaKeys.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'amrl-linux24-04', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/amrl-linux24-04-ThinkPad-E16-Gen-2:@/tmp/.ICE-unix/2401,unix/amrl-linux24-04-ThinkPad-E16-Gen-2:/tmp/.ICE-unix/2401', 'INVOCATION_ID': 'a8c54b4195194d3a83d59bc6c61c007c', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.UJD3C3', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:5a724dbf-67e5-4a1e-9f78-8a4d2b7bcf90', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs/lib/python3.12/site-packages:/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[0.045394] (igus_rebel) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.045521] (igus_rebel) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.045571] (igus_rebel) StdoutLine: {'line': b'   Site: amrl-linux24-04-ThinkPad-E16-Gen-2\n'}
[0.045613] (igus_rebel) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.045696] (igus_rebel) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.045738] (igus_rebel) StdoutLine: {'line': b'Create new tag: 20250909-1504 - Experimental\n'}
[0.045773] (igus_rebel) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.045807] (igus_rebel) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.045839] (igus_rebel) StdoutLine: {'line': b'Test project /home/amrl-linux24-04/ros2_ben/build/igus_rebel\n'}
[0.045872] (igus_rebel) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.045919] (igus_rebel) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.045974] (igus_rebel) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.046379] (igus_rebel) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.046542] (igus_rebel) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.046625] (igus_rebel) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.046708] (igus_rebel) StdoutLine: {'line': b'test 1\n'}
[0.046778] (igus_rebel) StdoutLine: {'line': b'    Start 1: cppcheck\n'}
[0.046846] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.046914] (igus_rebel) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_cppcheck/cppcheck.txt" "--command" "/opt/ros/jazzy/bin/ament_cppcheck" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml" "--include_dirs" "/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel/include"\n'}
[0.046991] (igus_rebel) StdoutLine: {'line': b'1: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.047070] (igus_rebel) StdoutLine: {'line': b'1: Test timeout computed to be: 300\n'}
[0.065100] (igus_rebel_description) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description':\n"}
[0.065280] (igus_rebel_description) StdoutLine: {'line': b'1:  - /opt/ros/jazzy/bin/ament_lint_cmake --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml\n'}
[0.087717] (igus_rebel) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.087899] (igus_rebel) StdoutLine: {'line': b'1:  - /opt/ros/jazzy/bin/ament_cppcheck --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml --include_dirs /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel/include\n'}
[0.099887] (-) TimerEvent: {}
[0.112120] (igus_rebel_description) StdoutLine: {'line': b'1: \n'}
[0.112322] (igus_rebel_description) StdoutLine: {'line': b'1: No problems found\n'}
[0.119737] (igus_rebel_description) StdoutLine: {'line': b'1: -- run_test.py: return code 0\n'}
[0.119922] (igus_rebel_description) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml'\n"}
[0.125565] (igus_rebel_description) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................   Passed    0.10 sec\n'}
[0.125674] (igus_rebel_description) StdoutLine: {'line': b'test 2\n'}
[0.125750] (igus_rebel_description) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.125825] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.125899] (igus_rebel_description) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml" "--package-name" "igus_rebel_description" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/ament_xmllint/xmllint.txt" "--command" "/opt/ros/jazzy/bin/ament_xmllint" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml"\n'}
[0.125980] (igus_rebel_description) StdoutLine: {'line': b'2: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description\n'}
[0.126062] (igus_rebel_description) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.134718] (igus_rebel) StdoutLine: {'line': b'1: cppcheck 2.13.0 has known performance issues and therefore will not be used, set the AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS environment variable to override this.\n'}
[0.142819] (igus_rebel) StdoutLine: {'line': b'1: -- run_test.py: return code 0\n'}
[0.142996] (igus_rebel) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml'\n"}
[0.148113] (igus_rebel) StdoutLine: {'line': b'1/6 Test #1: cppcheck .........................   Passed    0.10 sec\n'}
[0.148235] (igus_rebel) StdoutLine: {'line': b'test 2\n'}
[0.148307] (igus_rebel) StdoutLine: {'line': b'    Start 2: flake8\n'}
[0.148374] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.148444] (igus_rebel) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_flake8/flake8.txt" "--command" "/opt/ros/jazzy/bin/ament_flake8" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml"\n'}
[0.148527] (igus_rebel) StdoutLine: {'line': b'2: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.148596] (igus_rebel) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.161792] (igus_rebel_description) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description':\n"}
[0.161888] (igus_rebel_description) StdoutLine: {'line': b'2:  - /opt/ros/jazzy/bin/ament_xmllint --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml\n'}
[0.191552] (igus_rebel) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.191717] (igus_rebel) StdoutLine: {'line': b'2:  - /opt/ros/jazzy/bin/ament_flake8 --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml\n'}
[0.199973] (-) TimerEvent: {}
[0.300239] (-) TimerEvent: {}
[0.320806] (igus_rebel) StdoutLine: {'line': b'2: from launch.substitutions import Command, FindExecutable, LaunchConfiguration\n'}
[0.321009] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321109] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.321187] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321258] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.321328] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321398] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.321467] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321534] (igus_rebel) StdoutLine: {'line': b'2: from launch.launch_description_sources import PythonLaunchDescriptionSource\n'}
[0.321601] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321667] (igus_rebel) StdoutLine: {'line': b'2: from ament_index_python.packages import get_package_share_directory\n'}
[0.321737] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321801] (igus_rebel) StdoutLine: {'line': b'2: import os\n'}
[0.321865] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321929] (igus_rebel) StdoutLine: {'line': b'2: import os\n'}
[0.321993] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.322064] (igus_rebel) StdoutLine: {'line': b'2:     env = {\n'}
[0.322130] (igus_rebel) StdoutLine: {'line': b'2:     ^\n'}
[0.322196] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.322258] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.322321] (igus_rebel) StdoutLine: {'line': b'2:         "hardware_protocol",\n'}
[0.322383] (igus_rebel) StdoutLine: {'line': b'2:         ^\n'}
[0.322446] (igus_rebel) StdoutLine: {'line': b'2:         default_value="rebel",\n'}
[0.322509] (igus_rebel) StdoutLine: {'line': b'2:                       ^\n'}
[0.322573] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.322640] (igus_rebel) StdoutLine: {'line': b'2:                  ^\n'}
[0.322706] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.322773] (igus_rebel) StdoutLine: {'line': b'2:                                   ^\n'}
[0.322848] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.322913] (igus_rebel) StdoutLine: {'line': b'2:                                             ^\n'}
[0.322977] (igus_rebel) StdoutLine: {'line': b'2:         description="Which hardware protocol or mock hardware should be used",\n'}
[0.323053] (igus_rebel) StdoutLine: {'line': b'2:                     ^\n'}
[0.323121] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.323190] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.323249] (igus_rebel) StdoutLine: {'line': b'2:     igus_rebel_pkg = get_package_share_directory("igus_rebel")\n'}
[0.323298] (igus_rebel) StdoutLine: {'line': b'2:                                                  ^\n'}
[0.323352] (igus_rebel) StdoutLine: {'line': b'2:     igus_rebel_desc_pkg = get_package_share_directory("igus_rebel_description")\n'}
[0.323404] (igus_rebel) StdoutLine: {'line': b'2:                                                       ^\n'}
[0.323454] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.323504] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.323554] (igus_rebel) StdoutLine: {'line': b'2:     controller_config_path = os.path.join(igus_rebel_pkg, "config", "controller.yaml")\n'}
[0.323603] (igus_rebel) StdoutLine: {'line': b'2:                                                           ^\n'}
[0.323655] (igus_rebel) StdoutLine: {'line': b'2:     controller_config_path = os.path.join(igus_rebel_pkg, "config", "controller.yaml")\n'}
[0.323704] (igus_rebel) StdoutLine: {'line': b'2:                                                                     ^\n'}
[0.323755] (igus_rebel) StdoutLine: {'line': b'2:     robot_description = {"robot_description" : Command(\n'}
[0.323805] (igus_rebel) StdoutLine: {'line': b'2:                          ^\n'}
[0.323855] (igus_rebel) StdoutLine: {'line': b'2:     robot_description = {"robot_description" : Command(\n'}
[0.323906] (igus_rebel) StdoutLine: {'line': b'2:                                             ^\n'}
[0.323954] (igus_rebel) StdoutLine: {'line': b'2:             FindExecutable(name="xacro"),\n'}
[0.323987] (igus_rebel) StdoutLine: {'line': b'2:                                 ^\n'}
[0.324021] (igus_rebel) StdoutLine: {'line': b'2:             " ",\n'}
[0.324060] (igus_rebel) StdoutLine: {'line': b'2:             ^\n'}
[0.324098] (igus_rebel) StdoutLine: {'line': b'2:             " hardware_protocol:=",\n'}
[0.324134] (igus_rebel) StdoutLine: {'line': b'2:             ^\n'}
[0.324167] (igus_rebel) StdoutLine: {'line': b'2:             LaunchConfiguration("hardware_protocol"),\n'}
[0.324203] (igus_rebel) StdoutLine: {'line': b'2:                                 ^\n'}
[0.324238] (igus_rebel) StdoutLine: {'line': b'2:         \n'}
[0.324272] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.324308] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.324341] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.324375] (igus_rebel) StdoutLine: {'line': b'2:         executable="ros2_control_node",\n'}
[0.324409] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.324443] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.324478] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.324514] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.324548] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.324581] (igus_rebel) StdoutLine: {'line': b'2:         package="robot_state_publisher",\n'}
[0.324615] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.324648] (igus_rebel) StdoutLine: {'line': b'2:         executable="robot_state_publisher",\n'}
[0.324682] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.324714] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.324747] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.324778] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.324812] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.324845] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.324881] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.324915] (igus_rebel) StdoutLine: {'line': b'2:         executable="spawner",\n'}
[0.324943] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.324973] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.325002] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.325033] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.325078] (igus_rebel) StdoutLine: {'line': b'2:                                               ^\n'}
[0.325110] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.325143] (igus_rebel) StdoutLine: {'line': b'2:                                                                       ^\n'}
[0.325173] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.325203] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.325233] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.325262] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.325292] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.325323] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.325356] (igus_rebel) StdoutLine: {'line': b'2:         executable="spawner",\n'}
[0.325386] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.325416] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.325447] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.325478] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.325507] (igus_rebel) StdoutLine: {'line': b'2:                                            ^\n'}
[0.325537] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.325566] (igus_rebel) StdoutLine: {'line': b'2:                                                                    ^\n'}
[0.325596] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.325625] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.325654] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.325683] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.325712] (igus_rebel) StdoutLine: {'line': b'2:     ^\n'}
[0.325743] (igus_rebel) StdoutLine: {'line': b'2:         ^\n'}
[0.325772] (igus_rebel) StdoutLine: {'line': b"2: 1     E203 whitespace before ':'\n"}
[0.325801] (igus_rebel) StdoutLine: {'line': b"2: 2     F401 'launch.actions.IncludeLaunchDescription' imported but unused\n"}
[0.325831] (igus_rebel) StdoutLine: {'line': b"2: 1     F841 local variable 'env' is assigned to but never used\n"}
[0.325861] (igus_rebel) StdoutLine: {'line': b"2: 4     I100 Import statements are in the wrong order. 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration' should be before 'from launch_ros.actions import Node'\n"}
[0.325893] (igus_rebel) StdoutLine: {'line': b'2: 1     I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.325923] (igus_rebel) StdoutLine: {'line': b"2: 1     I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from ament_index_python.packages import get_package_share_directory' is identified as Third Party.\n"}
[0.325952] (igus_rebel) StdoutLine: {'line': b'2: 33    Q000 Double quotes found but single quotes preferred\n'}
[0.325982] (igus_rebel) StdoutLine: {'line': b'2: 1     W292 no newline at end of file\n'}
[0.326012] (igus_rebel) StdoutLine: {'line': b'2: 9     W293 blank line contains whitespace\n'}
[0.326041] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326080] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:3:1: I100 Import statements are in the wrong order. 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration' should be before 'from launch_ros.actions import Node'\n"}
[0.326113] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326142] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:4:1: I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.326172] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326201] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:4:1: I100 Import statements are in the wrong order. 'from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument' should be before 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration'\n"}
[0.326238] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326268] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:4:1: F401 'launch.actions.IncludeLaunchDescription' imported but unused\n"}
[0.326298] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326327] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:5:1: F401 'launch.launch_description_sources.PythonLaunchDescriptionSource' imported but unused\n"}
[0.326357] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326385] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:6:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch.launch_description_sources import PythonLaunchDescriptionSource'\n"}
[0.326415] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326444] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:7:1: I100 Import statements are in the wrong order. 'import os' should be before 'from ament_index_python.packages import get_package_share_directory' and in a different group.\n"}
[0.326473] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326502] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:7:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from ament_index_python.packages import get_package_share_directory' is identified as Third Party.\n"}
[0.326532] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326561] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:11:5: F841 local variable 'env' is assigned to but never used\n"}
[0.326590] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326619] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:17:1: W293 blank line contains whitespace\n'}
[0.326648] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326677] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:19:9: Q000 Double quotes found but single quotes preferred\n'}
[0.326706] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326736] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:20:23: Q000 Double quotes found but single quotes preferred\n'}
[0.326764] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326793] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:18: Q000 Double quotes found but single quotes preferred\n'}
[0.326822] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326850] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:35: Q000 Double quotes found but single quotes preferred\n'}
[0.326879] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326909] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:45: Q000 Double quotes found but single quotes preferred\n'}
[0.326938] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326968] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:22:21: Q000 Double quotes found but single quotes preferred\n'}
[0.326999] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327028] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:24:1: W293 blank line contains whitespace\n'}
[0.327063] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327093] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:25:50: Q000 Double quotes found but single quotes preferred\n'}
[0.327125] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327154] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:26:55: Q000 Double quotes found but single quotes preferred\n'}
[0.327183] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327213] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:27:1: W293 blank line contains whitespace\n'}
[0.327243] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327273] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:28:59: Q000 Double quotes found but single quotes preferred\n'}
[0.327302] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327332] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:28:69: Q000 Double quotes found but single quotes preferred\n'}
[0.327362] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327391] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:36:26: Q000 Double quotes found but single quotes preferred\n'}
[0.327421] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327451] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:36:45: E203 whitespace before ':'\n"}
[0.327481] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327510] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:38:33: Q000 Double quotes found but single quotes preferred\n'}
[0.327541] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327572] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:39:13: Q000 Double quotes found but single quotes preferred\n'}
[0.327601] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327629] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:41:13: Q000 Double quotes found but single quotes preferred\n'}
[0.327658] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327687] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:42:33: Q000 Double quotes found but single quotes preferred\n'}
[0.327717] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327747] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:45:1: W293 blank line contains whitespace\n'}
[0.327777] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327806] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:47:17: Q000 Double quotes found but single quotes preferred\n'}
[0.327835] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327864] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:48:20: Q000 Double quotes found but single quotes preferred\n'}
[0.327894] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327923] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:54:16: Q000 Double quotes found but single quotes preferred\n'}
[0.327952] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327983] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:56:1: W293 blank line contains whitespace\n'}
[0.328012] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328042] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:58:17: Q000 Double quotes found but single quotes preferred\n'}
[0.328078] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328107] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:59:20: Q000 Double quotes found but single quotes preferred\n'}
[0.328136] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328166] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:62:16: Q000 Double quotes found but single quotes preferred\n'}
[0.328195] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328224] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:64:1: W293 blank line contains whitespace\n'}
[0.328254] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328283] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:66:17: Q000 Double quotes found but single quotes preferred\n'}
[0.328312] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328341] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:67:20: Q000 Double quotes found but single quotes preferred\n'}
[0.328370] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328401] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:20: Q000 Double quotes found but single quotes preferred\n'}
[0.328430] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328460] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:47: Q000 Double quotes found but single quotes preferred\n'}
[0.328489] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328519] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:71: Q000 Double quotes found but single quotes preferred\n'}
[0.328548] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328576] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:69:16: Q000 Double quotes found but single quotes preferred\n'}
[0.328611] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328642] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:71:1: W293 blank line contains whitespace\n'}
[0.328672] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328702] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:73:17: Q000 Double quotes found but single quotes preferred\n'}
[0.328732] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328761] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:74:20: Q000 Double quotes found but single quotes preferred\n'}
[0.328790] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328820] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:20: Q000 Double quotes found but single quotes preferred\n'}
[0.328850] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328880] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:44: Q000 Double quotes found but single quotes preferred\n'}
[0.328909] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328939] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:68: Q000 Double quotes found but single quotes preferred\n'}
[0.328968] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.328998] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:76:16: Q000 Double quotes found but single quotes preferred\n'}
[0.329027] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.329062] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:78:1: W293 blank line contains whitespace\n'}
[0.329093] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.329123] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:86:1: W293 blank line contains whitespace\n'}
[0.329152] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.329182] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:86:5: W292 no newline at end of file\n'}
[0.329212] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.329244] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.329274] (igus_rebel) StdoutLine: {'line': b'2: 1 files checked\n'}
[0.329304] (igus_rebel) StdoutLine: {'line': b'2: 53 errors\n'}
[0.329334] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.329363] (igus_rebel) StdoutLine: {'line': b"2: 'E'-type errors: 1\n"}
[0.329393] (igus_rebel) StdoutLine: {'line': b"2: 'F'-type errors: 3\n"}
[0.329422] (igus_rebel) StdoutLine: {'line': b"2: 'I'-type errors: 6\n"}
[0.329453] (igus_rebel) StdoutLine: {'line': b"2: 'Q'-type errors: 33\n"}
[0.329483] (igus_rebel) StdoutLine: {'line': b"2: 'W'-type errors: 10\n"}
[0.329512] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.329541] (igus_rebel) StdoutLine: {'line': b'2: Checked files:\n'}
[0.329571] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.329600] (igus_rebel) StdoutLine: {'line': b'2: * ./launch/rebel.launch.py\n'}
[0.334036] (igus_rebel) StdoutLine: {'line': b'2: -- run_test.py: return code 1\n'}
[0.334177] (igus_rebel) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml'\n"}
[0.341162] (igus_rebel) StdoutLine: {'line': b'2/6 Test #2: flake8 ...........................***Failed    0.19 sec\n'}
[0.341259] (igus_rebel) StdoutLine: {'line': b'test 3\n'}
[0.341297] (igus_rebel) StdoutLine: {'line': b'    Start 3: lint_cmake\n'}
[0.341331] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.341371] (igus_rebel) StdoutLine: {'line': b'3: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/jazzy/bin/ament_lint_cmake" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml"\n'}
[0.341407] (igus_rebel) StdoutLine: {'line': b'3: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.341441] (igus_rebel) StdoutLine: {'line': b'3: Test timeout computed to be: 60\n'}
[0.374710] (igus_rebel) StdoutLine: {'line': b"3: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.374881] (igus_rebel) StdoutLine: {'line': b'3:  - /opt/ros/jazzy/bin/ament_lint_cmake --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml\n'}
[0.400333] (-) TimerEvent: {}
[0.416956] (igus_rebel) StdoutLine: {'line': b'3: CMakeLists.txt:6: Line ends in whitespace [whitespace/eol]\n'}
[0.417159] (igus_rebel) StdoutLine: {'line': b'3: \n'}
[0.417241] (igus_rebel) StdoutLine: {'line': b'3: \n'}
[0.417311] (igus_rebel) StdoutLine: {'line': b'3: 1 errors\n'}
[0.422964] (igus_rebel) StdoutLine: {'line': b'3: -- run_test.py: return code 1\n'}
[0.423158] (igus_rebel) StdoutLine: {'line': b"3: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml'\n"}
[0.430469] (igus_rebel) StdoutLine: {'line': b'3/6 Test #3: lint_cmake .......................***Failed    0.09 sec\n'}
[0.430573] (igus_rebel) StdoutLine: {'line': b'test 4\n'}
[0.430606] (igus_rebel) StdoutLine: {'line': b'    Start 4: pep257\n'}
[0.430639] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.430673] (igus_rebel) StdoutLine: {'line': b'4: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_pep257/pep257.txt" "--command" "/opt/ros/jazzy/bin/ament_pep257" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml"\n'}
[0.430710] (igus_rebel) StdoutLine: {'line': b'4: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.430784] (igus_rebel) StdoutLine: {'line': b'4: Test timeout computed to be: 60\n'}
[0.469680] (igus_rebel) StdoutLine: {'line': b"4: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.469883] (igus_rebel) StdoutLine: {'line': b'4:  - /opt/ros/jazzy/bin/ament_pep257 --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml\n'}
[0.500456] (-) TimerEvent: {}
[0.537136] (igus_rebel) StdoutLine: {'line': b'4: checking ./launch/rebel.launch.py\n'}
[0.537373] (igus_rebel) StdoutLine: {'line': b'4: No problems found\n'}
[0.546240] (igus_rebel) StdoutLine: {'line': b'4: -- run_test.py: return code 0\n'}
[0.546414] (igus_rebel) StdoutLine: {'line': b"4: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml'\n"}
[0.552688] (igus_rebel) StdoutLine: {'line': b'4/6 Test #4: pep257 ...........................   Passed    0.12 sec\n'}
[0.552888] (igus_rebel) StdoutLine: {'line': b'test 5\n'}
[0.553008] (igus_rebel) StdoutLine: {'line': b'    Start 5: uncrustify\n'}
[0.553206] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.553254] (igus_rebel) StdoutLine: {'line': b'5: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_uncrustify/uncrustify.txt" "--command" "/opt/ros/jazzy/bin/ament_uncrustify" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml"\n'}
[0.553300] (igus_rebel) StdoutLine: {'line': b'5: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.553331] (igus_rebel) StdoutLine: {'line': b'5: Test timeout computed to be: 60\n'}
[0.592751] (igus_rebel) StdoutLine: {'line': b"5: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.592822] (igus_rebel) StdoutLine: {'line': b'5:  - /opt/ros/jazzy/bin/ament_uncrustify --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml\n'}
[0.600602] (-) TimerEvent: {}
[0.700849] (-) TimerEvent: {}
[0.745531] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/CriKeywords.hpp':\n"}
[0.745737] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.745831] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/CriKeywords.hpp\n'}
[0.745904] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/CriKeywords.hpp.uncrustify\n'}
[0.745972] (igus_rebel) StdoutLine: {'line': b'5: @@ -8,4 +8,4 @@\n'}
[0.746041] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriKeywords\n'}
[0.746134] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.746206] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string START = "CRISTART";\n'}
[0.746275] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string END = "CRIEND";\n'}
[0.746342] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriKeywords\n'}
[0.746411] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.746481] (igus_rebel) StdoutLine: {'line': b'5: +const std::string START = "CRISTART";\n'}
[0.746547] (igus_rebel) StdoutLine: {'line': b'5: +const std::string END = "CRIEND";\n'}
[0.746614] (igus_rebel) StdoutLine: {'line': b'5: @@ -13,14 +13,14 @@\n'}
[0.746680] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_STATUS = "STATUS";\n'}
[0.746744] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_OPINFO = "OPINFO";\n'}
[0.746807] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_GSIG = "GSIG";\n'}
[0.746910] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_GRIPPERSTATE = "GRIPPERSTATE";\n'}
[0.746965] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_RUNSTATE = "RUNSTATE";\n'}
[0.746999] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_MESSAGE = "MESSAGE";\n'}
[0.747030] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMD = "CMD";\n'}
[0.747066] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CONFIG = "CONFIG";\n'}
[0.747098] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_INFO = "INFO";\n'}
[0.747125] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_LOGMSG = "LOGMSG";\n'}
[0.747153] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_VARIABLES = "VARIABLES";\n'}
[0.747181] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMDERROR = "CMDERROR";\n'}
[0.747577] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMDACK = "CMDACK";\n'}
[0.747668] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CYCLESTAT = "CYCLESTAT";\n'}
[0.747743] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_STATUS = "STATUS";\n'}
[0.747802] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_OPINFO = "OPINFO";\n'}
[0.747835] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_GSIG = "GSIG";\n'}
[0.747867] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_GRIPPERSTATE = "GRIPPERSTATE";\n'}
[0.747899] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_RUNSTATE = "RUNSTATE";\n'}
[0.748342] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_MESSAGE = "MESSAGE";\n'}
[0.748376] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMD = "CMD";\n'}
[0.748409] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CONFIG = "CONFIG";\n'}
[0.748442] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_INFO = "INFO";\n'}
[0.748475] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_LOGMSG = "LOGMSG";\n'}
[0.748508] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_VARIABLES = "VARIABLES";\n'}
[0.748540] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMDERROR = "CMDERROR";\n'}
[0.748572] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMDACK = "CMDACK";\n'}
[0.748604] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CYCLESTAT = "CYCLESTAT";\n'}
[0.748635] (igus_rebel) StdoutLine: {'line': b'5: @@ -28,15 +28,15 @@\n'}
[0.748668] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_MODE = "MODE";\n'}
[0.748701] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSJOINTSETPOINT = "POSJOINTSETPOINT";\n'}
[0.748734] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSJOINTCURRENT = "POSJOINTCURRENT";\n'}
[0.748766] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSCARTROBOT = "POSCARTROBOT";\n'}
[0.748797] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSCARTPLATTFORM = "POSCARTPLATTFORM";\n'}
[0.748828] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_OVERRIDE = "OVERRIDE";\n'}
[0.748859] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_DIN = "DIN";\n'}
[0.748890] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_DOUT = "DOUT";\n'}
[0.748920] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_ESTOP = "ESTOP";\n'}
[0.748951] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_SUPPLY = "SUPPLY";\n'}
[0.748981] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_CURRENTALL = "CURRENTALL";\n'}
[0.749012] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_CURRENTJOINTS = "CURRENTJOINTS";\n'}
[0.749046] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_ERROR = "ERROR";\n'}
[0.749079] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_KINSTATE = "KINSTATE";\n'}
[0.749109] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_FRAMEROBOT = "FRAMEROBOT";\n'}
[0.749139] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_MODE = "MODE";\n'}
[0.749170] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSJOINTSETPOINT = "POSJOINTSETPOINT";\n'}
[0.749202] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSJOINTCURRENT = "POSJOINTCURRENT";\n'}
[0.749233] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSCARTROBOT = "POSCARTROBOT";\n'}
[0.749264] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSCARTPLATTFORM = "POSCARTPLATTFORM";\n'}
[0.749294] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_OVERRIDE = "OVERRIDE";\n'}
[0.749324] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_DIN = "DIN";\n'}
[0.749355] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_DOUT = "DOUT";\n'}
[0.749386] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_ESTOP = "ESTOP";\n'}
[0.749417] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_SUPPLY = "SUPPLY";\n'}
[0.749446] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_CURRENTALL = "CURRENTALL";\n'}
[0.749477] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_CURRENTJOINTS = "CURRENTJOINTS";\n'}
[0.749507] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_ERROR = "ERROR";\n'}
[0.749539] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_KINSTATE = "KINSTATE";\n'}
[0.749571] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_FRAMEROBOT = "FRAMEROBOT";\n'}
[0.749603] (igus_rebel) StdoutLine: {'line': b'5: @@ -44,10 +44,10 @@\n'}
[0.749634] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_CONNECT = "Connect";\n'}
[0.749665] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_RESET = "Reset";\n'}
[0.749698] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_ENABLE = "Enable";\n'}
[0.749729] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DISABLE = "Disable";\n'}
[0.749760] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DISCONNECT = "Disconnect";\n'}
[0.749791] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_MOTIONTYPEJOINT = "MotionTypeJoint";\n'}
[0.749823] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_MOTIONTYPECARTBASE = "MotionTypeCartBase";\n'}
[0.749853] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_QUIT = "QUIT";\n'}
[0.749884] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_SETACTIVE = "SetActive";\n'}
[0.749914] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DOUT = "DOUT";\n'}
[0.749945] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_CONNECT = "Connect";\n'}
[0.749976] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_RESET = "Reset";\n'}
[0.750007] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_ENABLE = "Enable";\n'}
[0.750038] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DISABLE = "Disable";\n'}
[0.750074] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DISCONNECT = "Disconnect";\n'}
[0.750105] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_MOTIONTYPEJOINT = "MotionTypeJoint";\n'}
[0.750136] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_MOTIONTYPECARTBASE = "MotionTypeCartBase";\n'}
[0.750166] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_QUIT = "QUIT";\n'}
[0.750197] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_SETACTIVE = "SetActive";\n'}
[0.750228] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DOUT = "DOUT";\n'}
[0.750259] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,2 +55,2 @@\n'}
[0.750289] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string CONFIG_GETKINEMATICLIMITS = "GetKinematicLimits";\n'}
[0.750322] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string CONFIG_GETKINEMATICLIMITS_ANSWER = "KinematicLimits";\n'}
[0.750354] (igus_rebel) StdoutLine: {'line': b'5: +const std::string CONFIG_GETKINEMATICLIMITS = "GetKinematicLimits";\n'}
[0.750385] (igus_rebel) StdoutLine: {'line': b'5: +const std::string CONFIG_GETKINEMATICLIMITS_ANSWER = "KinematicLimits";\n'}
[0.750415] (igus_rebel) StdoutLine: {'line': b'5: @@ -58,5 +58,5 @@\n'}
[0.750445] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_JOINT = "joint";\n'}
[0.750476] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_CARTBASE = "cartbase";\n'}
[0.750507] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_CARTTOOL = "carttool";\n'}
[0.750538] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_PLATFORM = "platform";\n'}
[0.750569] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_FSM = "fsm";\n'}
[0.750599] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_JOINT = "joint";\n'}
[0.750629] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_CARTBASE = "cartbase";\n'}
[0.750659] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_CARTTOOL = "carttool";\n'}
[0.750690] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_PLATFORM = "platform";\n'}
[0.750722] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_FSM = "fsm";\n'}
[0.750753] (igus_rebel) StdoutLine: {'line': b'5: @@ -64,7 +64,7 @@\n'}
[0.750785] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_DEBUG = "DEBUG";\n'}
[0.750817] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_APP_INFO = "APP_INFO";\n'}
[0.750848] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_APP_ERROR = "APP_ERROR";\n'}
[0.750879] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_INFO = "INFO";\n'}
[0.750910] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_WARN = "WARN";\n'}
[0.750941] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_ERROR = "ERROR";\n'}
[0.750971] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_FATAL = "FATAL";\n'}
[0.751001] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_DEBUG = "DEBUG";\n'}
[0.751031] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_APP_INFO = "APP_INFO";\n'}
[0.751076] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_APP_ERROR = "APP_ERROR";\n'}
[0.751108] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_INFO = "INFO";\n'}
[0.751139] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_WARN = "WARN";\n'}
[0.751169] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_ERROR = "ERROR";\n'}
[0.751200] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_FATAL = "FATAL";\n'}
[0.751230] (igus_rebel) StdoutLine: {'line': b'5: @@ -72,3 +72,3 @@\n'}
[0.751499] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string VARIABLES_NR_VARIABLE = "ValueNrVariable";\n'}
[0.751535] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string VARIABLES_POS_VARIABLE = "ValuePosVariable";\n'}
[0.751568] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.751601] (igus_rebel) StdoutLine: {'line': b'5: +const std::string VARIABLES_NR_VARIABLE = "ValueNrVariable";\n'}
[0.751633] (igus_rebel) StdoutLine: {'line': b'5: +const std::string VARIABLES_POS_VARIABLE = "ValuePosVariable";\n'}
[0.751663] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.751693] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.751725] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/CriMessages.hpp':\n"}
[0.751756] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.751786] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/CriMessages.hpp\n'}
[0.751817] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/CriMessages.hpp.uncrustify\n'}
[0.751848] (igus_rebel) StdoutLine: {'line': b'5: @@ -21,238 +21,241 @@\n'}
[0.751878] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriMessages\n'}
[0.752114] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.752156] (igus_rebel) StdoutLine: {'line': b'5: -        enum class MessageType\n'}
[0.752188] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.752220] (igus_rebel) StdoutLine: {'line': b'5: -            STATUS,\n'}
[0.752252] (igus_rebel) StdoutLine: {'line': b'5: -            OPINFO,\n'}
[0.752285] (igus_rebel) StdoutLine: {'line': b'5: -            GSIG,\n'}
[0.752317] (igus_rebel) StdoutLine: {'line': b'5: -            GRIPPERSTATE,\n'}
[0.752349] (igus_rebel) StdoutLine: {'line': b'5: -            RUNSTATE,\n'}
[0.752379] (igus_rebel) StdoutLine: {'line': b'5: -            MESSAGE,\n'}
[0.752411] (igus_rebel) StdoutLine: {'line': b'5: -            CMD,\n'}
[0.752444] (igus_rebel) StdoutLine: {'line': b'5: -            CONFIG,\n'}
[0.752477] (igus_rebel) StdoutLine: {'line': b'5: -            INFO,\n'}
[0.752510] (igus_rebel) StdoutLine: {'line': b'5: -            LOGMSG,\n'}
[0.752542] (igus_rebel) StdoutLine: {'line': b'5: -            VARIABLES,\n'}
[0.752574] (igus_rebel) StdoutLine: {'line': b'5: -            CMDERROR,\n'}
[0.752606] (igus_rebel) StdoutLine: {'line': b'5: -            CMDACK,\n'}
[0.752637] (igus_rebel) StdoutLine: {'line': b'5: -            CYCLESTAT,\n'}
[0.752669] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.752702] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.752732] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.752762] (igus_rebel) StdoutLine: {'line': b'5: -        enum class Mode\n'}
[0.752792] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.752823] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT,\n'}
[0.752853] (igus_rebel) StdoutLine: {'line': b'5: -            CARTBASE,\n'}
[0.752882] (igus_rebel) StdoutLine: {'line': b'5: -            CARTTOOL,\n'}
[0.752911] (igus_rebel) StdoutLine: {'line': b'5: -            PLATFORM,\n'}
[0.752939] (igus_rebel) StdoutLine: {'line': b'5: -            FSM,\n'}
[0.752968] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.752997] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.753025] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.753059] (igus_rebel) StdoutLine: {'line': b'5: -        enum class Kinstate\n'}
[0.753193] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.753228] (igus_rebel) StdoutLine: {'line': b'5: -            NO_ERROR = 0,\n'}
[0.753259] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT_LIMIT_MIN = 13,\n'}
[0.753292] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT_LIMIT_MAX = 14,\n'}
[0.753324] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_CENTER = 21,\n'}
[0.753356] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_REACH = 23,\n'}
[0.753388] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_WRIST = 24,\n'}
[0.753419] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_1 = 30,\n'}
[0.753449] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_2 = 31,\n'}
[0.753479] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_3 = 32,\n'}
[0.753509] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_4 = 33,\n'}
[0.753540] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_5 = 34,\n'}
[0.753570] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_6 = 35,\n'}
[0.753600] (igus_rebel) StdoutLine: {'line': b'5: -            MOTION_NOT_ALLOWED = 99,\n'}
[0.753631] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.753662] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.753691] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.753721] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ErrorJoint\n'}
[0.753750] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.753780] (igus_rebel) StdoutLine: {'line': b'5: -            TEMP = 1,       // OverTemperature\n'}
[0.753810] (igus_rebel) StdoutLine: {'line': b'5: -            ESTOP_LOWV = 2, // Energy supply too low\n'}
[0.753840] (igus_rebel) StdoutLine: {'line': b'5: -            MNE = 4,        // Motor not enabled\n'}
[0.753870] (igus_rebel) StdoutLine: {'line': b'5: -            COM = 8,        // Communication watch dog\n'}
[0.753901] (igus_rebel) StdoutLine: {'line': b'5: -            POS = 16,       // Position lag\n'}
[0.753930] (igus_rebel) StdoutLine: {'line': b'5: -            ENC = 32,       // Encoder Error\n'}
[0.753959] (igus_rebel) StdoutLine: {'line': b'5: -            OC = 64,        // Overcurrent\n'}
[0.753988] (igus_rebel) StdoutLine: {'line': b'5: -            DRV = 128       // Driver Error\n'}
[0.754019] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.754058] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.754090] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ConfigType\n'}
[0.754121] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.754150] (igus_rebel) StdoutLine: {'line': b'5: -            KINEMATICLIMITS,\n'}
[0.754180] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.754209] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.754238] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.754267] (igus_rebel) StdoutLine: {'line': b'5: -        enum class LogLevel\n'}
[0.754298] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.754328] (igus_rebel) StdoutLine: {'line': b'5: -            DEBUG,\n'}
[0.754357] (igus_rebel) StdoutLine: {'line': b'5: -            APP_INFO,\n'}
[0.754386] (igus_rebel) StdoutLine: {'line': b'5: -            APP_ERROR,\n'}
[0.754417] (igus_rebel) StdoutLine: {'line': b'5: -            INFO,\n'}
[0.754446] (igus_rebel) StdoutLine: {'line': b'5: -            WARN,\n'}
[0.754476] (igus_rebel) StdoutLine: {'line': b'5: -            ERROR,\n'}
[0.754505] (igus_rebel) StdoutLine: {'line': b'5: -            FATAL,\n'}
[0.754534] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.754563] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.754592] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.754622] (igus_rebel) StdoutLine: {'line': b'5: -        class CriMessage\n'}
[0.754651] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.754681] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.754710] (igus_rebel) StdoutLine: {'line': b'5: -            MessageType GetType()\n'}
[0.754739] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.754770] (igus_rebel) StdoutLine: {'line': b'5: -                return type;\n'}
[0.754798] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.754827] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.754856] (igus_rebel) StdoutLine: {'line': b'5: -            static MessageType GetMessageType(const std::string &);\n'}
[0.754886] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.754914] (igus_rebel) StdoutLine: {'line': b'5: -        protected:\n'}
[0.754942] (igus_rebel) StdoutLine: {'line': b'5: -            MessageType type;\n'}
[0.754970] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CriMessage(const MessageType &_type) : type(_type) {}\n'}
[0.754999] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.755028] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ParseMessageString(const std::string &, const std::string::size_type &,\n'}
[0.755063] (igus_rebel) StdoutLine: {'line': b'5: -                                                  const std::string::size_type &, const std::string::size_type &);\n'}
[0.755094] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.755124] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T, std::size_t N>\n'}
[0.755153] (igus_rebel) StdoutLine: {'line': b'5: -            static void FillArray(std::array<T, N> &, const std::string &);\n'}
[0.755181] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.755211] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T>\n'}
[0.755241] (igus_rebel) StdoutLine: {'line': b'5: -            void FillVector(std::vector<T> &, const std::string &);\n'}
[0.755272] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.755302] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T, std::size_t N>\n'}
[0.755332] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ArrayToString(std::array<T, N> &);\n'}
[0.755480] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.755514] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T>\n'}
[0.755545] (igus_rebel) StdoutLine: {'line': b'5: -            std::string VectorToString(std::vector<T> &vector);\n'}
[0.755578] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.755608] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.755639] (igus_rebel) StdoutLine: {'line': b'5: -        class Status : public CriMessage\n'}
[0.755669] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.755699] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.755729] (igus_rebel) StdoutLine: {'line': b'5: -            Mode mode;\n'}
[0.755761] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 16> posJointSetPoint;\n'}
[0.755793] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 16> posJointCurrent;\n'}
[0.755824] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 6> posCartRobot;\n'}
[0.755853] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 3> posCartPlattform;\n'}
[0.756305] (igus_rebel) StdoutLine: {'line': b'5: -            float overrideValue;\n'}
[0.756341] (igus_rebel) StdoutLine: {'line': b'5: -            int din;\n'}
[0.756377] (igus_rebel) StdoutLine: {'line': b'5: -            int dout;\n'}
[0.756415] (igus_rebel) StdoutLine: {'line': b'5: -            int eStop;\n'}
[0.756450] (igus_rebel) StdoutLine: {'line': b'5: -            int supply;\n'}
[0.756485] (igus_rebel) StdoutLine: {'line': b'5: -            int currentall;\n'}
[0.756520] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<int, 16> currentjoints;\n'}
[0.756554] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorSummary;\n'}
[0.756586] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<int, 16> errorJoints;\n'}
[0.756618] (igus_rebel) StdoutLine: {'line': b'5: -            Kinstate kinstate;\n'}
[0.756651] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.756682] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Status(const std::string &);\n'}
[0.756715] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Status();\n'}
[0.756749] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ModeToString(const Mode &);\n'}
[0.756782] (igus_rebel) StdoutLine: {'line': b'5: -            void Print();\n'}
[0.756815] (igus_rebel) StdoutLine: {'line': b'5: -            void Log();\n'}
[0.756848] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.756882] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.756918] (igus_rebel) StdoutLine: {'line': b'5: -            std::string ToString();\n'}
[0.756950] (igus_rebel) StdoutLine: {'line': b'5: -            Mode GetMode(const std::string &);\n'}
[0.756983] (igus_rebel) StdoutLine: {'line': b'5: -            Kinstate GetKinstate(const std::string &);\n'}
[0.757016] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.757053] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757088] (igus_rebel) StdoutLine: {'line': b'5: -        class Message : public CriMessage\n'}
[0.757122] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.757156] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.757189] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Message(const std::string &);\n'}
[0.757222] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757253] (igus_rebel) StdoutLine: {'line': b'5: -            std::string message;\n'}
[0.757285] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.757317] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757349] (igus_rebel) StdoutLine: {'line': b'5: -        class Command : public CriMessage\n'}
[0.757381] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.757413] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.757445] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Command(const std::string &);\n'}
[0.757602] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757637] (igus_rebel) StdoutLine: {'line': b'5: -            std::string command;\n'}
[0.757669] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.757703] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757735] (igus_rebel) StdoutLine: {'line': b'5: -        class Info : public CriMessage\n'}
[0.757767] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.757799] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.757830] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Info(const std::string &);\n'}
[0.757864] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757896] (igus_rebel) StdoutLine: {'line': b'5: -            std::string info;\n'}
[0.757926] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.757957] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757988] (igus_rebel) StdoutLine: {'line': b'5: -        class LogMsg : public CriMessage\n'}
[0.758021] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.758058] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.758092] (igus_rebel) StdoutLine: {'line': b'5: -            explicit LogMsg(const std::string &);\n'}
[0.758126] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758159] (igus_rebel) StdoutLine: {'line': b'5: -            LogLevel logLevel;\n'}
[0.758193] (igus_rebel) StdoutLine: {'line': b'5: -            long timestamp;\n'}
[0.758225] (igus_rebel) StdoutLine: {'line': b'5: -            std::string logMsg;\n'}
[0.758257] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758288] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.758321] (igus_rebel) StdoutLine: {'line': b'5: -            LogLevel GetLogLevel(const std::string &);\n'}
[0.758353] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.758384] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758416] (igus_rebel) StdoutLine: {'line': b'5: -        class Variables : public CriMessage\n'}
[0.758448] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.758479] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.758511] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Variables(const std::string &);\n'}
[0.758544] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758576] (igus_rebel) StdoutLine: {'line': b'5: -            struct NumberVariable\n'}
[0.758607] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.758637] (igus_rebel) StdoutLine: {'line': b'5: -                std::string name;\n'}
[0.758670] (igus_rebel) StdoutLine: {'line': b'5: -                double value;\n'}
[0.758701] (igus_rebel) StdoutLine: {'line': b'5: -            };\n'}
[0.758732] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758765] (igus_rebel) StdoutLine: {'line': b'5: -            struct PositionVariable\n'}
[0.758797] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.758828] (igus_rebel) StdoutLine: {'line': b'5: -                std::string name;\n'}
[0.758860] (igus_rebel) StdoutLine: {'line': b'5: -                std::array<double, 15> values;\n'}
[0.758892] (igus_rebel) StdoutLine: {'line': b'5: -            };\n'}
[0.758923] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758955] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<NumberVariable> numberVariables;\n'}
[0.758986] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<PositionVariable> positionVariables;\n'}
[0.759018] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759054] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.759089] (igus_rebel) StdoutLine: {'line': b'5: -            std::string GetMatchString(const std::smatch &);\n'}
[0.759120] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.759150] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759181] (igus_rebel) StdoutLine: {'line': b'5: -        class CmdError : public CriMessage\n'}
[0.759211] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.759241] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.759271] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CmdError(const std::string &);\n'}
[0.759301] (igus_rebel) StdoutLine: {'line': b'5: -            int recjectedCmd;\n'}
[0.759331] (igus_rebel) StdoutLine: {'line': b'5: -            std::string error;\n'}
[0.759361] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.759391] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759421] (igus_rebel) StdoutLine: {'line': b'5: -        class CmdAck : public CriMessage\n'}
[0.759669] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.759708] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.759739] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CmdAck(const std::string &);\n'}
[0.759771] (igus_rebel) StdoutLine: {'line': b'5: -            int acceptedCmd;\n'}
[0.759802] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.759833] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759865] (igus_rebel) StdoutLine: {'line': b'5: -        class Cyclestat : public CriMessage\n'}
[0.759897] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.759928] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.759960] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Cyclestat(const std::string &);\n'}
[0.760118] (igus_rebel) StdoutLine: {'line': b'5: -            int cycletime;\n'}
[0.760152] (igus_rebel) StdoutLine: {'line': b'5: -            int workload;\n'}
[0.760184] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.760218] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.760252] (igus_rebel) StdoutLine: {'line': b'5: -        class Config : public CriMessage\n'}
[0.760284] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.760317] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.760349] (igus_rebel) StdoutLine: {'line': b'5: -            ConfigType configType;\n'}
[0.760382] (igus_rebel) StdoutLine: {'line': b'5: -            static ConfigType GetConfigType(const std::string &);\n'}
[0.760414] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.760445] (igus_rebel) StdoutLine: {'line': b'5: -        protected:\n'}
[0.760476] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Config(const ConfigType &_configType) : CriMessage(MessageType::CONFIG), configType(_configType) {}\n'}
[0.760508] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.760540] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.760571] (igus_rebel) StdoutLine: {'line': b'5: -        class KinematicLimits : public Config\n'}
[0.760603] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.760633] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.760663] (igus_rebel) StdoutLine: {'line': b'5: -            explicit KinematicLimits(const std::string &);\n'}
[0.760695] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriMessages\n'}
[0.760727] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.760760] (igus_rebel) StdoutLine: {'line': b'5: +enum class MessageType\n'}
[0.760795] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.760831] (igus_rebel) StdoutLine: {'line': b'5: +  STATUS,\n'}
[0.760862] (igus_rebel) StdoutLine: {'line': b'5: +  OPINFO,\n'}
[0.760893] (igus_rebel) StdoutLine: {'line': b'5: +  GSIG,\n'}
[0.760923] (igus_rebel) StdoutLine: {'line': b'5: +  GRIPPERSTATE,\n'}
[0.760952] (igus_rebel) StdoutLine: {'line': b'5: +  RUNSTATE,\n'}
[0.760983] (igus_rebel) StdoutLine: {'line': b'5: +  MESSAGE,\n'}
[0.761013] (igus_rebel) StdoutLine: {'line': b'5: +  CMD,\n'}
[0.761048] (igus_rebel) StdoutLine: {'line': b'5: +  CONFIG,\n'}
[0.761081] (igus_rebel) StdoutLine: {'line': b'5: +  INFO,\n'}
[0.761111] (igus_rebel) StdoutLine: {'line': b'5: +  LOGMSG,\n'}
[0.761141] (igus_rebel) StdoutLine: {'line': b'5: +  VARIABLES,\n'}
[0.761170] (igus_rebel) StdoutLine: {'line': b'5: +  CMDERROR,\n'}
[0.761200] (igus_rebel) StdoutLine: {'line': b'5: +  CMDACK,\n'}
[0.761233] (igus_rebel) StdoutLine: {'line': b'5: +  CYCLESTAT,\n'}
[0.761266] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.761298] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.761333] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.761367] (igus_rebel) StdoutLine: {'line': b'5: +enum class Mode\n'}
[0.761400] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.761434] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT,\n'}
[0.761466] (igus_rebel) StdoutLine: {'line': b'5: +  CARTBASE,\n'}
[0.761500] (igus_rebel) StdoutLine: {'line': b'5: +  CARTTOOL,\n'}
[0.761529] (igus_rebel) StdoutLine: {'line': b'5: +  PLATFORM,\n'}
[0.761557] (igus_rebel) StdoutLine: {'line': b'5: +  FSM,\n'}
[0.761587] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.761617] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.761646] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.761676] (igus_rebel) StdoutLine: {'line': b'5: +enum class Kinstate\n'}
[0.761704] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.761733] (igus_rebel) StdoutLine: {'line': b'5: +  NO_ERROR = 0,\n'}
[0.761763] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT_LIMIT_MIN = 13,\n'}
[0.761794] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT_LIMIT_MAX = 14,\n'}
[0.761823] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_CENTER = 21,\n'}
[0.761853] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_REACH = 23,\n'}
[0.762850] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_WRIST = 24,\n'}
[0.762892] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_1 = 30,\n'}
[0.762926] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_2 = 31,\n'}
[0.762960] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_3 = 32,\n'}
[0.762994] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_4 = 33,\n'}
[0.763027] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_5 = 34,\n'}
[0.763089] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_6 = 35,\n'}
[0.763122] (igus_rebel) StdoutLine: {'line': b'5: +  MOTION_NOT_ALLOWED = 99,\n'}
[0.763156] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.763190] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.763226] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.763263] (igus_rebel) StdoutLine: {'line': b'5: +enum class ErrorJoint\n'}
[0.763298] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.763334] (igus_rebel) StdoutLine: {'line': b'5: +  TEMP = 1,                 // OverTemperature\n'}
[0.763369] (igus_rebel) StdoutLine: {'line': b'5: +  ESTOP_LOWV = 2,           // Energy supply too low\n'}
[0.763405] (igus_rebel) StdoutLine: {'line': b'5: +  MNE = 4,                  // Motor not enabled\n'}
[0.763440] (igus_rebel) StdoutLine: {'line': b'5: +  COM = 8,                  // Communication watch dog\n'}
[0.763475] (igus_rebel) StdoutLine: {'line': b'5: +  POS = 16,                 // Position lag\n'}
[0.763509] (igus_rebel) StdoutLine: {'line': b'5: +  ENC = 32,                 // Encoder Error\n'}
[0.763544] (igus_rebel) StdoutLine: {'line': b'5: +  OC = 64,                  // Overcurrent\n'}
[0.763578] (igus_rebel) StdoutLine: {'line': b'5: +  DRV = 128                 // Driver Error\n'}
[0.763609] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.763642] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.763673] (igus_rebel) StdoutLine: {'line': b'5: +enum class ConfigType\n'}
[0.763703] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.763734] (igus_rebel) StdoutLine: {'line': b'5: +  KINEMATICLIMITS,\n'}
[0.763764] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.763794] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.763826] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.763859] (igus_rebel) StdoutLine: {'line': b'5: +enum class LogLevel\n'}
[0.763891] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.763921] (igus_rebel) StdoutLine: {'line': b'5: +  DEBUG,\n'}
[0.763951] (igus_rebel) StdoutLine: {'line': b'5: +  APP_INFO,\n'}
[0.763982] (igus_rebel) StdoutLine: {'line': b'5: +  APP_ERROR,\n'}
[0.764012] (igus_rebel) StdoutLine: {'line': b'5: +  INFO,\n'}
[0.764047] (igus_rebel) StdoutLine: {'line': b'5: +  WARN,\n'}
[0.764081] (igus_rebel) StdoutLine: {'line': b'5: +  ERROR,\n'}
[0.764111] (igus_rebel) StdoutLine: {'line': b'5: +  FATAL,\n'}
[0.764141] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.773256] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.773341] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.773382] (igus_rebel) StdoutLine: {'line': b'5: +class CriMessage\n'}
[0.773412] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.773442] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.773471] (igus_rebel) StdoutLine: {'line': b'5: +  MessageType GetType()\n'}
[0.773498] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.773601] (igus_rebel) StdoutLine: {'line': b'5: +    return type;\n'}
[0.773638] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.773671] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.773703] (igus_rebel) StdoutLine: {'line': b'5: +  static MessageType GetMessageType(const std::string &);\n'}
[0.773735] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.773765] (igus_rebel) StdoutLine: {'line': b'5: +protected:\n'}
[0.773795] (igus_rebel) StdoutLine: {'line': b'5: +  MessageType type;\n'}
[0.773826] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CriMessage(const MessageType & _type)\n'}
[0.773959] (igus_rebel) StdoutLine: {'line': b'5: +  : type(_type) {}\n'}
[0.773991] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.774023] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ParseMessageString(\n'}
[0.774060] (igus_rebel) StdoutLine: {'line': b'5: +    const std::string &, const std::string::size_type &,\n'}
[0.774169] (igus_rebel) StdoutLine: {'line': b'5: +    const std::string::size_type &, const std::string::size_type &);\n'}
[0.774203] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.774235] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T, std::size_t N>\n'}
[0.774266] (igus_rebel) StdoutLine: {'line': b'5: +  static void FillArray(std::array<T, N> &, const std::string &);\n'}
[0.774296] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.774326] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T>\n'}
[0.774357] (igus_rebel) StdoutLine: {'line': b'5: +  void FillVector(std::vector<T> &, const std::string &);\n'}
[0.774388] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.774419] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T, std::size_t N>\n'}
[0.774449] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ArrayToString(std::array<T, N> &);\n'}
[0.774479] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.774509] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T>\n'}
[0.774539] (igus_rebel) StdoutLine: {'line': b'5: +  std::string VectorToString(std::vector<T> & vector);\n'}
[0.774570] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.774601] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.774631] (igus_rebel) StdoutLine: {'line': b'5: +class Status : public CriMessage\n'}
[0.774661] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.774690] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.774721] (igus_rebel) StdoutLine: {'line': b'5: +  Mode mode;\n'}
[0.774750] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 16> posJointSetPoint;\n'}
[0.774781] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 16> posJointCurrent;\n'}
[0.774812] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 6> posCartRobot;\n'}
[0.774842] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 3> posCartPlattform;\n'}
[0.774873] (igus_rebel) StdoutLine: {'line': b'5: +  float overrideValue;\n'}
[0.774902] (igus_rebel) StdoutLine: {'line': b'5: +  int din;\n'}
[0.774933] (igus_rebel) StdoutLine: {'line': b'5: +  int dout;\n'}
[0.774962] (igus_rebel) StdoutLine: {'line': b'5: +  int eStop;\n'}
[0.774992] (igus_rebel) StdoutLine: {'line': b'5: +  int supply;\n'}
[0.775022] (igus_rebel) StdoutLine: {'line': b'5: +  int currentall;\n'}
[0.775057] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> currentjoints;\n'}
[0.775090] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorSummary;\n'}
[0.775121] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> errorJoints;\n'}
[0.775150] (igus_rebel) StdoutLine: {'line': b'5: +  Kinstate kinstate;\n'}
[0.775179] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.775208] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Status(const std::string &);\n'}
[0.775238] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Status();\n'}
[0.775268] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ModeToString(const Mode &);\n'}
[0.775298] (igus_rebel) StdoutLine: {'line': b'5: +  void Print();\n'}
[0.775327] (igus_rebel) StdoutLine: {'line': b'5: +  void Log();\n'}
[0.775357] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.775387] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.775415] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ToString();\n'}
[0.775445] (igus_rebel) StdoutLine: {'line': b'5: +  Mode GetMode(const std::string &);\n'}
[0.775474] (igus_rebel) StdoutLine: {'line': b'5: +  Kinstate GetKinstate(const std::string &);\n'}
[0.775502] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.775531] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.775560] (igus_rebel) StdoutLine: {'line': b'5: +class Message : public CriMessage\n'}
[0.775591] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.775620] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.775651] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Message(const std::string &);\n'}
[0.775682] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.775712] (igus_rebel) StdoutLine: {'line': b'5: +  std::string message;\n'}
[0.775742] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.775772] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.775801] (igus_rebel) StdoutLine: {'line': b'5: +class Command : public CriMessage\n'}
[0.775830] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.775858] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.775887] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Command(const std::string &);\n'}
[0.775917] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.775944] (igus_rebel) StdoutLine: {'line': b'5: +  std::string command;\n'}
[0.775973] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.776001] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.776030] (igus_rebel) StdoutLine: {'line': b'5: +class Info : public CriMessage\n'}
[0.776063] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.776094] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.776123] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Info(const std::string &);\n'}
[0.776152] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.776181] (igus_rebel) StdoutLine: {'line': b'5: +  std::string info;\n'}
[0.776210] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.776238] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.776267] (igus_rebel) StdoutLine: {'line': b'5: +class LogMsg : public CriMessage\n'}
[0.776296] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.776325] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.776354] (igus_rebel) StdoutLine: {'line': b'5: +  explicit LogMsg(const std::string &);\n'}
[0.776386] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.776415] (igus_rebel) StdoutLine: {'line': b'5: +  LogLevel logLevel;\n'}
[0.776447] (igus_rebel) StdoutLine: {'line': b'5: +  long timestamp;\n'}
[0.776480] (igus_rebel) StdoutLine: {'line': b'5: +  std::string logMsg;\n'}
[0.776512] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.776543] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.776575] (igus_rebel) StdoutLine: {'line': b'5: +  LogLevel GetLogLevel(const std::string &);\n'}
[0.776607] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.776637] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.776666] (igus_rebel) StdoutLine: {'line': b'5: +class Variables : public CriMessage\n'}
[0.776696] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.776726] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.776755] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Variables(const std::string &);\n'}
[0.776785] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.776815] (igus_rebel) StdoutLine: {'line': b'5: +  struct NumberVariable\n'}
[0.776844] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.776875] (igus_rebel) StdoutLine: {'line': b'5: +    std::string name;\n'}
[0.776905] (igus_rebel) StdoutLine: {'line': b'5: +    double value;\n'}
[0.776934] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.776963] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.776992] (igus_rebel) StdoutLine: {'line': b'5: +  struct PositionVariable\n'}
[0.777021] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.777056] (igus_rebel) StdoutLine: {'line': b'5: +    std::string name;\n'}
[0.777088] (igus_rebel) StdoutLine: {'line': b'5: +    std::array<double, 15> values;\n'}
[0.777118] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.777147] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.777176] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<NumberVariable> numberVariables;\n'}
[0.777206] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<PositionVariable> positionVariables;\n'}
[0.777237] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.777266] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.777296] (igus_rebel) StdoutLine: {'line': b'5: +  std::string GetMatchString(const std::smatch &);\n'}
[0.777328] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.777358] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.777388] (igus_rebel) StdoutLine: {'line': b'5: +class CmdError : public CriMessage\n'}
[0.777417] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.777447] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.777476] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CmdError(const std::string &);\n'}
[0.777505] (igus_rebel) StdoutLine: {'line': b'5: +  int recjectedCmd;\n'}
[0.777535] (igus_rebel) StdoutLine: {'line': b'5: +  std::string error;\n'}
[0.777565] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.777595] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.777624] (igus_rebel) StdoutLine: {'line': b'5: +class CmdAck : public CriMessage\n'}
[0.777654] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.777684] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.777714] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CmdAck(const std::string &);\n'}
[0.777743] (igus_rebel) StdoutLine: {'line': b'5: +  int acceptedCmd;\n'}
[0.777772] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.777801] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.778405] (igus_rebel) StdoutLine: {'line': b'5: +class Cyclestat : public CriMessage\n'}
[0.778491] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.778566] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.778598] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Cyclestat(const std::string &);\n'}
[0.778629] (igus_rebel) StdoutLine: {'line': b'5: +  int cycletime;\n'}
[0.778661] (igus_rebel) StdoutLine: {'line': b'5: +  int workload;\n'}
[0.778913] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.778948] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.778978] (igus_rebel) StdoutLine: {'line': b'5: +class Config : public CriMessage\n'}
[0.779010] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.779040] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.779077] (igus_rebel) StdoutLine: {'line': b'5: +  ConfigType configType;\n'}
[0.779110] (igus_rebel) StdoutLine: {'line': b'5: +  static ConfigType GetConfigType(const std::string &);\n'}
[0.779143] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.779175] (igus_rebel) StdoutLine: {'line': b'5: +protected:\n'}
[0.779206] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Config(const ConfigType & _configType)\n'}
[0.779238] (igus_rebel) StdoutLine: {'line': b'5: +  : CriMessage(MessageType::CONFIG), configType(_configType) {}\n'}
[0.779268] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.779298] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.779328] (igus_rebel) StdoutLine: {'line': b'5: +class KinematicLimits : public Config\n'}
[0.779358] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.779388] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.779418] (igus_rebel) StdoutLine: {'line': b'5: +  explicit KinematicLimits(const std::string &);\n'}
[0.779448] (igus_rebel) StdoutLine: {'line': b'5: @@ -263,6 +266,5 @@\n'}
[0.779479] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<std::pair<float, float>> minMaxPairs;\n'}
[0.779510] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.779540] (igus_rebel) StdoutLine: {'line': b'5: -            std::string ToString();\n'}
[0.779571] (igus_rebel) StdoutLine: {'line': b'5: -            void Print();\n'}
[0.779600] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.779631] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.779660] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<std::pair<float, float>> minMaxPairs;\n'}
[0.779689] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.779720] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ToString();\n'}
[0.779749] (igus_rebel) StdoutLine: {'line': b'5: +  void Print();\n'}
[0.779779] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.779809] (igus_rebel) StdoutLine: {'line': b'5: @@ -269,0 +272 @@\n'}
[0.780047] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.780084] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.780115] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/Rebel.hpp':\n"}
[0.780253] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.780284] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/Rebel.hpp\n'}
[0.780317] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/Rebel.hpp.uncrustify\n'}
[0.780348] (igus_rebel) StdoutLine: {'line': b'5: @@ -20,8 +20,8 @@\n'}
[0.780378] (igus_rebel) StdoutLine: {'line': b'5: -    class Rebel : public SystemInterface\n'}
[0.780410] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.780441] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.780471] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ControlMode\n'}
[0.780502] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.780532] (igus_rebel) StdoutLine: {'line': b'5: -            POSITION,\n'}
[0.780561] (igus_rebel) StdoutLine: {'line': b'5: -            VELOCITY\n'}
[0.780591] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.780621] (igus_rebel) StdoutLine: {'line': b'5: +class Rebel : public SystemInterface\n'}
[0.780651] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.780680] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.780709] (igus_rebel) StdoutLine: {'line': b'5: +  enum class ControlMode\n'}
[0.780738] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.780767] (igus_rebel) StdoutLine: {'line': b'5: +    POSITION,\n'}
[0.780796] (igus_rebel) StdoutLine: {'line': b'5: +    VELOCITY\n'}
[0.780825] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.780857] (igus_rebel) StdoutLine: {'line': b'5: @@ -29,5 +29,5 @@\n'}
[0.780886] (igus_rebel) StdoutLine: {'line': b'5: -    private:\n'}
[0.780916] (igus_rebel) StdoutLine: {'line': b'5: -        rclcpp::Node::SharedPtr node_;\n'}
[0.780944] (igus_rebel) StdoutLine: {'line': b'5: -        \n'}
[0.780974] (igus_rebel) StdoutLine: {'line': b'5: -        std::shared_ptr<RebelSocket> rebelSocket;\n'}
[0.781003] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Status currentStatus;\n'}
[0.781032] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.781066] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Node::SharedPtr node_;\n'}
[0.781097] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.781127] (igus_rebel) StdoutLine: {'line': b'5: +  std::shared_ptr<RebelSocket> rebelSocket;\n'}
[0.781158] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Status currentStatus;\n'}
[0.781189] (igus_rebel) StdoutLine: {'line': b'5: @@ -36,2 +36,2 @@\n'}
[0.781221] (igus_rebel) StdoutLine: {'line': b'5: -        float j1, j2, j3, j4, j5, j6;\n'}
[0.781254] (igus_rebel) StdoutLine: {'line': b'5: -        ControlMode controlMode;\n'}
[0.781286] (igus_rebel) StdoutLine: {'line': b'5: +  float j1, j2, j3, j4, j5, j6;\n'}
[0.781320] (igus_rebel) StdoutLine: {'line': b'5: +  ControlMode controlMode;\n'}
[0.781353] (igus_rebel) StdoutLine: {'line': b'5: @@ -39,5 +39,5 @@\n'}
[0.781386] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueAlive;\n'}
[0.781419] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueMessage;\n'}
[0.781451] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread aliveThread;\n'}
[0.781482] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread messageThread;\n'}
[0.781513] (igus_rebel) StdoutLine: {'line': b'5: -        int aliveWaitMs;\n'}
[0.781544] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueAlive;\n'}
[0.781573] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueMessage;\n'}
[0.781603] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread aliveThread;\n'}
[0.781632] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread messageThread;\n'}
[0.781662] (igus_rebel) StdoutLine: {'line': b'5: +  int aliveWaitMs;\n'}
[0.781691] (igus_rebel) StdoutLine: {'line': b'5: @@ -45,3 +45,3 @@\n'}
[0.781720] (igus_rebel) StdoutLine: {'line': b'5: -        int current_ccnt;\n'}
[0.781750] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex cntLock;\n'}
[0.781778] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex aliveLock;\n'}
[0.781806] (igus_rebel) StdoutLine: {'line': b'5: +  int current_ccnt;\n'}
[0.781937] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex cntLock;\n'}
[0.781968] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex aliveLock;\n'}
[0.781997] (igus_rebel) StdoutLine: {'line': b'5: @@ -49,5 +49,5 @@\n'}
[0.782027] (igus_rebel) StdoutLine: {'line': b'5: -        double vel_cmd[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782063] (igus_rebel) StdoutLine: {'line': b'5: -        double pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782093] (igus_rebel) StdoutLine: {'line': b'5: -        double last_pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782121] (igus_rebel) StdoutLine: {'line': b'5: -        double vel[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782150] (igus_rebel) StdoutLine: {'line': b'5: -        double eff[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782177] (igus_rebel) StdoutLine: {'line': b'5: +  double vel_cmd[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782204] (igus_rebel) StdoutLine: {'line': b'5: +  double pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782235] (igus_rebel) StdoutLine: {'line': b'5: +  double last_pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782265] (igus_rebel) StdoutLine: {'line': b'5: +  double vel[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782296] (igus_rebel) StdoutLine: {'line': b'5: +  double eff[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.782327] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,3 +55,3 @@\n'}
[0.782359] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Kinstate lastKinstate;\n'}
[0.782391] (igus_rebel) StdoutLine: {'line': b'5: -        std::array<int, 16> lastErrorJoints;\n'}
[0.782423] (igus_rebel) StdoutLine: {'line': b'5: -        std::string kinstateMessage;\n'}
[0.782452] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Kinstate lastKinstate;\n'}
[0.782481] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> lastErrorJoints;\n'}
[0.782509] (igus_rebel) StdoutLine: {'line': b'5: +  std::string kinstateMessage;\n'}
[0.782538] (igus_rebel) StdoutLine: {'line': b'5: @@ -59 +59 @@\n'}
[0.782567] (igus_rebel) StdoutLine: {'line': b'5: -        std::unordered_map<int, std::string> unacknowledgedCommands;\n'}
[0.782596] (igus_rebel) StdoutLine: {'line': b'5: +  std::unordered_map<int, std::string> unacknowledgedCommands;\n'}
[0.782626] (igus_rebel) StdoutLine: {'line': b'5: @@ -62 +62 @@\n'}
[0.782655] (igus_rebel) StdoutLine: {'line': b'5: -        rclcpp::Service<igus_rebel_msgs::srv::SetDigitalOutput>::SharedPtr digital_output_srv_;\n'}
[0.782686] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Service<igus_rebel_msgs::srv::SetDigitalOutput>::SharedPtr digital_output_srv_;\n'}
[0.782716] (igus_rebel) StdoutLine: {'line': b'5: @@ -65,2 +65,2 @@\n'}
[0.782745] (igus_rebel) StdoutLine: {'line': b'5: -        void AliveThreadFunction();\n'}
[0.782774] (igus_rebel) StdoutLine: {'line': b'5: -        void MessageThreadFunction();\n'}
[0.782803] (igus_rebel) StdoutLine: {'line': b'5: +  void AliveThreadFunction();\n'}
[0.782831] (igus_rebel) StdoutLine: {'line': b'5: +  void MessageThreadFunction();\n'}
[0.782859] (igus_rebel) StdoutLine: {'line': b'5: @@ -69,4 +69,4 @@\n'}
[0.782887] (igus_rebel) StdoutLine: {'line': b'5: -        int Ccnt();\n'}
[0.782915] (igus_rebel) StdoutLine: {'line': b'5: -        void Command(const std::string &);\n'}
[0.782942] (igus_rebel) StdoutLine: {'line': b'5: -        void GetConfig(const std::string &);\n'}
[0.782971] (igus_rebel) StdoutLine: {'line': b'5: -        void SetControlMode(const ControlMode &);\n'}
[0.782999] (igus_rebel) StdoutLine: {'line': b'5: +  int Ccnt();\n'}
[0.783026] (igus_rebel) StdoutLine: {'line': b'5: +  void Command(const std::string &);\n'}
[0.783058] (igus_rebel) StdoutLine: {'line': b'5: +  void GetConfig(const std::string &);\n'}
[0.783087] (igus_rebel) StdoutLine: {'line': b'5: +  void SetControlMode(const ControlMode &);\n'}
[0.783114] (igus_rebel) StdoutLine: {'line': b'5: @@ -75,2 +75,2 @@\n'}
[0.783142] (igus_rebel) StdoutLine: {'line': b'5: -        void ProcessStatus(const CriMessages::Status &);\n'}
[0.783171] (igus_rebel) StdoutLine: {'line': b'5: -        void SetUpRosHardwareInterface();\n'}
[0.783198] (igus_rebel) StdoutLine: {'line': b'5: +  void ProcessStatus(const CriMessages::Status &);\n'}
[0.783227] (igus_rebel) StdoutLine: {'line': b'5: +  void SetUpRosHardwareInterface();\n'}
[0.783256] (igus_rebel) StdoutLine: {'line': b'5: @@ -78,3 +78,3 @@\n'}
[0.783285] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.783315] (igus_rebel) StdoutLine: {'line': b'5: -        const std::vector<std::string> JOINT_NAME = {\n'}
[0.783345] (igus_rebel) StdoutLine: {'line': b'5: -            "joint1", "joint2", "joint3", "joint4", "joint5", "joint6"};\n'}
[0.783374] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.783404] (igus_rebel) StdoutLine: {'line': b'5: +  const std::vector<std::string> JOINT_NAME = {\n'}
[0.783433] (igus_rebel) StdoutLine: {'line': b'5: +    "joint1", "joint2", "joint3", "joint4", "joint5", "joint6"};\n'}
[0.783463] (igus_rebel) StdoutLine: {'line': b'5: @@ -83 +83 @@\n'}
[0.783492] (igus_rebel) StdoutLine: {'line': b'5: -        const double degToRad = 0.0174532925199432957692369076848861271344287188854172545609719144;\n'}
[0.783524] (igus_rebel) StdoutLine: {'line': b'5: +  const double degToRad = 0.0174532925199432957692369076848861271344287188854172545609719144;\n'}
[0.783555] (igus_rebel) StdoutLine: {'line': b'5: @@ -86,2 +86,2 @@\n'}
[0.783585] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string ip = "192.168.3.11";\n'}
[0.783613] (igus_rebel) StdoutLine: {'line': b'5: -        const int port = 3920;\n'}
[0.783641] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string ip = "192.168.3.11";\n'}
[0.783668] (igus_rebel) StdoutLine: {'line': b'5: +  const int port = 3920;\n'}
[0.783695] (igus_rebel) StdoutLine: {'line': b'5: @@ -89,2 +89,2 @@\n'}
[0.783722] (igus_rebel) StdoutLine: {'line': b'5: -        Rebel();\n'}
[0.783749] (igus_rebel) StdoutLine: {'line': b'5: -        ~Rebel();\n'}
[0.783778] (igus_rebel) StdoutLine: {'line': b'5: +  Rebel();\n'}
[0.783804] (igus_rebel) StdoutLine: {'line': b'5: +  ~Rebel();\n'}
[0.783831] (igus_rebel) StdoutLine: {'line': b'5: @@ -92,3 +92,5 @@\n'}
[0.783857] (igus_rebel) StdoutLine: {'line': b'5: -        void SetJog(const float &, const float &, const float &, const float &, const float &, const float &);\n'}
[0.783884] (igus_rebel) StdoutLine: {'line': b'5: -        void GetJoints(float &, float &, float &, float &, float &, float &);\n'}
[0.783911] (igus_rebel) StdoutLine: {'line': b'5: -        void SetDigitalOut(const int &, const bool &);\n'}
[0.783938] (igus_rebel) StdoutLine: {'line': b'5: +  void SetJog(\n'}
[0.783964] (igus_rebel) StdoutLine: {'line': b'5: +    const float &, const float &, const float &, const float &, const float &,\n'}
[0.783992] (igus_rebel) StdoutLine: {'line': b'5: +    const float &);\n'}
[0.784019] (igus_rebel) StdoutLine: {'line': b'5: +  void GetJoints(float &, float &, float &, float &, float &, float &);\n'}
[0.784049] (igus_rebel) StdoutLine: {'line': b'5: +  void SetDigitalOut(const int &, const bool &);\n'}
[0.784079] (igus_rebel) StdoutLine: {'line': b'5: @@ -97 +99 @@\n'}
[0.784106] (igus_rebel) StdoutLine: {'line': b'5: -        CallbackReturn on_init(const HardwareInfo &hardware_info) override;\n'}
[0.784134] (igus_rebel) StdoutLine: {'line': b'5: +  CallbackReturn on_init(const HardwareInfo & hardware_info) override;\n'}
[0.784161] (igus_rebel) StdoutLine: {'line': b'5: @@ -99,4 +101,4 @@\n'}
[0.784189] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<StateInterface> export_state_interfaces() override;\n'}
[0.784220] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<CommandInterface> export_command_interfaces() override;\n'}
[0.784251] (igus_rebel) StdoutLine: {'line': b'5: -        return_type read(const rclcpp::Time &time, const rclcpp::Duration &period) override;\n'}
[0.784281] (igus_rebel) StdoutLine: {'line': b'5: -        return_type write(const rclcpp::Time &time, const rclcpp::Duration &period) override;\n'}
[0.784313] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<StateInterface> export_state_interfaces() override;\n'}
[0.784346] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<CommandInterface> export_command_interfaces() override;\n'}
[0.784378] (igus_rebel) StdoutLine: {'line': b'5: +  return_type read(const rclcpp::Time & time, const rclcpp::Duration & period) override;\n'}
[0.784408] (igus_rebel) StdoutLine: {'line': b'5: +  return_type write(const rclcpp::Time & time, const rclcpp::Duration & period) override;\n'}
[0.784438] (igus_rebel) StdoutLine: {'line': b'5: @@ -104,2 +106,2 @@\n'}
[0.784467] (igus_rebel) StdoutLine: {'line': b'5: -        void read();\n'}
[0.784496] (igus_rebel) StdoutLine: {'line': b'5: -        void write();\n'}
[0.784525] (igus_rebel) StdoutLine: {'line': b'5: +  void read();\n'}
[0.784554] (igus_rebel) StdoutLine: {'line': b'5: +  void write();\n'}
[0.784584] (igus_rebel) StdoutLine: {'line': b'5: @@ -107,2 +109,3 @@\n'}
[0.784612] (igus_rebel) StdoutLine: {'line': b'5: -        void dio_callback(const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.784640] (igus_rebel) StdoutLine: {'line': b'5: -                          std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response);\n'}
[0.784667] (igus_rebel) StdoutLine: {'line': b'5: +  void dio_callback(\n'}
[0.784694] (igus_rebel) StdoutLine: {'line': b'5: +    const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.784723] (igus_rebel) StdoutLine: {'line': b'5: +    std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response);\n'}
[0.784753] (igus_rebel) StdoutLine: {'line': b'5: @@ -110 +113 @@\n'}
[0.784782] (igus_rebel) StdoutLine: {'line': b'5: -        void GetReferenceInfo();\n'}
[0.784810] (igus_rebel) StdoutLine: {'line': b'5: +  void GetReferenceInfo();\n'}
[0.784837] (igus_rebel) StdoutLine: {'line': b'5: @@ -112,3 +115,3 @@\n'}
[0.784865] (igus_rebel) StdoutLine: {'line': b'5: -        void Start();\n'}
[0.784891] (igus_rebel) StdoutLine: {'line': b'5: -        void Stop();\n'}
[0.784919] (igus_rebel) StdoutLine: {'line': b'5: -    };\n'}
[0.784945] (igus_rebel) StdoutLine: {'line': b'5: +  void Start();\n'}
[0.784972] (igus_rebel) StdoutLine: {'line': b'5: +  void Stop();\n'}
[0.784998] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.785026] (igus_rebel) StdoutLine: {'line': b'5: @@ -117 +120 @@\n'}
[0.785061] (igus_rebel) StdoutLine: {'line': b'5: -#endif\n'}
[0.785092] (igus_rebel) StdoutLine: {'line': b'5: +#endif\n'}
[0.785120] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.785147] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/RebelSocket.hpp':\n"}
[0.785175] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.785201] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/RebelSocket.hpp\n'}
[0.785229] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/RebelSocket.hpp.uncrustify\n'}
[0.785257] (igus_rebel) StdoutLine: {'line': b'5: @@ -14,8 +14,8 @@\n'}
[0.785284] (igus_rebel) StdoutLine: {'line': b'5: -    class RebelSocket\n'}
[0.785311] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.785338] (igus_rebel) StdoutLine: {'line': b'5: -    private:\n'}
[0.785365] (igus_rebel) StdoutLine: {'line': b'5: -        int sock;\n'}
[0.785391] (igus_rebel) StdoutLine: {'line': b'5: -        std::string ip;\n'}
[0.785418] (igus_rebel) StdoutLine: {'line': b'5: -        int port;\n'}
[0.785444] (igus_rebel) StdoutLine: {'line': b'5: -        int timeout;\n'}
[0.785471] (igus_rebel) StdoutLine: {'line': b'5: -        std::list<std::string> unprocessedMessages;\n'}
[0.785500] (igus_rebel) StdoutLine: {'line': b'5: +class RebelSocket\n'}
[0.785529] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.785556] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.785583] (igus_rebel) StdoutLine: {'line': b'5: +  int sock;\n'}
[0.785610] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ip;\n'}
[0.785636] (igus_rebel) StdoutLine: {'line': b'5: +  int port;\n'}
[0.785662] (igus_rebel) StdoutLine: {'line': b'5: +  int timeout;\n'}
[0.785691] (igus_rebel) StdoutLine: {'line': b'5: +  std::list<std::string> unprocessedMessages;\n'}
[0.785718] (igus_rebel) StdoutLine: {'line': b'5: @@ -23,8 +23,8 @@\n'}
[0.785745] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueReceive = false;\n'}
[0.785772] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread receiveThread;\n'}
[0.785798] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread listCheckThread;\n'}
[0.785825] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex socketWriteLock;\n'}
[0.785851] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex connectionLock;\n'}
[0.785878] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex messageLock;\n'}
[0.785904] (igus_rebel) StdoutLine: {'line': b'5: -        unsigned long maxUnprocessedMessages = 25;\n'}
[0.785930] (igus_rebel) StdoutLine: {'line': b'5: -        int listCheckWaitMs = 500;\n'}
[0.785957] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueReceive = false;\n'}
[0.785983] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread receiveThread;\n'}
[0.786010] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread listCheckThread;\n'}
[0.786036] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex socketWriteLock;\n'}
[0.786085] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex connectionLock;\n'}
[0.786113] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex messageLock;\n'}
[0.786141] (igus_rebel) StdoutLine: {'line': b'5: +  unsigned long maxUnprocessedMessages = 25;\n'}
[0.786168] (igus_rebel) StdoutLine: {'line': b'5: +  int listCheckWaitMs = 500;\n'}
[0.786195] (igus_rebel) StdoutLine: {'line': b'5: @@ -32,2 +32,2 @@\n'}
[0.786223] (igus_rebel) StdoutLine: {'line': b'5: -        bool connectionNeeded = false;\n'}
[0.786253] (igus_rebel) StdoutLine: {'line': b'5: -        static const int bufferSize = 4096;\n'}
[0.786281] (igus_rebel) StdoutLine: {'line': b'5: +  bool connectionNeeded = false;\n'}
[0.786310] (igus_rebel) StdoutLine: {'line': b'5: +  static const int bufferSize = 4096;\n'}
[0.786339] (igus_rebel) StdoutLine: {'line': b'5: @@ -35,2 +35,2 @@\n'}
[0.786368] (igus_rebel) StdoutLine: {'line': b'5: -        char fragmentBuffer[bufferSize];\n'}
[0.786397] (igus_rebel) StdoutLine: {'line': b'5: -        int fragmentLength = 0;\n'}
[0.786426] (igus_rebel) StdoutLine: {'line': b'5: +  char fragmentBuffer[bufferSize];\n'}
[0.786451] (igus_rebel) StdoutLine: {'line': b'5: +  int fragmentLength = 0;\n'}
[0.786477] (igus_rebel) StdoutLine: {'line': b'5: @@ -38,2 +38,2 @@\n'}
[0.786503] (igus_rebel) StdoutLine: {'line': b'5: -        void MakeConnection();\n'}
[0.786533] (igus_rebel) StdoutLine: {'line': b'5: -        void SeparateMessages(const char *);\n'}
[0.786559] (igus_rebel) StdoutLine: {'line': b'5: +  void MakeConnection();\n'}
[0.786586] (igus_rebel) StdoutLine: {'line': b'5: +  void SeparateMessages(const char *);\n'}
[0.786612] (igus_rebel) StdoutLine: {'line': b'5: @@ -41,2 +41,2 @@\n'}
[0.786639] (igus_rebel) StdoutLine: {'line': b'5: -        void ReceiveThreadFunction();\n'}
[0.786666] (igus_rebel) StdoutLine: {'line': b'5: -        void ListCheckThreadFunction();\n'}
[0.786693] (igus_rebel) StdoutLine: {'line': b'5: +  void ReceiveThreadFunction();\n'}
[0.786720] (igus_rebel) StdoutLine: {'line': b'5: +  void ListCheckThreadFunction();\n'}
[0.786748] (igus_rebel) StdoutLine: {'line': b'5: @@ -44 +44 @@\n'}
[0.786775] (igus_rebel) StdoutLine: {'line': b'5: -        bool IsSocketOk();\n'}
[0.786801] (igus_rebel) StdoutLine: {'line': b'5: +  bool IsSocketOk();\n'}
[0.786829] (igus_rebel) StdoutLine: {'line': b'5: @@ -46,3 +46,3 @@\n'}
[0.786854] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.786881] (igus_rebel) StdoutLine: {'line': b'5: -        RebelSocket(const std::string &, const int &, const int &);\n'}
[0.786908] (igus_rebel) StdoutLine: {'line': b'5: -        ~RebelSocket();\n'}
[0.786944] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.786971] (igus_rebel) StdoutLine: {'line': b'5: +  RebelSocket(const std::string &, const int &, const int &);\n'}
[0.787001] (igus_rebel) StdoutLine: {'line': b'5: +  ~RebelSocket();\n'}
[0.787027] (igus_rebel) StdoutLine: {'line': b'5: @@ -50,6 +50,6 @@\n'}
[0.787064] (igus_rebel) StdoutLine: {'line': b'5: -        void Start();\n'}
[0.787092] (igus_rebel) StdoutLine: {'line': b'5: -        void Stop();\n'}
[0.787119] (igus_rebel) StdoutLine: {'line': b'5: -        bool HasMessage();\n'}
[0.787146] (igus_rebel) StdoutLine: {'line': b'5: -        std::string GetMessage();\n'}
[0.787174] (igus_rebel) StdoutLine: {'line': b'5: -        void SendMessage(const std::string &);\n'}
[0.787200] (igus_rebel) StdoutLine: {'line': b'5: -    };\n'}
[0.787227] (igus_rebel) StdoutLine: {'line': b'5: +  void Start();\n'}
[0.787255] (igus_rebel) StdoutLine: {'line': b'5: +  void Stop();\n'}
[0.787281] (igus_rebel) StdoutLine: {'line': b'5: +  bool HasMessage();\n'}
[0.787307] (igus_rebel) StdoutLine: {'line': b'5: +  std::string GetMessage();\n'}
[0.787338] (igus_rebel) StdoutLine: {'line': b'5: +  void SendMessage(const std::string &);\n'}
[0.787365] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.787392] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.787418] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/CriMessages.cpp':\n"}
[0.787446] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.787472] (igus_rebel) StdoutLine: {'line': b'5: --- src/CriMessages.cpp\n'}
[0.787499] (igus_rebel) StdoutLine: {'line': b'5: +++ src/CriMessages.cpp.uncrustify\n'}
[0.787525] (igus_rebel) StdoutLine: {'line': b'5: @@ -10,5 +10,5 @@\n'}
[0.787552] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriMessages\n'}
[0.787578] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.787604] (igus_rebel) StdoutLine: {'line': b'5: -        MessageType CriMessage::GetMessageType(const std::string &msg)\n'}
[0.787630] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.787657] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeStart;\n'}
[0.787683] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriMessages\n'}
[0.787709] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.787735] (igus_rebel) StdoutLine: {'line': b'5: +MessageType CriMessage::GetMessageType(const std::string & msg)\n'}
[0.787762] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.787788] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeStart;\n'}
[0.787815] (igus_rebel) StdoutLine: {'line': b'5: @@ -16,247 +16,224 @@\n'}
[0.787841] (igus_rebel) StdoutLine: {'line': b"5: -            if (msg.at(0) == ' ')\n"}
[0.787868] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.787895] (igus_rebel) StdoutLine: {'line': b'5: -                typeStart = msg.find(" ", 1) + 1;\n'}
[0.787924] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.787953] (igus_rebel) StdoutLine: {'line': b'5: -            else\n'}
[0.787981] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.788008] (igus_rebel) StdoutLine: {'line': b'5: -                typeStart = msg.find(" ") + 1;\n'}
[0.788037] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.788072] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.788100] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788127] (igus_rebel) StdoutLine: {'line': b'5: -            std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.788155] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788182] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_STATUS)\n'}
[0.788209] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.788237] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::STATUS;\n'}
[0.788264] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.788291] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788318] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_OPINFO)\n'}
[0.788346] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.788374] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::OPINFO;\n'}
[0.788403] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.788431] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788459] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_GSIG)\n'}
[0.788487] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.788515] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::GSIG;\n'}
[0.788543] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.788571] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788599] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_GRIPPERSTATE)\n'}
[0.788627] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.788654] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::GRIPPERSTATE;\n'}
[0.788681] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.788709] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788736] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_RUNSTATE)\n'}
[0.788767] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.788795] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::RUNSTATE;\n'}
[0.788825] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.788854] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788882] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_MESSAGE)\n'}
[0.788910] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.788938] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::MESSAGE;\n'}
[0.788964] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.788990] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789017] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMD)\n'}
[0.789048] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.789083] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMD;\n'}
[0.789110] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.789137] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789164] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CONFIG)\n'}
[0.789192] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.789220] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CONFIG;\n'}
[0.789247] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.789275] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789301] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_INFO)\n'}
[0.789329] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.789356] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::INFO;\n'}
[0.789384] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.789410] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789438] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_LOGMSG)\n'}
[0.789464] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.789492] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::LOGMSG;\n'}
[0.789520] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.789548] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789575] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_VARIABLES)\n'}
[0.789603] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.789631] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::VARIABLES;\n'}
[0.789659] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.789686] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789713] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMDERROR)\n'}
[0.789740] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.789766] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMDERROR;\n'}
[0.789796] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.789824] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789851] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMDACK)\n'}
[0.789879] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.789905] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMDACK;\n'}
[0.789932] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.789959] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789986] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CYCLESTAT)\n'}
[0.790012] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.790038] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CYCLESTAT;\n'}
[0.790072] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.790100] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.790128] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown message type: \\"%s\\"", typeString.c_str());\n'}
[0.790158] (igus_rebel) StdoutLine: {'line': b'5: -            return MessageType::UNKNOWN;\n'}
[0.790189] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.790216] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.790243] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::ParseMessageString(const std::string &statusString, const std::string::size_type &begin,\n'}
[0.790271] (igus_rebel) StdoutLine: {'line': b'5: -                                                   const std::string::size_type &end, const std::string::size_type &keywordLength)\n'}
[0.790299] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.790326] (igus_rebel) StdoutLine: {'line': b'5: -            int start = begin + keywordLength + 1;\n'}
[0.790353] (igus_rebel) StdoutLine: {'line': b'5: -            int length = end - start - 1;\n'}
[0.790379] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.790406] (igus_rebel) StdoutLine: {'line': b'5: -            return statusString.substr(start, length);\n'}
[0.790432] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.790459] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.790486] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T, std::size_t N>\n'}
[0.790512] (igus_rebel) StdoutLine: {'line': b'5: -        void CriMessage::FillArray(std::array<T, N> &array, const std::string &spaceSeparatedValues)\n'}
[0.790540] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.790566] (igus_rebel) StdoutLine: {'line': b'5: -            typename std::array<T, N>::size_type idx = 0;\n'}
[0.790593] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type begin = 0;\n'}
[0.790619] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.790645] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.790670] (igus_rebel) StdoutLine: {'line': b'5: -            while (end != std::string::npos)\n'}
[0.790697] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.790723] (igus_rebel) StdoutLine: {'line': b'5: -                if (idx >= N)\n'}
[0.790749] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.790776] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Parsing error");\n'}
[0.790803] (igus_rebel) StdoutLine: {'line': b'5: -                    return;\n'}
[0.790831] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.790858] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.790884] (igus_rebel) StdoutLine: {'line': b'5: -                std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.790912] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.790938] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<float, T>::value)\n'}
[0.790964] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.790991] (igus_rebel) StdoutLine: {'line': b'5: -                    array.at(idx) = std::stof(value);\n'}
[0.791019] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.791050] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.791082] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<int, T>::value)\n'}
[0.791109] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.791136] (igus_rebel) StdoutLine: {'line': b'5: -                    array.at(idx) = std::stoi(value);\n'}
[0.791163] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.791190] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.791216] (igus_rebel) StdoutLine: {'line': b'5: -                begin = spaceSeparatedValues.find(" ", end);\n'}
[0.791244] (igus_rebel) StdoutLine: {'line': b'5: -                end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.791271] (igus_rebel) StdoutLine: {'line': b'5: -                idx++;\n'}
[0.791298] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.791326] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.791352] (igus_rebel) StdoutLine: {'line': b'5: -            std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.791380] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.791408] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<float, T>::value)\n'}
[0.791434] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.791460] (igus_rebel) StdoutLine: {'line': b'5: -                array.at(idx) = std::stof(value);\n'}
[0.791486] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.791513] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.791540] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<int, T>::value)\n'}
[0.791566] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.791593] (igus_rebel) StdoutLine: {'line': b'5: -                array.at(idx) = std::stoi(value);\n'}
[0.791619] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.791645] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.791670] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.791696] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T>\n'}
[0.791723] (igus_rebel) StdoutLine: {'line': b'5: -        void CriMessage::FillVector(std::vector<T> &vector, const std::string &spaceSeparatedValues)\n'}
[0.791750] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.791776] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type begin = 0;\n'}
[0.791803] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.791830] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.791857] (igus_rebel) StdoutLine: {'line': b'5: -            while (end != std::string::npos)\n'}
[0.791884] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.791911] (igus_rebel) StdoutLine: {'line': b'5: -                std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.791937] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.791963] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<float, T>::value)\n'}
[0.791989] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.792016] (igus_rebel) StdoutLine: {'line': b'5: -                    vector.push_back(std::stof(value));\n'}
[0.792047] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.792086] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.792113] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<int, T>::value)\n'}
[0.792141] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.792169] (igus_rebel) StdoutLine: {'line': b'5: -                    vector.push_back(std::stoi(value));\n'}
[0.792196] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.792223] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.792249] (igus_rebel) StdoutLine: {'line': b'5: -                begin = spaceSeparatedValues.find(" ", end);\n'}
[0.792276] (igus_rebel) StdoutLine: {'line': b'5: -                end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.792305] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.792332] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.792358] (igus_rebel) StdoutLine: {'line': b'5: -            std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.792385] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.792412] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<float, T>::value)\n'}
[0.792439] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.792466] (igus_rebel) StdoutLine: {'line': b'5: -                vector.push_back(std::stof(value));\n'}
[0.792492] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.792523] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.792550] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<int, T>::value)\n'}
[0.792577] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.792604] (igus_rebel) StdoutLine: {'line': b'5: -                vector.push_back(std::stoi(value));\n'}
[0.792630] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.792656] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.792684] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.792710] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T, std::size_t N>\n'}
[0.792737] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::ArrayToString(std::array<T, N> &array)\n'}
[0.792765] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.792792] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.792819] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.792845] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.792872] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.792898] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.792925] (igus_rebel) StdoutLine: {'line': b'5: -            for (T val : array)\n'}
[0.792951] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.792978] (igus_rebel) StdoutLine: {'line': b'5: -                msg << val << " ";\n'}
[0.793004] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.793031] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.793067] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.793095] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.793122] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.793150] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T>\n'}
[0.793177] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::VectorToString(std::vector<T> &vector)\n'}
[0.793203] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.793231] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.793262] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.793289] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.793316] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.793344] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.793370] (igus_rebel) StdoutLine: {'line': b'5: -            for (T val : vector)\n'}
[0.793397] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.793423] (igus_rebel) StdoutLine: {'line': b'5: -                msg << val << " ";\n'}
[0.793450] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.793477] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.793505] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.793532] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.793558] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.793585] (igus_rebel) StdoutLine: {'line': b'5: -        Status::Status(const std::string &messageString) : CriMessage(MessageType::STATUS)\n'}
[0.793612] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.793638] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type modeStart = messageString.find(CriKeywords::STATUS_MODE);\n'}
[0.793668] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posJointSetPointStart = messageString.find(CriKeywords::STATUS_POSJOINTSETPOINT);\n'}
[0.793695] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posJointCurrentStart = messageString.find(CriKeywords::STATUS_POSJOINTCURRENT);\n'}
[0.793723] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posCartRobotStart = messageString.find(CriKeywords::STATUS_POSCARTROBOT);\n'}
[0.793750] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posCartPlattformStart = messageString.find(CriKeywords::STATUS_POSCARTPLATTFORM);\n'}
[0.793778] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type overrideValueStart = messageString.find(CriKeywords::STATUS_OVERRIDE);\n'}
[0.793805] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type dinStart = messageString.find(CriKeywords::STATUS_DIN);\n'}
[0.793831] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type doutStart = messageString.find(CriKeywords::STATUS_DOUT);\n'}
[0.793858] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type eStopStart = messageString.find(CriKeywords::STATUS_ESTOP);\n'}
[0.793885] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type supplyStart = messageString.find(CriKeywords::STATUS_SUPPLY);\n'}
[0.793912] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type currentallStart = messageString.find(CriKeywords::STATUS_CURRENTALL);\n'}
[0.793939] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type currentjointsStart = messageString.find(CriKeywords::STATUS_CURRENTJOINTS);\n'}
[0.793965] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorStart = messageString.find(CriKeywords::STATUS_ERROR);\n'}
[0.793992] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type kinstateStart = messageString.find(CriKeywords::STATUS_KINSTATE);\n'}
[0.794019] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.794049] (igus_rebel) StdoutLine: {'line': b'5: -            if (\n'}
[0.794079] (igus_rebel) StdoutLine: {'line': b'5: -                !(\n'}
[0.794109] (igus_rebel) StdoutLine: {'line': b'5: -                    (modeStart < posJointSetPointStart) &&\n'}
[0.794138] (igus_rebel) StdoutLine: {'line': b'5: -                    (posJointSetPointStart < posJointCurrentStart) &&\n'}
[0.794166] (igus_rebel) StdoutLine: {'line': b'5: -                    (posJointCurrentStart < posCartRobotStart) &&\n'}
[0.794196] (igus_rebel) StdoutLine: {'line': b'5: -                    (posCartRobotStart < posCartPlattformStart) &&\n'}
[0.794223] (igus_rebel) StdoutLine: {'line': b'5: -                    (posCartPlattformStart < overrideValueStart) &&\n'}
[0.794250] (igus_rebel) StdoutLine: {'line': b'5: -                    (overrideValueStart < dinStart) &&\n'}
[0.794276] (igus_rebel) StdoutLine: {'line': b'5: -                    (dinStart < doutStart) &&\n'}
[0.794303] (igus_rebel) StdoutLine: {'line': b'5: -                    (doutStart < eStopStart) &&\n'}
[0.794330] (igus_rebel) StdoutLine: {'line': b'5: -                    (eStopStart < supplyStart) &&\n'}
[0.794357] (igus_rebel) StdoutLine: {'line': b'5: -                    (supplyStart < currentallStart) &&\n'}
[0.794384] (igus_rebel) StdoutLine: {'line': b'5: -                    (currentallStart < currentjointsStart) &&\n'}
[0.794417] (igus_rebel) StdoutLine: {'line': b'5: -                    (currentjointsStart < errorStart) &&\n'}
[0.794444] (igus_rebel) StdoutLine: {'line': b'5: -                    (errorStart < kinstateStart)))\n'}
[0.794471] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.794497] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Bad parsing error for message \\"%s\\"", messageString.c_str());\n'}
[0.794524] (igus_rebel) StdoutLine: {'line': b'5: -                return;\n'}
[0.794553] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.794579] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.794606] (igus_rebel) StdoutLine: {'line': b'5: -            std::string modeString = ParseMessageString(messageString, modeStart, posJointSetPointStart,\n'}
[0.794633] (igus_rebel) StdoutLine: {'line': b"5: +  if (msg.at(0) == ' ') {\n"}
[0.794660] (igus_rebel) StdoutLine: {'line': b'5: +    typeStart = msg.find(" ", 1) + 1;\n'}
[0.794688] (igus_rebel) StdoutLine: {'line': b'5: +  } else {\n'}
[0.794714] (igus_rebel) StdoutLine: {'line': b'5: +    typeStart = msg.find(" ") + 1;\n'}
[0.794740] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.794767] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.794794] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.794821] (igus_rebel) StdoutLine: {'line': b'5: +  std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.794850] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.794876] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_STATUS) {\n'}
[0.794904] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::STATUS;\n'}
[0.794931] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.794958] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.794984] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_OPINFO) {\n'}
[0.795010] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::OPINFO;\n'}
[0.795037] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795074] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795101] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_GSIG) {\n'}
[0.795128] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::GSIG;\n'}
[0.795156] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795183] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795210] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_GRIPPERSTATE) {\n'}
[0.795237] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::GRIPPERSTATE;\n'}
[0.795264] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795292] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795319] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_RUNSTATE) {\n'}
[0.795345] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::RUNSTATE;\n'}
[0.795372] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795399] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795425] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_MESSAGE) {\n'}
[0.795452] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::MESSAGE;\n'}
[0.795478] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795504] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795530] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMD) {\n'}
[0.795555] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMD;\n'}
[0.795581] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795607] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795638] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CONFIG) {\n'}
[0.795666] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CONFIG;\n'}
[0.795692] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795719] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795745] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_INFO) {\n'}
[0.795771] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::INFO;\n'}
[0.795798] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795825] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795851] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_LOGMSG) {\n'}
[0.795877] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::LOGMSG;\n'}
[0.795904] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.795930] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795957] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_VARIABLES) {\n'}
[0.795984] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::VARIABLES;\n'}
[0.796011] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.796039] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796077] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMDERROR) {\n'}
[0.796105] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMDERROR;\n'}
[0.796132] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.796159] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796186] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMDACK) {\n'}
[0.796213] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMDACK;\n'}
[0.796239] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.796266] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796292] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CYCLESTAT) {\n'}
[0.796319] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CYCLESTAT;\n'}
[0.796345] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.796371] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796397] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown message type: \\"%s\\"",\n'}
[0.796425] (igus_rebel) StdoutLine: {'line': b'5: +        typeString.c_str());\n'}
[0.796451] (igus_rebel) StdoutLine: {'line': b'5: +  return MessageType::UNKNOWN;\n'}
[0.796477] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.796503] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796529] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::ParseMessageString(\n'}
[0.796555] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string & statusString, const std::string::size_type & begin,\n'}
[0.796582] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string::size_type & end, const std::string::size_type & keywordLength)\n'}
[0.796608] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.796635] (igus_rebel) StdoutLine: {'line': b'5: +  int start = begin + keywordLength + 1;\n'}
[0.796662] (igus_rebel) StdoutLine: {'line': b'5: +  int length = end - start - 1;\n'}
[0.796687] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796714] (igus_rebel) StdoutLine: {'line': b'5: +  return statusString.substr(start, length);\n'}
[0.796740] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.796766] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796791] (igus_rebel) StdoutLine: {'line': b'5: +template<class T, std::size_t N>\n'}
[0.796817] (igus_rebel) StdoutLine: {'line': b'5: +void CriMessage::FillArray(std::array<T, N> & array, const std::string & spaceSeparatedValues)\n'}
[0.796843] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.796869] (igus_rebel) StdoutLine: {'line': b'5: +  typename std::array<T, N>::size_type idx = 0;\n'}
[0.796895] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type begin = 0;\n'}
[0.796922] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.796948] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796974] (igus_rebel) StdoutLine: {'line': b'5: +  while (end != std::string::npos) {\n'}
[0.797001] (igus_rebel) StdoutLine: {'line': b'5: +    if (idx >= N) {\n'}
[0.797027] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Parsing error");\n'}
[0.797061] (igus_rebel) StdoutLine: {'line': b'5: +      return;\n'}
[0.797089] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.797115] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797142] (igus_rebel) StdoutLine: {'line': b'5: +    std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.797171] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797197] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<float, T>::value) {\n'}
[0.797225] (igus_rebel) StdoutLine: {'line': b'5: +      array.at(idx) = std::stof(value);\n'}
[0.797250] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.797280] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797306] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<int, T>::value) {\n'}
[0.797333] (igus_rebel) StdoutLine: {'line': b'5: +      array.at(idx) = std::stoi(value);\n'}
[0.797360] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.797387] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797413] (igus_rebel) StdoutLine: {'line': b'5: +    begin = spaceSeparatedValues.find(" ", end);\n'}
[0.797439] (igus_rebel) StdoutLine: {'line': b'5: +    end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.797466] (igus_rebel) StdoutLine: {'line': b'5: +    idx++;\n'}
[0.797493] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.797518] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797545] (igus_rebel) StdoutLine: {'line': b'5: +  std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.797571] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797598] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<float, T>::value) {\n'}
[0.797624] (igus_rebel) StdoutLine: {'line': b'5: +    array.at(idx) = std::stof(value);\n'}
[0.797650] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.797677] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797703] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<int, T>::value) {\n'}
[0.797730] (igus_rebel) StdoutLine: {'line': b'5: +    array.at(idx) = std::stoi(value);\n'}
[0.797756] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.797783] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.797809] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797835] (igus_rebel) StdoutLine: {'line': b'5: +template<class T>\n'}
[0.797862] (igus_rebel) StdoutLine: {'line': b'5: +void CriMessage::FillVector(std::vector<T> & vector, const std::string & spaceSeparatedValues)\n'}
[0.797889] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.797915] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type begin = 0;\n'}
[0.797941] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.797968] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797994] (igus_rebel) StdoutLine: {'line': b'5: +  while (end != std::string::npos) {\n'}
[0.798021] (igus_rebel) StdoutLine: {'line': b'5: +    std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.798054] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798083] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<float, T>::value) {\n'}
[0.798110] (igus_rebel) StdoutLine: {'line': b'5: +      vector.push_back(std::stof(value));\n'}
[0.798138] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.798165] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798192] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<int, T>::value) {\n'}
[0.798219] (igus_rebel) StdoutLine: {'line': b'5: +      vector.push_back(std::stoi(value));\n'}
[0.798245] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.798272] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798300] (igus_rebel) StdoutLine: {'line': b'5: +    begin = spaceSeparatedValues.find(" ", end);\n'}
[0.798327] (igus_rebel) StdoutLine: {'line': b'5: +    end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.798354] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.798381] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798407] (igus_rebel) StdoutLine: {'line': b'5: +  std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.798434] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798461] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<float, T>::value) {\n'}
[0.798487] (igus_rebel) StdoutLine: {'line': b'5: +    vector.push_back(std::stof(value));\n'}
[0.798514] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.798541] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798566] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<int, T>::value) {\n'}
[0.798594] (igus_rebel) StdoutLine: {'line': b'5: +    vector.push_back(std::stoi(value));\n'}
[0.798621] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.798650] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.798678] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798704] (igus_rebel) StdoutLine: {'line': b'5: +template<class T, std::size_t N>\n'}
[0.798732] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::ArrayToString(std::array<T, N> & array)\n'}
[0.798759] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.798786] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.798813] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::showpoint;\n'}
[0.798840] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::fixed;\n'}
[0.798866] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.798892] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798920] (igus_rebel) StdoutLine: {'line': b'5: +  for (T val : array) {\n'}
[0.798945] (igus_rebel) StdoutLine: {'line': b'5: +    msg << val << " ";\n'}
[0.798972] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.798997] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.799024] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.799057] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.799085] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.799112] (igus_rebel) StdoutLine: {'line': b'5: +template<class T>\n'}
[0.799139] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::VectorToString(std::vector<T> & vector)\n'}
[0.799166] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.799193] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.799220] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::showpoint;\n'}
[0.799246] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::fixed;\n'}
[0.799273] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.799300] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.799327] (igus_rebel) StdoutLine: {'line': b'5: +  for (T val : vector) {\n'}
[0.799354] (igus_rebel) StdoutLine: {'line': b'5: +    msg << val << " ";\n'}
[0.799381] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.799407] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.799434] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.799464] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.799492] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.799519] (igus_rebel) StdoutLine: {'line': b'5: +Status::Status(const std::string & messageString)\n'}
[0.799546] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::STATUS)\n'}
[0.799573] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.799599] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type modeStart = messageString.find(CriKeywords::STATUS_MODE);\n'}
[0.799626] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posJointSetPointStart =\n'}
[0.799653] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSJOINTSETPOINT);\n'}
[0.799680] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posJointCurrentStart =\n'}
[0.799707] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSJOINTCURRENT);\n'}
[0.799735] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posCartRobotStart = messageString.find(CriKeywords::STATUS_POSCARTROBOT);\n'}
[0.799761] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posCartPlattformStart =\n'}
[0.799787] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSCARTPLATTFORM);\n'}
[0.799814] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type overrideValueStart = messageString.find(CriKeywords::STATUS_OVERRIDE);\n'}
[0.799841] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type dinStart = messageString.find(CriKeywords::STATUS_DIN);\n'}
[0.799869] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type doutStart = messageString.find(CriKeywords::STATUS_DOUT);\n'}
[0.799895] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type eStopStart = messageString.find(CriKeywords::STATUS_ESTOP);\n'}
[0.799923] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type supplyStart = messageString.find(CriKeywords::STATUS_SUPPLY);\n'}
[0.799950] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type currentallStart = messageString.find(CriKeywords::STATUS_CURRENTALL);\n'}
[0.799977] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type currentjointsStart = messageString.find(CriKeywords::STATUS_CURRENTJOINTS);\n'}
[0.800004] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorStart = messageString.find(CriKeywords::STATUS_ERROR);\n'}
[0.800031] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type kinstateStart = messageString.find(CriKeywords::STATUS_KINSTATE);\n'}
[0.800066] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.800094] (igus_rebel) StdoutLine: {'line': b'5: +  if (\n'}
[0.800121] (igus_rebel) StdoutLine: {'line': b'5: +    !(\n'}
[0.800148] (igus_rebel) StdoutLine: {'line': b'5: +      (modeStart < posJointSetPointStart) &&\n'}
[0.800174] (igus_rebel) StdoutLine: {'line': b'5: +      (posJointSetPointStart < posJointCurrentStart) &&\n'}
[0.800201] (igus_rebel) StdoutLine: {'line': b'5: +      (posJointCurrentStart < posCartRobotStart) &&\n'}
[0.800228] (igus_rebel) StdoutLine: {'line': b'5: +      (posCartRobotStart < posCartPlattformStart) &&\n'}
[0.800254] (igus_rebel) StdoutLine: {'line': b'5: +      (posCartPlattformStart < overrideValueStart) &&\n'}
[0.800282] (igus_rebel) StdoutLine: {'line': b'5: +      (overrideValueStart < dinStart) &&\n'}
[0.800308] (igus_rebel) StdoutLine: {'line': b'5: +      (dinStart < doutStart) &&\n'}
[0.800335] (igus_rebel) StdoutLine: {'line': b'5: +      (doutStart < eStopStart) &&\n'}
[0.800362] (igus_rebel) StdoutLine: {'line': b'5: +      (eStopStart < supplyStart) &&\n'}
[0.800388] (igus_rebel) StdoutLine: {'line': b'5: +      (supplyStart < currentallStart) &&\n'}
[0.800414] (igus_rebel) StdoutLine: {'line': b'5: +      (currentallStart < currentjointsStart) &&\n'}
[0.800440] (igus_rebel) StdoutLine: {'line': b'5: +      (currentjointsStart < errorStart) &&\n'}
[0.800467] (igus_rebel) StdoutLine: {'line': b'5: +      (errorStart < kinstateStart)))\n'}
[0.800494] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.800521] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Bad parsing error for message \\"%s\\"",\n'}
[0.800549] (igus_rebel) StdoutLine: {'line': b'5: +          messageString.c_str());\n'}
[0.800576] (igus_rebel) StdoutLine: {'line': b'5: +    return;\n'}
[0.800602] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.800629] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.800656] (igus_rebel) StdoutLine: {'line': b'5: +  std::string modeString = ParseMessageString(messageString, modeStart, posJointSetPointStart,\n'}
[0.800683] (igus_rebel) StdoutLine: {'line': b'5: @@ -264,11 +241,16 @@\n'}
[0.800710] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posJointSetPointString = ParseMessageString(messageString, posJointSetPointStart,\n'}
[0.800737] (igus_rebel) StdoutLine: {'line': b'5: -                                                                    posJointCurrentStart, CriKeywords::STATUS_POSJOINTSETPOINT.size());\n'}
[0.800764] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posJointCurrentString = ParseMessageString(messageString, posJointCurrentStart,\n'}
[0.800791] (igus_rebel) StdoutLine: {'line': b'5: -                                                                   posCartRobotStart, CriKeywords::STATUS_POSJOINTCURRENT.size());\n'}
[0.800820] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posCartRobotString = ParseMessageString(messageString, posCartRobotStart,\n'}
[0.800847] (-) TimerEvent: {}
[0.800908] (igus_rebel) StdoutLine: {'line': b'5: -                                                                posCartPlattformStart, CriKeywords::STATUS_POSCARTROBOT.size());\n'}
[0.800944] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posCartPlattformString = ParseMessageString(messageString, posCartPlattformStart,\n'}
[0.800976] (igus_rebel) StdoutLine: {'line': b'5: -                                                                    overrideValueStart, CriKeywords::STATUS_POSCARTPLATTFORM.size());\n'}
[0.801005] (igus_rebel) StdoutLine: {'line': b'5: -            std::string overrideValueString = ParseMessageString(messageString, overrideValueStart,\n'}
[0.801033] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 dinStart, CriKeywords::STATUS_OVERRIDE.size());\n'}
[0.801076] (igus_rebel) StdoutLine: {'line': b'5: -            std::string dinString = ParseMessageString(messageString, dinStart, doutStart,\n'}
[0.801105] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posJointSetPointString = ParseMessageString(messageString, posJointSetPointStart,\n'}
[0.801132] (igus_rebel) StdoutLine: {'line': b'5: +                                                                    posJointCurrentStart,\n'}
[0.801160] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSJOINTSETPOINT.size());\n'}
[0.801186] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posJointCurrentString = ParseMessageString(messageString, posJointCurrentStart,\n'}
[0.801213] (igus_rebel) StdoutLine: {'line': b'5: +                                                                   posCartRobotStart,\n'}
[0.801243] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSJOINTCURRENT.size());\n'}
[0.801270] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posCartRobotString = ParseMessageString(messageString, posCartRobotStart,\n'}
[0.801297] (igus_rebel) StdoutLine: {'line': b'5: +                                                                posCartPlattformStart,\n'}
[0.801323] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSCARTROBOT.size());\n'}
[0.801351] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posCartPlattformString = ParseMessageString(messageString, posCartPlattformStart,\n'}
[0.801379] (igus_rebel) StdoutLine: {'line': b'5: +                                                                    overrideValueStart,\n'}
[0.801406] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSCARTPLATTFORM.size());\n'}
[0.801433] (igus_rebel) StdoutLine: {'line': b'5: +  std::string overrideValueString = ParseMessageString(messageString, overrideValueStart,\n'}
[0.801461] (igus_rebel) StdoutLine: {'line': b'5: +                                                                 dinStart,\n'}
[0.801489] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_OVERRIDE.size());\n'}
[0.801517] (igus_rebel) StdoutLine: {'line': b'5: +  std::string dinString = ParseMessageString(messageString, dinStart, doutStart,\n'}
[0.801544] (igus_rebel) StdoutLine: {'line': b'5: @@ -276 +258 @@\n'}
[0.801571] (igus_rebel) StdoutLine: {'line': b'5: -            std::string doutString = ParseMessageString(messageString, doutStart, eStopStart,\n'}
[0.801601] (igus_rebel) StdoutLine: {'line': b'5: +  std::string doutString = ParseMessageString(messageString, doutStart, eStopStart,\n'}
[0.801630] (igus_rebel) StdoutLine: {'line': b'5: @@ -278 +260 @@\n'}
[0.801658] (igus_rebel) StdoutLine: {'line': b'5: -            std::string eStopString = ParseMessageString(messageString, eStopStart, supplyStart,\n'}
[0.801689] (igus_rebel) StdoutLine: {'line': b'5: +  std::string eStopString = ParseMessageString(messageString, eStopStart, supplyStart,\n'}
[0.801719] (igus_rebel) StdoutLine: {'line': b'5: @@ -280 +262 @@\n'}
[0.801749] (igus_rebel) StdoutLine: {'line': b'5: -            std::string supplyString = ParseMessageString(messageString, supplyStart, currentallStart,\n'}
[0.801778] (igus_rebel) StdoutLine: {'line': b'5: +  std::string supplyString = ParseMessageString(messageString, supplyStart, currentallStart,\n'}
[0.801808] (igus_rebel) StdoutLine: {'line': b'5: @@ -282 +264,2 @@\n'}
[0.801839] (igus_rebel) StdoutLine: {'line': b'5: -            std::string currentallString = ParseMessageString(messageString, currentallStart, currentjointsStart,\n'}
[0.801871] (igus_rebel) StdoutLine: {'line': b'5: +  std::string currentallString = ParseMessageString(messageString, currentallStart,\n'}
[0.801899] (igus_rebel) StdoutLine: {'line': b'5: +        currentjointsStart,\n'}
[0.801929] (igus_rebel) StdoutLine: {'line': b'5: @@ -284,3 +267,5 @@\n'}
[0.801957] (igus_rebel) StdoutLine: {'line': b'5: -            std::string currentjointsString = ParseMessageString(messageString, currentjointsStart, errorStart,\n'}
[0.801989] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 CriKeywords::STATUS_CURRENTJOINTS.size());\n'}
[0.802017] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorString = ParseMessageString(messageString, errorStart, kinstateStart,\n'}
[0.802049] (igus_rebel) StdoutLine: {'line': b'5: +  std::string currentjointsString = ParseMessageString(messageString, currentjointsStart,\n'}
[0.802086] (igus_rebel) StdoutLine: {'line': b'5: +        errorStart,\n'}
[0.802115] (igus_rebel) StdoutLine: {'line': b'5: +                                                                 CriKeywords::STATUS_CURRENTJOINTS.\n'}
[0.802145] (igus_rebel) StdoutLine: {'line': b'5: +      size());\n'}
[0.802175] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorString = ParseMessageString(messageString, errorStart, kinstateStart,\n'}
[0.802205] (igus_rebel) StdoutLine: {'line': b'5: @@ -288 +273,2 @@\n'}
[0.802234] (igus_rebel) StdoutLine: {'line': b'5: -            std::string kinstateString = ParseMessageString(messageString, kinstateStart, messageString.size() + 1,\n'}
[0.802262] (igus_rebel) StdoutLine: {'line': b'5: +  std::string kinstateString = ParseMessageString(messageString, kinstateStart,\n'}
[0.802291] (igus_rebel) StdoutLine: {'line': b'5: +        messageString.size() + 1,\n'}
[0.802319] (igus_rebel) StdoutLine: {'line': b'5: @@ -291,20 +277,20 @@\n'}
[0.802347] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorSummaryEnd = errorString.find(" ");\n'}
[0.802375] (igus_rebel) StdoutLine: {'line': b'5: -            errorSummary = errorString.substr(0, errorSummaryEnd);\n'}
[0.802402] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorJointsString = errorString.substr(errorSummaryEnd + 1);\n'}
[0.802429] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.802457] (igus_rebel) StdoutLine: {'line': b'5: -            mode = GetMode(modeString);\n'}
[0.802484] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posJointSetPoint, posJointSetPointString);\n'}
[0.802511] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posJointCurrent, posJointCurrentString);\n'}
[0.802538] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posCartRobot, posCartRobotString);\n'}
[0.802565] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posCartPlattform, posCartPlattformString);\n'}
[0.802592] (igus_rebel) StdoutLine: {'line': b'5: -            try {\n'}
[0.802618] (igus_rebel) StdoutLine: {'line': b'5: -                overrideValue = std::stof(overrideValueString);\n'}
[0.802644] (igus_rebel) StdoutLine: {'line': b'5: -                din = std::stoi(dinString);     // TODO: Process further to actual meaning\n'}
[0.802671] (igus_rebel) StdoutLine: {'line': b'5: -                dout = std::stoi(doutString);   // TODO: Process further to actual meaning\n'}
[0.802698] (igus_rebel) StdoutLine: {'line': b'5: -                eStop = std::stoi(eStopString); // TODO: Process further to actual meaning\n'}
[0.802725] (igus_rebel) StdoutLine: {'line': b'5: -                supply = std::stoi(supplyString);\n'}
[0.802752] (igus_rebel) StdoutLine: {'line': b'5: -                currentall = std::stoi(currentallString);\n'}
[0.802779] (igus_rebel) StdoutLine: {'line': b'5: -            } catch (const std::invalid_argument &e) {\n'}
[0.802806] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing status message: %s", e.what());\n'}
[0.802839] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.802866] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(currentjoints, currentjointsString);\n'}
[0.802898] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorSummaryEnd = errorString.find(" ");\n'}
[0.802926] (igus_rebel) StdoutLine: {'line': b'5: +  errorSummary = errorString.substr(0, errorSummaryEnd);\n'}
[0.802953] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorJointsString = errorString.substr(errorSummaryEnd + 1);\n'}
[0.802981] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803007] (igus_rebel) StdoutLine: {'line': b'5: +  mode = GetMode(modeString);\n'}
[0.803034] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posJointSetPoint, posJointSetPointString);\n'}
[0.803073] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posJointCurrent, posJointCurrentString);\n'}
[0.803100] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posCartRobot, posCartRobotString);\n'}
[0.803128] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posCartPlattform, posCartPlattformString);\n'}
[0.803160] (igus_rebel) StdoutLine: {'line': b'5: +  try {\n'}
[0.803195] (igus_rebel) StdoutLine: {'line': b'5: +    overrideValue = std::stof(overrideValueString);\n'}
[0.803226] (igus_rebel) StdoutLine: {'line': b'5: +    din = std::stoi(dinString);                 // TODO: Process further to actual meaning\n'}
[0.803260] (igus_rebel) StdoutLine: {'line': b'5: +    dout = std::stoi(doutString);               // TODO: Process further to actual meaning\n'}
[0.803295] (igus_rebel) StdoutLine: {'line': b'5: +    eStop = std::stoi(eStopString);             // TODO: Process further to actual meaning\n'}
[0.803326] (igus_rebel) StdoutLine: {'line': b'5: +    supply = std::stoi(supplyString);\n'}
[0.803358] (igus_rebel) StdoutLine: {'line': b'5: +    currentall = std::stoi(currentallString);\n'}
[0.803389] (igus_rebel) StdoutLine: {'line': b'5: +  } catch (const std::invalid_argument & e) {\n'}
[0.803421] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing status message: %s", e.what());\n'}
[0.803468] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.803521] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(currentjoints, currentjointsString);\n'}
[0.803571] (igus_rebel) StdoutLine: {'line': b'5: @@ -312,59 +298,60 @@\n'}
[0.803624] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(errorJoints, errorJointsString); // TODO: Process further to actual meaning\n'}
[0.803677] (igus_rebel) StdoutLine: {'line': b'5: -            kinstate = GetKinstate(kinstateString);\n'}
[0.803729] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.803782] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.803835] (igus_rebel) StdoutLine: {'line': b'5: -        Status::Status() : CriMessage(MessageType::STATUS)\n'}
[0.803887] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.803939] (igus_rebel) StdoutLine: {'line': b'5: -            mode = Mode::UNKNOWN;\n'}
[0.803991] (igus_rebel) StdoutLine: {'line': b'5: -            posJointSetPoint.fill(0.0f);\n'}
[0.804043] (igus_rebel) StdoutLine: {'line': b'5: -            posJointCurrent.fill(0.0f);\n'}
[0.804374] (igus_rebel) StdoutLine: {'line': b'5: -            posCartRobot.fill(0.0f);\n'}
[0.804486] (igus_rebel) StdoutLine: {'line': b'5: -            posCartPlattform.fill(0.0f);\n'}
[0.804577] (igus_rebel) StdoutLine: {'line': b'5: -            overrideValue = 0.0f;\n'}
[0.804664] (igus_rebel) StdoutLine: {'line': b'5: -            din = 0;\n'}
[0.804750] (igus_rebel) StdoutLine: {'line': b'5: -            dout = 0;\n'}
[0.804837] (igus_rebel) StdoutLine: {'line': b'5: -            eStop = 0;\n'}
[0.804924] (igus_rebel) StdoutLine: {'line': b'5: -            supply = 0;\n'}
[0.805008] (igus_rebel) StdoutLine: {'line': b'5: -            currentall = 0;\n'}
[0.805131] (igus_rebel) StdoutLine: {'line': b'5: -            currentjoints.fill(0);\n'}
[0.805162] (igus_rebel) StdoutLine: {'line': b'5: -            errorSummary = "NotInitialized";\n'}
[0.805194] (igus_rebel) StdoutLine: {'line': b'5: -            errorJoints.fill(0);\n'}
[0.805222] (igus_rebel) StdoutLine: {'line': b'5: -            kinstate = Kinstate::UNKNOWN;\n'}
[0.805249] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.805276] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805302] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Status::ModeToString(const Mode &mode)\n'}
[0.805329] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.805357] (igus_rebel) StdoutLine: {'line': b'5: -            switch (mode)\n'}
[0.805384] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.805412] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::JOINT:\n'}
[0.805440] (igus_rebel) StdoutLine: {'line': b'5: -                return "Joint";\n'}
[0.805467] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::CARTBASE:\n'}
[0.805494] (igus_rebel) StdoutLine: {'line': b'5: -                return "Cartesian (base)";\n'}
[0.805521] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::CARTTOOL:\n'}
[0.805547] (igus_rebel) StdoutLine: {'line': b'5: -                return "Cartesian (tool)";\n'}
[0.805574] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::PLATFORM:\n'}
[0.805601] (igus_rebel) StdoutLine: {'line': b'5: -                return "Platform";\n'}
[0.805628] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::FSM:\n'}
[0.805654] (igus_rebel) StdoutLine: {'line': b'5: -                return "FSM";\n'}
[0.805681] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::UNKNOWN:\n'}
[0.805708] (igus_rebel) StdoutLine: {'line': b'5: -                return "Unknown";\n'}
[0.805733] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.805760] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805787] (igus_rebel) StdoutLine: {'line': b'5: -            return std::string();\n'}
[0.805814] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.805840] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805866] (igus_rebel) StdoutLine: {'line': b'5: -        void Status::Print()\n'}
[0.805892] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.805919] (igus_rebel) StdoutLine: {'line': b'5: -            std::cout << ToString();\n'}
[0.805946] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.805973] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806000] (igus_rebel) StdoutLine: {'line': b'5: -        void Status::Log()\n'}
[0.806027] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.806060] (igus_rebel) StdoutLine: {'line': b'5: -            rclcpp::Clock::SharedPtr clock_ = std::make_shared<rclcpp::Clock>(RCL_SYSTEM_TIME);\n'}
[0.806089] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *clock_, 60, "Rebel status:\\n%s", ToString().c_str());\n'}
[0.806118] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.806144] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806170] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Status::ToString()\n'}
[0.806197] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.806225] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.806251] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint\n'}
[0.806278] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(errorJoints, errorJointsString);           // TODO: Process further to actual meaning\n'}
[0.806306] (igus_rebel) StdoutLine: {'line': b'5: +  kinstate = GetKinstate(kinstateString);\n'}
[0.806334] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.806361] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.806387] (igus_rebel) StdoutLine: {'line': b'5: +Status::Status()\n'}
[0.806414] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::STATUS)\n'}
[0.806440] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.806469] (igus_rebel) StdoutLine: {'line': b'5: +  mode = Mode::UNKNOWN;\n'}
[0.806496] (igus_rebel) StdoutLine: {'line': b'5: +  posJointSetPoint.fill(0.0f);\n'}
[0.806525] (igus_rebel) StdoutLine: {'line': b'5: +  posJointCurrent.fill(0.0f);\n'}
[0.806552] (igus_rebel) StdoutLine: {'line': b'5: +  posCartRobot.fill(0.0f);\n'}
[0.806579] (igus_rebel) StdoutLine: {'line': b'5: +  posCartPlattform.fill(0.0f);\n'}
[0.806607] (igus_rebel) StdoutLine: {'line': b'5: +  overrideValue = 0.0f;\n'}
[0.806634] (igus_rebel) StdoutLine: {'line': b'5: +  din = 0;\n'}
[0.806661] (igus_rebel) StdoutLine: {'line': b'5: +  dout = 0;\n'}
[0.806689] (igus_rebel) StdoutLine: {'line': b'5: +  eStop = 0;\n'}
[0.806716] (igus_rebel) StdoutLine: {'line': b'5: +  supply = 0;\n'}
[0.806744] (igus_rebel) StdoutLine: {'line': b'5: +  currentall = 0;\n'}
[0.806771] (igus_rebel) StdoutLine: {'line': b'5: +  currentjoints.fill(0);\n'}
[0.806798] (igus_rebel) StdoutLine: {'line': b'5: +  errorSummary = "NotInitialized";\n'}
[0.806826] (igus_rebel) StdoutLine: {'line': b'5: +  errorJoints.fill(0);\n'}
[0.806853] (igus_rebel) StdoutLine: {'line': b'5: +  kinstate = Kinstate::UNKNOWN;\n'}
[0.806880] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.806908] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.806935] (igus_rebel) StdoutLine: {'line': b'5: +std::string Status::ModeToString(const Mode & mode)\n'}
[0.806962] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.806988] (igus_rebel) StdoutLine: {'line': b'5: +  switch (mode) {\n'}
[0.807015] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::JOINT:\n'}
[0.807042] (igus_rebel) StdoutLine: {'line': b'5: +      return "Joint";\n'}
[0.807077] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::CARTBASE:\n'}
[0.807107] (igus_rebel) StdoutLine: {'line': b'5: +      return "Cartesian (base)";\n'}
[0.807134] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::CARTTOOL:\n'}
[0.807163] (igus_rebel) StdoutLine: {'line': b'5: +      return "Cartesian (tool)";\n'}
[0.807193] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::PLATFORM:\n'}
[0.807221] (igus_rebel) StdoutLine: {'line': b'5: +      return "Platform";\n'}
[0.807250] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::FSM:\n'}
[0.807278] (igus_rebel) StdoutLine: {'line': b'5: +      return "FSM";\n'}
[0.807305] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::UNKNOWN:\n'}
[0.807333] (igus_rebel) StdoutLine: {'line': b'5: +      return "Unknown";\n'}
[0.807360] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.807387] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.807418] (igus_rebel) StdoutLine: {'line': b'5: +  return std::string();\n'}
[0.807447] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.807478] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.807507] (igus_rebel) StdoutLine: {'line': b'5: +void Status::Print()\n'}
[0.807534] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.807561] (igus_rebel) StdoutLine: {'line': b'5: +  std::cout << ToString();\n'}
[0.807588] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.807613] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.807640] (igus_rebel) StdoutLine: {'line': b'5: +void Status::Log()\n'}
[0.807666] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.807692] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Clock::SharedPtr clock_ = std::make_shared<rclcpp::Clock>(RCL_SYSTEM_TIME);\n'}
[0.807720] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *clock_, 60, "Rebel status:\\n%s",\n'}
[0.807748] (igus_rebel) StdoutLine: {'line': b'5: +        ToString().c_str());\n'}
[0.807775] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.807802] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.807830] (igus_rebel) StdoutLine: {'line': b'5: +std::string Status::ToString()\n'}
[0.807859] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.807886] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.807914] (igus_rebel) StdoutLine: {'line': b'5: +  msg           << std::showpoint\n'}
[0.807942] (igus_rebel) StdoutLine: {'line': b'5: @@ -390,303 +377,175 @@\n'}
[0.807969] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.807997] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.808024] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808053] (igus_rebel) StdoutLine: {'line': b'5: -        Mode Status::GetMode(const std::string &modeString)\n'}
[0.808082] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.808109] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_JOINT)\n'}
[0.808136] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.808162] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::JOINT;\n'}
[0.808188] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.808215] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808241] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_CARTBASE)\n'}
[0.808269] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.808295] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::CARTBASE;\n'}
[0.808320] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.808346] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808372] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_CARTTOOL)\n'}
[0.808397] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.808423] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::CARTTOOL;\n'}
[0.808449] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.808475] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808501] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_PLATFORM)\n'}
[0.808528] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.808554] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::PLATFORM;\n'}
[0.808579] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.808604] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808630] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_FSM)\n'}
[0.808657] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.808682] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::FSM;\n'}
[0.808709] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.808735] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808761] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown robot mode during parsing: %s", modeString.c_str());\n'}
[0.808787] (igus_rebel) StdoutLine: {'line': b'5: -            return Mode::UNKNOWN;\n'}
[0.808812] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.808838] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808864] (igus_rebel) StdoutLine: {'line': b'5: -        Kinstate Status::GetKinstate(const std::string &kinstateString)\n'}
[0.808891] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.808918] (igus_rebel) StdoutLine: {'line': b'5: -            int kinstateInt = std::stoi(kinstateString);\n'}
[0.808943] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808969] (igus_rebel) StdoutLine: {'line': b'5: -            switch (kinstateInt)\n'}
[0.808995] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.809022] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::NO_ERROR:\n'}
[0.809053] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::NO_ERROR;\n'}
[0.809081] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809107] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::JOINT_LIMIT_MIN:\n'}
[0.809135] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::JOINT_LIMIT_MIN;\n'}
[0.809161] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809187] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::JOINT_LIMIT_MAX:\n'}
[0.809214] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::JOINT_LIMIT_MAX;\n'}
[0.809241] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809266] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.809294] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_CENTER;\n'}
[0.809322] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809347] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.809374] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_REACH;\n'}
[0.809401] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809427] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.809454] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_WRIST;\n'}
[0.809480] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809506] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.809533] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1;\n'}
[0.809559] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809585] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.809612] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2;\n'}
[0.809639] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809666] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.809692] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3;\n'}
[0.809718] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809745] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.809771] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4;\n'}
[0.809798] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809825] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.809852] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5;\n'}
[0.809878] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809905] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.809931] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6;\n'}
[0.809957] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809983] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.810009] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::MOTION_NOT_ALLOWED;\n'}
[0.810034] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810064] (igus_rebel) StdoutLine: {'line': b'5: -            default:\n'}
[0.810091] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::UNKNOWN;\n'}
[0.810122] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.810150] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.810180] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810209] (igus_rebel) StdoutLine: {'line': b'5: -        Message::Message(const std::string &messageString) : CriMessage(MessageType::MESSAGE)\n'}
[0.810237] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.810263] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type messageStart =\n'}
[0.810290] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_MESSAGE) + CriKeywords::TYPE_MESSAGE.size() + 1;\n'}
[0.810317] (igus_rebel) StdoutLine: {'line': b'5: -            message = messageString.substr(messageStart);\n'}
[0.810345] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.810372] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810399] (igus_rebel) StdoutLine: {'line': b'5: -        Command::Command(const std::string &messageString) : CriMessage(MessageType::CMD)\n'}
[0.810428] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.810455] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandStart =\n'}
[0.810486] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_CMD) + CriKeywords::TYPE_CMD.size() + 1;\n'}
[0.810514] (igus_rebel) StdoutLine: {'line': b'5: -            command = messageString.substr(commandStart);\n'}
[0.810541] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.810567] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810594] (igus_rebel) StdoutLine: {'line': b'5: -        Info::Info(const std::string &messageString) : CriMessage(MessageType::INFO)\n'}
[0.810622] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.810649] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type infoStart =\n'}
[0.810675] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_INFO) + CriKeywords::TYPE_INFO.size() + 1;\n'}
[0.810702] (igus_rebel) StdoutLine: {'line': b'5: -            info = messageString.substr(infoStart);\n'}
[0.810729] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.810755] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810781] (igus_rebel) StdoutLine: {'line': b'5: -        LogMsg::LogMsg(const std::string &messageString) : CriMessage(MessageType::LOGMSG)\n'}
[0.810810] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.810836] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type logLvlStart = messageString.find(CriKeywords::TYPE_LOGMSG) + CriKeywords::TYPE_LOGMSG.size() + 1;\n'}
[0.810863] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type timestampStart = messageString.find(" ", logLvlStart) + 1;\n'}
[0.810890] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type msgStart = messageString.find(" ", timestampStart) + 1;\n'}
[0.810918] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810944] (igus_rebel) StdoutLine: {'line': b'5: -            logLevel = GetLogLevel(messageString.substr(logLvlStart, (timestampStart - logLvlStart - 1)));\n'}
[0.810971] (igus_rebel) StdoutLine: {'line': b'5: -            timestamp = std::stol(messageString.substr(timestampStart, (msgStart - timestampStart - 1)));\n'}
[0.810998] (igus_rebel) StdoutLine: {'line': b'5: -            logMsg = messageString.substr(msgStart);\n'}
[0.811025] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.811055] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811083] (igus_rebel) StdoutLine: {'line': b'5: -        LogLevel LogMsg::GetLogLevel(const std::string &logLvlString)\n'}
[0.811110] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.811138] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_DEBUG)\n'}
[0.811165] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.811192] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::DEBUG;\n'}
[0.811218] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.811244] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811272] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_APP_INFO)\n'}
[0.811301] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.811329] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::APP_INFO;\n'}
[0.811357] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.811384] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811412] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_APP_ERROR)\n'}
[0.811439] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.811466] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::APP_ERROR;\n'}
[0.811493] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.811520] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811547] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_INFO)\n'}
[0.811575] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.811601] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::INFO;\n'}
[0.811629] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.811657] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811683] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_WARN)\n'}
[0.811710] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.811737] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::WARN;\n'}
[0.811763] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.811789] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811815] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_ERROR)\n'}
[0.811842] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.811868] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::ERROR;\n'}
[0.811895] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.811921] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811948] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_FATAL)\n'}
[0.811975] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.812000] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::FATAL;\n'}
[0.812026] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.812055] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812085] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown log level during parsing: %s", logLvlString.c_str());\n'}
[0.812112] (igus_rebel) StdoutLine: {'line': b'5: -            return LogLevel::UNKNOWN;\n'}
[0.812139] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.812166] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812192] (igus_rebel) StdoutLine: {'line': b'5: -        Variables::Variables(const std::string &messageString) : CriMessage(MessageType::VARIABLES),\n'}
[0.812219] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 numberVariables(),\n'}
[0.812246] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 positionVariables()\n'}
[0.812273] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.812300] (igus_rebel) StdoutLine: {'line': b'5: -            std::regex variables_regex("\\\\S+");\n'}
[0.812326] (igus_rebel) StdoutLine: {'line': b'5: -            auto variables_begin = std::sregex_iterator(messageString.begin(), messageString.end(), variables_regex);\n'}
[0.812352] (igus_rebel) StdoutLine: {'line': b'5: -            auto variables_end = std::sregex_iterator();\n'}
[0.812378] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812404] (igus_rebel) StdoutLine: {'line': b'5: -            std::sregex_iterator it = variables_begin;\n'}
[0.812430] (igus_rebel) StdoutLine: {'line': b'5: -            while (it != variables_end)\n'}
[0.812457] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.812483] (igus_rebel) StdoutLine: {'line': b'5: -                std::string matchStr = GetMatchString((*it));\n'}
[0.812510] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812536] (igus_rebel) StdoutLine: {'line': b'5: -                if (matchStr.compare(CriKeywords::VARIABLES_NR_VARIABLE) == 0)\n'}
[0.812563] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.812590] (igus_rebel) StdoutLine: {'line': b'5: -                    NumberVariable nv;\n'}
[0.812616] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812644] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.812670] (igus_rebel) StdoutLine: {'line': b'5: -                    nv.name = GetMatchString(*it);\n'}
[0.812697] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812723] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.812751] (igus_rebel) StdoutLine: {'line': b'5: -                    nv.value = std::stod(GetMatchString(*it));\n'}
[0.812777] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812803] (igus_rebel) StdoutLine: {'line': b'5: -                    numberVariables.push_back(nv);\n'}
[0.812831] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.812858] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812884] (igus_rebel) StdoutLine: {'line': b'5: -                if (matchStr.compare(CriKeywords::VARIABLES_POS_VARIABLE) == 0)\n'}
[0.812911] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.812938] (igus_rebel) StdoutLine: {'line': b'5: -                    PositionVariable pv;\n'}
[0.812965] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812990] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.813016] (igus_rebel) StdoutLine: {'line': b'5: -                    pv.name = GetMatchString(*it);\n'}
[0.813051] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.813081] (igus_rebel) StdoutLine: {'line': b'5: -                    for (auto i = 0; i < 15; i++)\n'}
[0.813107] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.813134] (igus_rebel) StdoutLine: {'line': b'5: -                        it++;\n'}
[0.813161] (igus_rebel) StdoutLine: {'line': b'5: -                        pv.values[i] = std::stod(GetMatchString(*it));\n'}
[0.813187] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.813214] (igus_rebel) StdoutLine: {'line': b'5: -                    positionVariables.push_back(pv);\n'}
[0.813241] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.813268] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.813294] (igus_rebel) StdoutLine: {'line': b'5: -                it++;\n'}
[0.813320] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.813346] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.813372] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.813398] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Variables::GetMatchString(const std::smatch &smatch)\n'}
[0.813426] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.813452] (igus_rebel) StdoutLine: {'line': b'5: -            std::string matchStr = smatch.str();\n'}
[0.813478] (igus_rebel) StdoutLine: {'line': b"5: -            if (matchStr.length() > 0 && matchStr.back() == ',')\n"}
[0.813506] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.813531] (igus_rebel) StdoutLine: {'line': b'5: -                matchStr.pop_back();\n'}
[0.813558] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.813583] (igus_rebel) StdoutLine: {'line': b'5: -            return matchStr;\n'}
[0.813609] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.813636] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.813662] (igus_rebel) StdoutLine: {'line': b'5: -        CmdError::CmdError(const std::string &messageString) : CriMessage(MessageType::CMDERROR)\n'}
[0.813691] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.813717] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandErrorStart = messageString.find(CriKeywords::TYPE_CMDERROR) + CriKeywords::TYPE_CMDERROR.size();\n'}
[0.813743] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type countStart = messageString.find(" ", commandErrorStart) + 1;\n'}
[0.813770] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorMsgStart = messageString.find(" ", countStart) + 1;\n'}
[0.813797] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.813824] (igus_rebel) StdoutLine: {'line': b'5: -            recjectedCmd = std::stoi(messageString.substr(countStart, errorMsgStart - countStart - 1));\n'}
[0.813851] (igus_rebel) StdoutLine: {'line': b'5: -            error = messageString.substr(errorMsgStart);\n'}
[0.813876] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.813902] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.813928] (igus_rebel) StdoutLine: {'line': b'5: -        CmdAck::CmdAck(const std::string &messageString) : CriMessage(MessageType::CMDACK)\n'}
[0.813954] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.813980] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandAckStart = messageString.find(CriKeywords::TYPE_CMDACK) + CriKeywords::TYPE_CMDACK.size();\n'}
[0.814009] (igus_rebel) StdoutLine: {'line': b'5: -            acceptedCmd = std::stoi(messageString.substr(commandAckStart));\n'}
[0.814036] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.814067] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814094] (igus_rebel) StdoutLine: {'line': b'5: -        Cyclestat::Cyclestat(const std::string &messageString) : CriMessage(MessageType::CYCLESTAT)\n'}
[0.814123] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.814150] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type cyclestatStart = messageString.find(CriKeywords::TYPE_CYCLESTAT) + CriKeywords::TYPE_CYCLESTAT.size();\n'}
[0.814176] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type cycletimeStart = messageString.find(" ", cyclestatStart) + 1;\n'}
[0.814204] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type workloadStart = messageString.find(" ", cycletimeStart) + 1;\n'}
[0.814231] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814257] (igus_rebel) StdoutLine: {'line': b'5: -            cycletime = std::stoi(messageString.substr(cycletimeStart, workloadStart - cycletimeStart));\n'}
[0.814284] (igus_rebel) StdoutLine: {'line': b'5: -            workload = std::stoi(messageString.substr(workloadStart));\n'}
[0.814312] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.814338] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814364] (igus_rebel) StdoutLine: {'line': b'5: -        ConfigType Config::GetConfigType(const std::string &msg)\n'}
[0.814391] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.814417] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeStart = msg.find(" ") + 1;\n'}
[0.814444] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.814470] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814496] (igus_rebel) StdoutLine: {'line': b'5: -            std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.814524] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814550] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString != CriKeywords::TYPE_CONFIG)\n'}
[0.814577] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.814603] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Got message to parse for config data that was not a config message.");\n'}
[0.814632] (igus_rebel) StdoutLine: {'line': b'5: -                return ConfigType::UNKNOWN;\n'}
[0.814658] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.814686] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814714] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type configTypeStart = typeEnd + 1;\n'}
[0.814742] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type configTypeEnd = msg.find(" ", configTypeStart + 1);\n'}
[0.814769] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814796] (igus_rebel) StdoutLine: {'line': b'5: -            std::string configTypeString = msg.substr(configTypeStart, configTypeEnd - configTypeStart);\n'}
[0.814823] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814850] (igus_rebel) StdoutLine: {'line': b'5: -            if (configTypeString == CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER)\n'}
[0.814877] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.814903] (igus_rebel) StdoutLine: {'line': b'5: -                return ConfigType::KINEMATICLIMITS;\n'}
[0.814931] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.814959] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814987] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config type: \\"%s\\"", configTypeString.c_str());\n'}
[0.815015] (igus_rebel) StdoutLine: {'line': b'5: -            return ConfigType::UNKNOWN;\n'}
[0.815046] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.815076] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815106] (igus_rebel) StdoutLine: {'line': b'5: -        KinematicLimits::KinematicLimits(const std::string &messageString) : Config(ConfigType::KINEMATICLIMITS)\n'}
[0.815134] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.815161] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type answerStart = messageString.find(CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER);\n'}
[0.815188] (igus_rebel) StdoutLine: {'line': b'5: -            answerStart += CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER.size() + 1;\n'}
[0.815215] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815242] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<float> minMax;\n'}
[0.815269] (igus_rebel) StdoutLine: {'line': b'5: -            FillVector(minMax, messageString.substr(answerStart));\n'}
[0.815300] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815328] (igus_rebel) StdoutLine: {'line': b'5: -            if (minMax.size() % 2 != 0)\n'}
[0.815355] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.815381] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing config message of type %d", (int)configType);\n'}
[0.815408] (igus_rebel) StdoutLine: {'line': b'5: -                return;\n'}
[0.815437] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.815466] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815494] (igus_rebel) StdoutLine: {'line': b'5: -            for (size_t i = 0; i < minMax.size(); i += 2)\n'}
[0.815522] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.815549] (igus_rebel) StdoutLine: {'line': b'5: -                minMaxPairs.push_back(std::pair<float, float>(minMax.at(i), minMax.at(i + 1)));\n'}
[0.815577] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.815603] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.815630] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815657] (igus_rebel) StdoutLine: {'line': b'5: -        std::string KinematicLimits::ToString()\n'}
[0.815685] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.815713] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.815740] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815767] (igus_rebel) StdoutLine: {'line': b'5: -            for (size_t i = 0; i < minMaxPairs.size() - 1; i++)\n'}
[0.815794] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.815822] (igus_rebel) StdoutLine: {'line': b'5: -                msg << "(" << minMaxPairs.at(i).first << ", " << minMaxPairs.at(i).second << ") ";\n'}
[0.815849] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.815876] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815903] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "(" << minMaxPairs.at(minMaxPairs.size() - 1).first << ", " << minMaxPairs.at(minMaxPairs.size() - 1).second << ")";\n'}
[0.815930] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815957] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.815983] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.816010] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816038] (igus_rebel) StdoutLine: {'line': b'5: -        void KinematicLimits::Print()\n'}
[0.816068] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.816096] (igus_rebel) StdoutLine: {'line': b'5: -            std::cout << "Kinematic limits: " << ToString() << std::endl;\n'}
[0.816123] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.816150] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.816177] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.816203] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816230] (igus_rebel) StdoutLine: {'line': b'5: +Mode Status::GetMode(const std::string & modeString)\n'}
[0.816258] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.816287] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_JOINT) {\n'}
[0.816317] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::JOINT;\n'}
[0.816346] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.816376] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816404] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_CARTBASE) {\n'}
[0.816432] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::CARTBASE;\n'}
[0.816459] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.816486] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816512] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_CARTTOOL) {\n'}
[0.816540] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::CARTTOOL;\n'}
[0.816567] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.816594] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816621] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_PLATFORM) {\n'}
[0.816648] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::PLATFORM;\n'}
[0.816675] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.816702] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816728] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_FSM) {\n'}
[0.816756] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::FSM;\n'}
[0.816782] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.816810] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816836] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown robot mode during parsing: %s",\n'}
[0.816864] (igus_rebel) StdoutLine: {'line': b'5: +        modeString.c_str());\n'}
[0.816890] (igus_rebel) StdoutLine: {'line': b'5: +  return Mode::UNKNOWN;\n'}
[0.816918] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.816948] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816976] (igus_rebel) StdoutLine: {'line': b'5: +Kinstate Status::GetKinstate(const std::string & kinstateString)\n'}
[0.817006] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.817033] (igus_rebel) StdoutLine: {'line': b'5: +  int kinstateInt = std::stoi(kinstateString);\n'}
[0.817124] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817156] (igus_rebel) StdoutLine: {'line': b'5: +  switch (kinstateInt) {\n'}
[0.817185] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::NO_ERROR:\n'}
[0.817213] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::NO_ERROR;\n'}
[0.817240] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817267] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::JOINT_LIMIT_MIN:\n'}
[0.817295] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::JOINT_LIMIT_MIN;\n'}
[0.817324] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817351] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::JOINT_LIMIT_MAX:\n'}
[0.817379] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::JOINT_LIMIT_MAX;\n'}
[0.817408] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817434] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.817462] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_CENTER;\n'}
[0.817489] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817516] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.817543] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_REACH;\n'}
[0.817571] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817598] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.817625] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_WRIST;\n'}
[0.817652] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817679] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.817705] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1;\n'}
[0.817733] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817760] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.817787] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2;\n'}
[0.817816] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817843] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.817871] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3;\n'}
[0.817899] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817926] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.817954] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4;\n'}
[0.817980] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.818007] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.818034] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5;\n'}
[0.818067] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.818096] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.818124] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6;\n'}
[0.818151] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.818178] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.818206] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::MOTION_NOT_ALLOWED;\n'}
[0.818235] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.818261] (igus_rebel) StdoutLine: {'line': b'5: +    default:\n'}
[0.818289] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::UNKNOWN;\n'}
[0.818318] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.818346] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.818375] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.818401] (igus_rebel) StdoutLine: {'line': b'5: +Message::Message(const std::string & messageString)\n'}
[0.818430] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::MESSAGE)\n'}
[0.818457] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.818485] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type messageStart =\n'}
[0.818512] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_MESSAGE) + CriKeywords::TYPE_MESSAGE.size() + 1;\n'}
[0.818541] (igus_rebel) StdoutLine: {'line': b'5: +  message = messageString.substr(messageStart);\n'}
[0.818569] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.818596] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.818623] (igus_rebel) StdoutLine: {'line': b'5: +Command::Command(const std::string & messageString)\n'}
[0.818650] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMD)\n'}
[0.818678] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.818705] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandStart =\n'}
[0.818732] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_CMD) + CriKeywords::TYPE_CMD.size() + 1;\n'}
[0.818760] (igus_rebel) StdoutLine: {'line': b'5: +  command = messageString.substr(commandStart);\n'}
[0.818789] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.818817] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.818844] (igus_rebel) StdoutLine: {'line': b'5: +Info::Info(const std::string & messageString)\n'}
[0.818871] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::INFO)\n'}
[0.818899] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.818926] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type infoStart =\n'}
[0.818954] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_INFO) + CriKeywords::TYPE_INFO.size() + 1;\n'}
[0.818982] (igus_rebel) StdoutLine: {'line': b'5: +  info = messageString.substr(infoStart);\n'}
[0.819011] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.819037] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.819069] (igus_rebel) StdoutLine: {'line': b'5: +LogMsg::LogMsg(const std::string & messageString)\n'}
[0.819098] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::LOGMSG)\n'}
[0.819126] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.819156] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type logLvlStart = messageString.find(CriKeywords::TYPE_LOGMSG) +\n'}
[0.819184] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_LOGMSG.size() + 1;\n'}
[0.819210] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type timestampStart = messageString.find(" ", logLvlStart) + 1;\n'}
[0.819238] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type msgStart = messageString.find(" ", timestampStart) + 1;\n'}
[0.819266] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.819292] (igus_rebel) StdoutLine: {'line': b'5: +  logLevel = GetLogLevel(messageString.substr(logLvlStart, (timestampStart - logLvlStart - 1)));\n'}
[0.819320] (igus_rebel) StdoutLine: {'line': b'5: +  timestamp = std::stol(messageString.substr(timestampStart, (msgStart - timestampStart - 1)));\n'}
[0.819348] (igus_rebel) StdoutLine: {'line': b'5: +  logMsg = messageString.substr(msgStart);\n'}
[0.819374] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.819402] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.819428] (igus_rebel) StdoutLine: {'line': b'5: +LogLevel LogMsg::GetLogLevel(const std::string & logLvlString)\n'}
[0.819456] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.819483] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_DEBUG) {\n'}
[0.819511] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::DEBUG;\n'}
[0.819538] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.819565] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.819592] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_APP_INFO) {\n'}
[0.819620] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::APP_INFO;\n'}
[0.819648] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.819676] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.819703] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_APP_ERROR) {\n'}
[0.819731] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::APP_ERROR;\n'}
[0.819760] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.819787] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.819815] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_INFO) {\n'}
[0.819842] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::INFO;\n'}
[0.819870] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.819899] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.819929] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_WARN) {\n'}
[0.819957] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::WARN;\n'}
[0.819986] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.820015] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.820043] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_ERROR) {\n'}
[0.820076] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::ERROR;\n'}
[0.820105] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.820132] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.820159] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_FATAL) {\n'}
[0.820186] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::FATAL;\n'}
[0.820214] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.820242] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.820269] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown log level during parsing: %s",\n'}
[0.820296] (igus_rebel) StdoutLine: {'line': b'5: +        logLvlString.c_str());\n'}
[0.820324] (igus_rebel) StdoutLine: {'line': b'5: +  return LogLevel::UNKNOWN;\n'}
[0.820351] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.820377] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.820405] (igus_rebel) StdoutLine: {'line': b'5: +Variables::Variables(const std::string & messageString)\n'}
[0.820434] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::VARIABLES),\n'}
[0.820463] (igus_rebel) StdoutLine: {'line': b'5: +  numberVariables(),\n'}
[0.820494] (igus_rebel) StdoutLine: {'line': b'5: +  positionVariables()\n'}
[0.820527] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.820558] (igus_rebel) StdoutLine: {'line': b'5: +  std::regex variables_regex("\\\\S+");\n'}
[0.820588] (igus_rebel) StdoutLine: {'line': b'5: +  auto variables_begin = std::sregex_iterator(messageString.begin(), messageString.end(),\n'}
[0.820617] (igus_rebel) StdoutLine: {'line': b'5: +        variables_regex);\n'}
[0.820646] (igus_rebel) StdoutLine: {'line': b'5: +  auto variables_end = std::sregex_iterator();\n'}
[0.820675] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.820704] (igus_rebel) StdoutLine: {'line': b'5: +  std::sregex_iterator it = variables_begin;\n'}
[0.820732] (igus_rebel) StdoutLine: {'line': b'5: +  while (it != variables_end) {\n'}
[0.820762] (igus_rebel) StdoutLine: {'line': b'5: +    std::string matchStr = GetMatchString((*it));\n'}
[0.820789] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.820817] (igus_rebel) StdoutLine: {'line': b'5: +    if (matchStr.compare(CriKeywords::VARIABLES_NR_VARIABLE) == 0) {\n'}
[0.820846] (igus_rebel) StdoutLine: {'line': b'5: +      NumberVariable nv;\n'}
[0.820877] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.820906] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.820934] (igus_rebel) StdoutLine: {'line': b'5: +      nv.name = GetMatchString(*it);\n'}
[0.820963] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.820991] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.821019] (igus_rebel) StdoutLine: {'line': b'5: +      nv.value = std::stod(GetMatchString(*it));\n'}
[0.821050] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.821080] (igus_rebel) StdoutLine: {'line': b'5: +      numberVariables.push_back(nv);\n'}
[0.821108] (igus_rebel) StdoutLine: {'line': b'5: @@ -694 +553,127 @@\n'}
[0.821136] (igus_rebel) StdoutLine: {'line': b'5: -}\n'}
[0.821165] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.821193] (igus_rebel) StdoutLine: {'line': b'5: +    if (matchStr.compare(CriKeywords::VARIABLES_POS_VARIABLE) == 0) {\n'}
[0.821221] (igus_rebel) StdoutLine: {'line': b'5: +      PositionVariable pv;\n'}
[0.821251] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.821280] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.821310] (igus_rebel) StdoutLine: {'line': b'5: +      pv.name = GetMatchString(*it);\n'}
[0.821338] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.821367] (igus_rebel) StdoutLine: {'line': b'5: +      for (auto i = 0; i < 15; i++) {\n'}
[0.821396] (igus_rebel) StdoutLine: {'line': b'5: +        it++;\n'}
[0.821426] (igus_rebel) StdoutLine: {'line': b'5: +        pv.values[i] = std::stod(GetMatchString(*it));\n'}
[0.821454] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.821483] (igus_rebel) StdoutLine: {'line': b'5: +      positionVariables.push_back(pv);\n'}
[0.821511] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.821539] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.821566] (igus_rebel) StdoutLine: {'line': b'5: +    it++;\n'}
[0.821594] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.821622] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.821650] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.821678] (igus_rebel) StdoutLine: {'line': b'5: +std::string Variables::GetMatchString(const std::smatch & smatch)\n'}
[0.821707] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.821735] (igus_rebel) StdoutLine: {'line': b'5: +  std::string matchStr = smatch.str();\n'}
[0.821763] (igus_rebel) StdoutLine: {'line': b"5: +  if (matchStr.length() > 0 && matchStr.back() == ',') {\n"}
[0.821791] (igus_rebel) StdoutLine: {'line': b'5: +    matchStr.pop_back();\n'}
[0.821820] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.821849] (igus_rebel) StdoutLine: {'line': b'5: +  return matchStr;\n'}
[0.821877] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.821904] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.821932] (igus_rebel) StdoutLine: {'line': b'5: +CmdError::CmdError(const std::string & messageString)\n'}
[0.821959] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMDERROR)\n'}
[0.821989] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.822017] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandErrorStart = messageString.find(CriKeywords::TYPE_CMDERROR) +\n'}
[0.822049] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CMDERROR.size();\n'}
[0.822081] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type countStart = messageString.find(" ", commandErrorStart) + 1;\n'}
[0.822110] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorMsgStart = messageString.find(" ", countStart) + 1;\n'}
[0.822138] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822166] (igus_rebel) StdoutLine: {'line': b'5: +  recjectedCmd = std::stoi(messageString.substr(countStart, errorMsgStart - countStart - 1));\n'}
[0.822199] (igus_rebel) StdoutLine: {'line': b'5: +  error = messageString.substr(errorMsgStart);\n'}
[0.822226] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.822253] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822281] (igus_rebel) StdoutLine: {'line': b'5: +CmdAck::CmdAck(const std::string & messageString)\n'}
[0.822310] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMDACK)\n'}
[0.822342] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.822370] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandAckStart = messageString.find(CriKeywords::TYPE_CMDACK) +\n'}
[0.822397] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CMDACK.size();\n'}
[0.822425] (igus_rebel) StdoutLine: {'line': b'5: +  acceptedCmd = std::stoi(messageString.substr(commandAckStart));\n'}
[0.822452] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.822481] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822509] (igus_rebel) StdoutLine: {'line': b'5: +Cyclestat::Cyclestat(const std::string & messageString)\n'}
[0.822537] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CYCLESTAT)\n'}
[0.822566] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.822593] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type cyclestatStart = messageString.find(CriKeywords::TYPE_CYCLESTAT) +\n'}
[0.822621] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CYCLESTAT.size();\n'}
[0.822650] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type cycletimeStart = messageString.find(" ", cyclestatStart) + 1;\n'}
[0.822678] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type workloadStart = messageString.find(" ", cycletimeStart) + 1;\n'}
[0.822706] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822733] (igus_rebel) StdoutLine: {'line': b'5: +  cycletime = std::stoi(messageString.substr(cycletimeStart, workloadStart - cycletimeStart));\n'}
[0.822761] (igus_rebel) StdoutLine: {'line': b'5: +  workload = std::stoi(messageString.substr(workloadStart));\n'}
[0.822790] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.822818] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822847] (igus_rebel) StdoutLine: {'line': b'5: +ConfigType Config::GetConfigType(const std::string & msg)\n'}
[0.822876] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.822904] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeStart = msg.find(" ") + 1;\n'}
[0.822934] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.822963] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822992] (igus_rebel) StdoutLine: {'line': b'5: +  std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.823021] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823054] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString != CriKeywords::TYPE_CONFIG) {\n'}
[0.823083] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.823111] (igus_rebel) StdoutLine: {'line': b'5: +          "Got message to parse for config data that was not a config message.");\n'}
[0.823139] (igus_rebel) StdoutLine: {'line': b'5: +    return ConfigType::UNKNOWN;\n'}
[0.823168] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.823198] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823226] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type configTypeStart = typeEnd + 1;\n'}
[0.823253] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type configTypeEnd = msg.find(" ", configTypeStart + 1);\n'}
[0.823281] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823309] (igus_rebel) StdoutLine: {'line': b'5: +  std::string configTypeString = msg.substr(configTypeStart, configTypeEnd - configTypeStart);\n'}
[0.823337] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823365] (igus_rebel) StdoutLine: {'line': b'5: +  if (configTypeString == CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER) {\n'}
[0.823393] (igus_rebel) StdoutLine: {'line': b'5: +    return ConfigType::KINEMATICLIMITS;\n'}
[0.823421] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.823449] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823477] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config type: \\"%s\\"",\n'}
[0.823507] (igus_rebel) StdoutLine: {'line': b'5: +        configTypeString.c_str());\n'}
[0.823536] (igus_rebel) StdoutLine: {'line': b'5: +  return ConfigType::UNKNOWN;\n'}
[0.823564] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.823592] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823619] (igus_rebel) StdoutLine: {'line': b'5: +KinematicLimits::KinematicLimits(const std::string & messageString)\n'}
[0.823646] (igus_rebel) StdoutLine: {'line': b'5: +: Config(ConfigType::KINEMATICLIMITS)\n'}
[0.823674] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.823701] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type answerStart =\n'}
[0.823728] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER);\n'}
[0.823755] (igus_rebel) StdoutLine: {'line': b'5: +  answerStart += CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER.size() + 1;\n'}
[0.823782] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823810] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<float> minMax;\n'}
[0.823837] (igus_rebel) StdoutLine: {'line': b'5: +  FillVector(minMax, messageString.substr(answerStart));\n'}
[0.823864] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823892] (igus_rebel) StdoutLine: {'line': b'5: +  if (minMax.size() % 2 != 0) {\n'}
[0.823921] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing config message of type %d",\n'}
[0.823951] (igus_rebel) StdoutLine: {'line': b'5: +      (int)configType);\n'}
[0.823981] (igus_rebel) StdoutLine: {'line': b'5: +    return;\n'}
[0.824011] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.824039] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824073] (igus_rebel) StdoutLine: {'line': b'5: +  for (size_t i = 0; i < minMax.size(); i += 2) {\n'}
[0.824103] (igus_rebel) StdoutLine: {'line': b'5: +    minMaxPairs.push_back(std::pair<float, float>(minMax.at(i), minMax.at(i + 1)));\n'}
[0.824131] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.824161] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.824189] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824217] (igus_rebel) StdoutLine: {'line': b'5: +std::string KinematicLimits::ToString()\n'}
[0.824245] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.824274] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.824301] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824330] (igus_rebel) StdoutLine: {'line': b'5: +  for (size_t i = 0; i < minMaxPairs.size() - 1; i++) {\n'}
[0.824359] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "(" << minMaxPairs.at(i).first << ", " << minMaxPairs.at(i).second << ") ";\n'}
[0.824387] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.824415] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824443] (igus_rebel) StdoutLine: {'line': b'5: +  msg << "(" << minMaxPairs.at(minMaxPairs.size() - 1).first << ", " <<\n'}
[0.824471] (igus_rebel) StdoutLine: {'line': b'5: +    minMaxPairs.at(minMaxPairs.size() - 1).second << ")";\n'}
[0.824501] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824529] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.824557] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.824585] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824613] (igus_rebel) StdoutLine: {'line': b'5: +void KinematicLimits::Print()\n'}
[0.824641] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.824670] (igus_rebel) StdoutLine: {'line': b'5: +  std::cout << "Kinematic limits: " << ToString() << std::endl;\n'}
[0.824699] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.824727] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.824755] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.824783] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.824811] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/Rebel.cpp':\n"}
[0.824841] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.824871] (igus_rebel) StdoutLine: {'line': b'5: --- src/Rebel.cpp\n'}
[0.824900] (igus_rebel) StdoutLine: {'line': b'5: +++ src/Rebel.cpp.uncrustify\n'}
[0.824928] (igus_rebel) StdoutLine: {'line': b'5: @@ -15,8 +15,8 @@\n'}
[0.824955] (igus_rebel) StdoutLine: {'line': b'5: -    Rebel::Rebel()\n'}
[0.824983] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.825010] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.825038] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825071] (igus_rebel) StdoutLine: {'line': b'5: -    Rebel::~Rebel()\n'}
[0.825099] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.825127] (igus_rebel) StdoutLine: {'line': b'5: -        Stop();\n'}
[0.825154] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.825182] (igus_rebel) StdoutLine: {'line': b'5: +Rebel::Rebel()\n'}
[0.825209] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.825236] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.825263] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825289] (igus_rebel) StdoutLine: {'line': b'5: +Rebel::~Rebel()\n'}
[0.825316] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.825343] (igus_rebel) StdoutLine: {'line': b'5: +  Stop();\n'}
[0.825370] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.825398] (igus_rebel) StdoutLine: {'line': b'5: @@ -27 +27,17 @@\n'}
[0.825425] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::AliveThreadFunction()\n'}
[0.825452] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::AliveThreadFunction()\n'}
[0.825480] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.825508] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to send ALIVEJOG");\n'}
[0.825537] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825565] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueAlive) {\n'}
[0.825592] (igus_rebel) StdoutLine: {'line': b'5: +    std::ostringstream msg;\n'}
[0.825619] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::showpoint;\n'}
[0.825646] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::fixed;\n'}
[0.825674] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::setprecision(8);\n'}
[0.825702] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "CRISTART " << Ccnt() << " ";\n'}
[0.825730] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "ALIVEJOG ";\n'}
[0.825759] (igus_rebel) StdoutLine: {'line': b'5: +    msg << j1 << " " << j2 << " " << j3 << " ";\n'}
[0.825787] (igus_rebel) StdoutLine: {'line': b'5: +    msg << j4 << " " << j5 << " " << j6 << " ";\n'}
[0.825819] (igus_rebel) StdoutLine: {'line': b'5: +    msg << 0.0f << " " << 0.0f << " " << 0.0f << " ";\n'}
[0.825848] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "CRIEND" << std::endl;\n'}
[0.825877] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825904] (igus_rebel) StdoutLine: {'line': b'5: +            // std::cout << msg.str();\n'}
[0.825931] (igus_rebel) StdoutLine: {'line': b'5: @@ -29,3 +45,272 @@\n'}
[0.825958] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to send ALIVEJOG");\n'}
[0.825987] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.826015] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueAlive)\n'}
[0.826047] (igus_rebel) StdoutLine: {'line': b'5: +      std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.826078] (igus_rebel) StdoutLine: {'line': b'5: +      rebelSocket->SendMessage(msg.str());\n'}
[0.826104] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.826131] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826159] (igus_rebel) StdoutLine: {'line': b'5: +    std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs));\n'}
[0.826186] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.826214] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826241] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to send ALIVEJOG");\n'}
[0.826269] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.826298] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826326] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::MessageThreadFunction()\n'}
[0.826354] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.826381] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to process robot messages");\n'}
[0.826409] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826436] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueMessage) {\n'}
[0.826464] (igus_rebel) StdoutLine: {'line': b'5: +    if (rebelSocket->HasMessage()) {\n'}
[0.826495] (igus_rebel) StdoutLine: {'line': b'5: +      std::string msg = rebelSocket->GetMessage();\n'}
[0.826523] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826551] (igus_rebel) StdoutLine: {'line': b'5: +      CriMessages::MessageType type = CriMessages::CriMessage::GetMessageType(msg);\n'}
[0.826579] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826607] (igus_rebel) StdoutLine: {'line': b'5: +      switch (type) {\n'}
[0.826634] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::STATUS:\n'}
[0.826662] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.826689] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Status status = CriMessages::Status(msg);\n'}
[0.826718] (igus_rebel) StdoutLine: {'line': b'5: +                    // status.Print();\n'}
[0.826746] (igus_rebel) StdoutLine: {'line': b'5: +            status.Log();\n'}
[0.826774] (igus_rebel) StdoutLine: {'line': b'5: +            currentStatus = status;\n'}
[0.826804] (igus_rebel) StdoutLine: {'line': b'5: +            ProcessStatus(currentStatus);\n'}
[0.826833] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.826862] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.826891] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826920] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::RUNSTATE:\n'}
[0.826948] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.826977] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.827005] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.827032] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827066] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::MESSAGE:\n'}
[0.827095] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.827123] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Message message = CriMessages::Message(msg);\n'}
[0.827151] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel MESSAGE: %s",\n'}
[0.827179] (igus_rebel) StdoutLine: {'line': b'5: +              message.message.c_str());\n'}
[0.827207] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.827235] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.827263] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827291] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMD:\n'}
[0.827319] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.827347] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Command command = CriMessages::Command(msg);\n'}
[0.827376] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827404] (igus_rebel) StdoutLine: {'line': b'5: +                    // Not sure if the ROS node should display these?\n'}
[0.827434] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "CMD: %s", command.command.c_str());\n'}
[0.827462] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.827491] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.827519] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827546] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CONFIG:\n'}
[0.827575] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.827603] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::ConfigType configType = CriMessages::Config::GetConfigType(msg);\n'}
[0.827632] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827660] (igus_rebel) StdoutLine: {'line': b'5: +            switch (configType) {\n'}
[0.827688] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::ConfigType::KINEMATICLIMITS:\n'}
[0.827716] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.827743] (igus_rebel) StdoutLine: {'line': b'5: +                  CriMessages::KinematicLimits kinematicLimits = CriMessages::KinematicLimits(msg);\n'}
[0.827771] (igus_rebel) StdoutLine: {'line': b'5: +                  kinematicLimits.Print();\n'}
[0.827798] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.827826] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.827853] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::ConfigType::UNKNOWN:\n'}
[0.827881] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.827908] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config message: %s",\n'}
[0.827936] (igus_rebel) StdoutLine: {'line': b'5: +                  msg.c_str());\n'}
[0.827964] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.827992] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.828020] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828051] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.828081] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828110] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.828138] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.828165] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828192] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::INFO:\n'}
[0.828221] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.828249] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Info info = CriMessages::Info(msg);\n'}
[0.828276] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "INFO: %s", info.info.c_str());\n'}
[0.828305] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.828332] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.828359] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828386] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::LOGMSG:\n'}
[0.828414] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.828441] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::LogMsg log = CriMessages::LogMsg(msg);\n'}
[0.828469] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828497] (igus_rebel) StdoutLine: {'line': b'5: +            switch (log.logLevel) {\n'}
[0.828524] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::DEBUG:\n'}
[0.828552] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.828582] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.828611] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.828639] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.828667] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.828701] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828728] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::APP_INFO:\n'}
[0.828757] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.828783] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_INFO): %s (%ld ms)",\n'}
[0.828811] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.828839] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.828866] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.828892] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828920] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::APP_ERROR:\n'}
[0.828947] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.828974] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.829006] (igus_rebel) StdoutLine: {'line': b'5: +                  "REBEL LOG (APP_ERROR): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.829034] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.829068] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.829096] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829122] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::INFO:\n'}
[0.829149] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.829176] (igus_rebel) StdoutLine: {'line': b"5: +                        // The Rebel is pretty chatty with its INFO level log messages, so I've set them to output only to the ROS DEBUG level.\n"}
[0.829206] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.829235] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.829263] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.829291] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.829317] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829344] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::WARN:\n'}
[0.829373] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.829400] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.829428] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.829455] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.829481] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.829509] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829536] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::ERROR:\n'}
[0.829564] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.829590] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.829617] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.829645] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.829672] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.829699] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829727] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::FATAL:\n'}
[0.829755] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.829784] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_FATAL(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.829813] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.829840] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.829868] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.829896] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829925] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::UNKNOWN:\n'}
[0.829953] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.829981] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.830008] (igus_rebel) StdoutLine: {'line': b'5: +                  "REBEL LOG (UNKNOWN LOG LEVEL): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.830036] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.830069] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.830097] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.830124] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830151] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.830179] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.830206] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830233] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::VARIABLES:\n'}
[0.830261] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.830288] (igus_rebel) StdoutLine: {'line': b'5: +                    // CriMessages::Variables vars = CriMessages::Variables(msg);\n'}
[0.830317] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.830345] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.830372] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830399] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMDERROR:\n'}
[0.830428] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.830455] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::CmdError error = CriMessages::CmdError(msg);\n'}
[0.830483] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830510] (igus_rebel) StdoutLine: {'line': b'5: +            try {\n'}
[0.830537] (igus_rebel) StdoutLine: {'line': b'5: +              std::string command = unacknowledgedCommands.at(error.recjectedCmd);\n'}
[0.830565] (igus_rebel) StdoutLine: {'line': b'5: +              unacknowledgedCommands.erase(error.recjectedCmd);\n'}
[0.830593] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.830621] (igus_rebel) StdoutLine: {'line': b'5: +                "Rebel did not accept command: %s. Error message: %s", command.c_str(),\n'}
[0.830649] (igus_rebel) StdoutLine: {'line': b'5: +                error.error.c_str());\n'}
[0.830677] (igus_rebel) StdoutLine: {'line': b'5: +            } catch (const std::out_of_range & e) {\n'}
[0.830706] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.830734] (igus_rebel) StdoutLine: {'line': b'5: +                "Rebel did not accept unknown command. Error message: %s (%d)", error.error.c_str(),\n'}
[0.830761] (igus_rebel) StdoutLine: {'line': b'5: +                error.recjectedCmd);\n'}
[0.830788] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.830816] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.830843] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.830871] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830898] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMDACK:\n'}
[0.830926] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.830953] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::CmdAck ack = CriMessages::CmdAck(msg);\n'}
[0.830980] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831008] (igus_rebel) StdoutLine: {'line': b'5: +            try {\n'}
[0.831035] (igus_rebel) StdoutLine: {'line': b'5: +              std::string command = unacknowledgedCommands.at(ack.acceptedCmd);\n'}
[0.831068] (igus_rebel) StdoutLine: {'line': b'5: +              unacknowledgedCommands.erase(ack.acceptedCmd);\n'}
[0.831097] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel accepted command: %s",\n'}
[0.831125] (igus_rebel) StdoutLine: {'line': b'5: +                command.c_str());\n'}
[0.831157] (igus_rebel) StdoutLine: {'line': b'5: +              break;\n'}
[0.831186] (igus_rebel) StdoutLine: {'line': b'5: +            } catch (const std::out_of_range & e) {\n'}
[0.831216] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Rebel accepted unknown command: %d",\n'}
[0.831244] (igus_rebel) StdoutLine: {'line': b'5: +                ack.acceptedCmd);\n'}
[0.831272] (igus_rebel) StdoutLine: {'line': b'5: +              break;\n'}
[0.831299] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.831326] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.831354] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.831382] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831409] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CYCLESTAT:\n'}
[0.831437] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.831464] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Cyclestat cyclestat = CriMessages::Cyclestat(msg);\n'}
[0.831492] (igus_rebel) StdoutLine: {'line': b'5: +                    // Will only output this once every 2 minutes, because this is sent every 0.5 seconds.\n'}
[0.831520] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *node_->get_clock(), 120,\n'}
[0.831547] (igus_rebel) StdoutLine: {'line': b'5: +              "Rebel cycle statistics -- Cycletime: %d -- Workload: %d%%", cyclestat.cycletime,\n'}
[0.831578] (igus_rebel) StdoutLine: {'line': b'5: +              cyclestat.workload);\n'}
[0.831605] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.831632] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.831660] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831687] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::UNKNOWN:\n'}
[0.831715] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.831742] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "UNKNOW MESSAGE: %s", msg.c_str());\n'}
[0.831771] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.831801] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.831830] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831860] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::OPINFO:\n'}
[0.831889] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.831917] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.831945] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.831975] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832005] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::GSIG:\n'}
[0.832033] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.832067] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.832097] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.832125] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::GRIPPERSTATE:\n'}
[0.832154] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.832182] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.832210] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.832239] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.832267] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.832294] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.832322] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832350] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to process robot messages");\n'}
[0.832379] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832407] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832434] (igus_rebel) StdoutLine: {'line': b'5: +int Rebel::Ccnt()\n'}
[0.832462] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.832489] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(cntLock);\n'}
[0.832519] (igus_rebel) StdoutLine: {'line': b'5: +  int current = current_ccnt;\n'}
[0.832547] (igus_rebel) StdoutLine: {'line': b'5: +  current_ccnt = (current_ccnt % 9999) + 1;\n'}
[0.832575] (igus_rebel) StdoutLine: {'line': b'5: +  return current;\n'}
[0.832603] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832631] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832659] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetDigitalOut(const int & output, const bool & is_on)\n'}
[0.832688] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.832716] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream cmd;\n'}
[0.832744] (igus_rebel) StdoutLine: {'line': b'5: +  cmd << CriKeywords::COMMAND_DOUT << " " << output << " " << (is_on ? "true" : "false");\n'}
[0.832773] (igus_rebel) StdoutLine: {'line': b'5: +  Command(cmd.str());\n'}
[0.832800] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832828] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832854] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Command(const std::string & command)\n'}
[0.832882] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.832910] (igus_rebel) StdoutLine: {'line': b'5: +  int commandCount = Ccnt();\n'}
[0.832938] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.832967] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::START << " " << commandCount << " ";\n'}
[0.832996] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::TYPE_CMD << " ";\n'}
[0.833025] (igus_rebel) StdoutLine: {'line': b'5: +  msg << command << " ";\n'}
[0.833059] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::END << std::endl;\n'}
[0.833091] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833120] (igus_rebel) StdoutLine: {'line': b'5: +  unacknowledgedCommands[commandCount] = command;\n'}
[0.833148] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833178] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->SendMessage(msg.str());\n'}
[0.833206] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.833236] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833265] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetConfig(const std::string & config)\n'}
[0.833294] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.833320] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.833347] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::START << " " << Ccnt() << " ";\n'}
[0.833375] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::TYPE_CONFIG << " ";\n'}
[0.833403] (igus_rebel) StdoutLine: {'line': b'5: +  msg << config << " ";\n'}
[0.833431] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::END << std::endl;\n'}
[0.833460] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833487] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->SendMessage(msg.str());\n'}
[0.833513] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.833540] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833569] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetControlMode(const ControlMode & mode)\n'}
[0.833596] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.833623] (igus_rebel) StdoutLine: {'line': b'5: +  switch (mode) {\n'}
[0.833650] (igus_rebel) StdoutLine: {'line': b'5: +    case Rebel::ControlMode::POSITION:\n'}
[0.833679] (igus_rebel) StdoutLine: {'line': b'5: +      {\n'}
[0.833708] (igus_rebel) StdoutLine: {'line': b'5: @@ -33,21 +318,36 @@\n'}
[0.833736] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.833764] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.833791] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.833818] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(8);\n'}
[0.833846] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "CRISTART " << Ccnt() << " ";\n'}
[0.833875] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "ALIVEJOG ";\n'}
[0.833903] (igus_rebel) StdoutLine: {'line': b'5: -            msg << j1 << " " << j2 << " " << j3 << " ";\n'}
[0.833932] (igus_rebel) StdoutLine: {'line': b'5: -            msg << j4 << " " << j5 << " " << j6 << " ";\n'}
[0.833959] (igus_rebel) StdoutLine: {'line': b'5: -            msg << 0.0f << " " << 0.0f << " " << 0.0f << " ";\n'}
[0.833988] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "CRIEND" << std::endl;\n'}
[0.834016] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.834043] (igus_rebel) StdoutLine: {'line': b'5: -            // std::cout << msg.str();\n'}
[0.834075] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.834103] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.834132] (igus_rebel) StdoutLine: {'line': b'5: -                rebelSocket->SendMessage(msg.str());\n'}
[0.834159] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.834186] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.834215] (igus_rebel) StdoutLine: {'line': b'5: -            std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs));\n'}
[0.834243] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.834271] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.834299] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to send ALIVEJOG");\n'}
[0.834327] (igus_rebel) StdoutLine: {'line': b'5: +          std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.834355] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834383] (igus_rebel) StdoutLine: {'line': b'5: +          j1 = currentStatus.posJointCurrent.at(0);\n'}
[0.834410] (igus_rebel) StdoutLine: {'line': b'5: +          j2 = currentStatus.posJointCurrent.at(1);\n'}
[0.834436] (igus_rebel) StdoutLine: {'line': b'5: +          j3 = currentStatus.posJointCurrent.at(2);\n'}
[0.834464] (igus_rebel) StdoutLine: {'line': b'5: +          j4 = currentStatus.posJointCurrent.at(3);\n'}
[0.834492] (igus_rebel) StdoutLine: {'line': b'5: +          j5 = currentStatus.posJointCurrent.at(4);\n'}
[0.834519] (igus_rebel) StdoutLine: {'line': b'5: +          j6 = currentStatus.posJointCurrent.at(5);\n'}
[0.834546] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834573] (igus_rebel) StdoutLine: {'line': b'5: +          Command(CriKeywords::COMMAND_MOTIONTYPECARTBASE);\n'}
[0.834600] (igus_rebel) StdoutLine: {'line': b'5: +          controlMode = mode;\n'}
[0.834627] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.834655] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by position control.");\n'}
[0.834683] (igus_rebel) StdoutLine: {'line': b'5: +        break;\n'}
[0.834710] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.834737] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834764] (igus_rebel) StdoutLine: {'line': b'5: +    case Rebel::ControlMode::VELOCITY:\n'}
[0.834792] (igus_rebel) StdoutLine: {'line': b'5: +      {\n'}
[0.834820] (igus_rebel) StdoutLine: {'line': b'5: +        Command(CriKeywords::COMMAND_MOTIONTYPEJOINT);\n'}
[0.834847] (igus_rebel) StdoutLine: {'line': b'5: +        controlMode = mode;\n'}
[0.834875] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by velocity control.");\n'}
[0.834903] (igus_rebel) StdoutLine: {'line': b'5: +        break;\n'}
[0.834930] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.834957] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.834984] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.835011] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835038] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::ProcessStatus(const CriMessages::Status & status)\n'}
[0.835071] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.835101] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Kinstate currentKinstate = status.kinstate;\n'}
[0.835129] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> currentErrorJoints = status.errorJoints;\n'}
[0.835163] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835192] (igus_rebel) StdoutLine: {'line': b'5: +  if (lastKinstate != currentKinstate) {\n'}
[0.835223] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835251] (igus_rebel) StdoutLine: {'line': b'5: +    if (lastKinstate != CriMessages::Kinstate::NO_ERROR) {\n'}
[0.835280] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Kinematics error resolved [%s]",\n'}
[0.835309] (igus_rebel) StdoutLine: {'line': b'5: +          kinstateMessage.c_str());\n'}
[0.835337] (igus_rebel) StdoutLine: {'line': b'5: @@ -56,208 +356,90 @@\n'}
[0.835366] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::MessageThreadFunction()\n'}
[0.835393] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.835421] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to process robot messages");\n'}
[0.835449] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.835477] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueMessage)\n'}
[0.835504] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.835532] (igus_rebel) StdoutLine: {'line': b'5: -            if (rebelSocket->HasMessage())\n'}
[0.835560] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.835587] (igus_rebel) StdoutLine: {'line': b'5: -                std::string msg = rebelSocket->GetMessage();\n'}
[0.835614] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.835640] (igus_rebel) StdoutLine: {'line': b'5: -                CriMessages::MessageType type = CriMessages::CriMessage::GetMessageType(msg);\n'}
[0.835668] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.835694] (igus_rebel) StdoutLine: {'line': b'5: -                switch (type)\n'}
[0.835721] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.835748] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::STATUS:\n'}
[0.835775] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.835803] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Status status = CriMessages::Status(msg);\n'}
[0.835831] (igus_rebel) StdoutLine: {'line': b'5: -                    // status.Print();\n'}
[0.835857] (igus_rebel) StdoutLine: {'line': b'5: -                    status.Log();\n'}
[0.835885] (igus_rebel) StdoutLine: {'line': b'5: -                    currentStatus = status;\n'}
[0.835912] (igus_rebel) StdoutLine: {'line': b'5: -                    ProcessStatus(currentStatus);\n'}
[0.835939] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.835966] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.835993] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.836020] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::RUNSTATE:\n'}
[0.836049] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.836079] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.836106] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.836132] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.836159] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::MESSAGE:\n'}
[0.836186] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.836213] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Message message = CriMessages::Message(msg);\n'}
[0.836241] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel MESSAGE: %s", message.message.c_str());\n'}
[0.836268] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.836296] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.836323] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.836350] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMD:\n'}
[0.836380] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.836408] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Command command = CriMessages::Command(msg);\n'}
[0.836438] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.836470] (igus_rebel) StdoutLine: {'line': b'5: -                    // Not sure if the ROS node should display these?\n'}
[0.836499] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "CMD: %s", command.command.c_str());\n'}
[0.836526] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.836554] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.836581] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.836608] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CONFIG:\n'}
[0.836635] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.836662] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::ConfigType configType = CriMessages::Config::GetConfigType(msg);\n'}
[0.836690] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.836717] (igus_rebel) StdoutLine: {'line': b'5: -                    switch (configType)\n'}
[0.836743] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.836770] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::ConfigType::KINEMATICLIMITS:\n'}
[0.836798] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.836824] (igus_rebel) StdoutLine: {'line': b'5: -                        CriMessages::KinematicLimits kinematicLimits = CriMessages::KinematicLimits(msg);\n'}
[0.836852] (igus_rebel) StdoutLine: {'line': b'5: -                        kinematicLimits.Print();\n'}
[0.836879] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.836906] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.836932] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::ConfigType::UNKNOWN:\n'}
[0.836959] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.836985] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config message: %s", msg.c_str());\n'}
[0.837013] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.837040] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.837072] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.837100] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.837128] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.837157] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.837185] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.837213] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.837240] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::INFO:\n'}
[0.837268] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.837295] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Info info = CriMessages::Info(msg);\n'}
[0.837323] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "INFO: %s", info.info.c_str());\n'}
[0.837351] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.837378] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.837406] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.837433] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::LOGMSG:\n'}
[0.837461] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.837490] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::LogMsg log = CriMessages::LogMsg(msg);\n'}
[0.837519] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.837547] (igus_rebel) StdoutLine: {'line': b'5: -                    switch (log.logLevel)\n'}
[0.837574] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.837602] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::DEBUG:\n'}
[0.837628] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.837655] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.837686] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.837714] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.837741] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.837768] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::APP_INFO:\n'}
[0.837796] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.837824] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_INFO): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.837855] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.837882] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.837909] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.837937] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::APP_ERROR:\n'}
[0.837965] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.837992] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_ERROR): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.838020] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.838053] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.838083] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.838110] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::INFO:\n'}
[0.838138] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.838166] (igus_rebel) StdoutLine: {'line': b"5: -                        // The Rebel is pretty chatty with its INFO level log messages, so I've set them to output only to the ROS DEBUG level.\n"}
[0.838194] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.838222] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.838249] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.838277] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.838305] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::WARN:\n'}
[0.838333] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.838361] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.838389] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.838419] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.838447] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.838475] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::ERROR:\n'}
[0.838503] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.838531] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.838559] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.838586] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.838614] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.838641] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::FATAL:\n'}
[0.838668] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.838696] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_FATAL(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.838725] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.838752] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.838780] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.838810] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::UNKNOWN:\n'}
[0.838838] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.838866] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG (UNKNOWN LOG LEVEL): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.838893] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.838919] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.838946] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.838973] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.839000] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.839028] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.839061] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.839089] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::VARIABLES:\n'}
[0.839117] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.839144] (igus_rebel) StdoutLine: {'line': b'5: -                    // CriMessages::Variables vars = CriMessages::Variables(msg);\n'}
[0.839171] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.839198] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.839225] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.839252] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMDERROR:\n'}
[0.839279] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.839306] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::CmdError error = CriMessages::CmdError(msg);\n'}
[0.839334] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.839361] (igus_rebel) StdoutLine: {'line': b'5: -                    try\n'}
[0.839388] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.839415] (igus_rebel) StdoutLine: {'line': b'5: -                        std::string command = unacknowledgedCommands.at(error.recjectedCmd);\n'}
[0.839442] (igus_rebel) StdoutLine: {'line': b'5: -                        unacknowledgedCommands.erase(error.recjectedCmd);\n'}
[0.839470] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Rebel did not accept command: %s. Error message: %s", command.c_str(), error.error.c_str());\n'}
[0.839498] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.839525] (igus_rebel) StdoutLine: {'line': b'5: -                    catch (const std::out_of_range& e)\n'}
[0.839552] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.839579] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Rebel did not accept unknown command. Error message: %s (%d)", error.error.c_str(), error.recjectedCmd);\n'}
[0.839607] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.839634] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.839662] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.839688] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.839715] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMDACK:\n'}
[0.839742] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.839769] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::CmdAck ack = CriMessages::CmdAck(msg);\n'}
[0.839797] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.839825] (igus_rebel) StdoutLine: {'line': b'5: -                    try\n'}
[0.839853] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.839880] (igus_rebel) StdoutLine: {'line': b'5: -                        std::string command = unacknowledgedCommands.at(ack.acceptedCmd);\n'}
[0.839909] (igus_rebel) StdoutLine: {'line': b'5: -                        unacknowledgedCommands.erase(ack.acceptedCmd);\n'}
[0.839937] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel accepted command: %s", command.c_str());\n'}
[0.839967] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.839994] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.840021] (igus_rebel) StdoutLine: {'line': b'5: -                    catch (const std::out_of_range& e)\n'}
[0.840052] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.840082] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Rebel accepted unknown command: %d", ack.acceptedCmd);\n'}
[0.840109] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.840137] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.840168] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.840196] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.840224] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.840252] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CYCLESTAT:\n'}
[0.840280] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.840307] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Cyclestat cyclestat = CriMessages::Cyclestat(msg);\n'}
[0.840335] (igus_rebel) StdoutLine: {'line': b'5: -                    // Will only output this once every 2 minutes, because this is sent every 0.5 seconds.\n'}
[0.840363] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *node_->get_clock(), 120, "Rebel cycle statistics -- Cycletime: %d -- Workload: %d%%", cyclestat.cycletime, cyclestat.workload);\n'}
[0.840393] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.840421] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.840448] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.840476] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::UNKNOWN:\n'}
[0.840503] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.840531] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "UNKNOW MESSAGE: %s", msg.c_str());\n'}
[0.840559] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.840586] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.840613] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.840640] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::OPINFO:\n'}
[0.840667] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.840695] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.840723] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.840750] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.840777] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::GSIG:\n'}
[0.840805] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.840832] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.840859] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.840886] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::GRIPPERSTATE:\n'}
[0.840914] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.840942] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.840969] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.840997] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.841024] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.841057] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.841089] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.841118] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to process robot messages");\n'}
[0.841146] (igus_rebel) StdoutLine: {'line': b'5: +    if (currentKinstate != CriMessages::Kinstate::NO_ERROR) {\n'}
[0.841177] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841204] (igus_rebel) StdoutLine: {'line': b'5: +      switch (status.kinstate) {\n'}
[0.841231] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::JOINT_LIMIT_MIN:\n'}
[0.841259] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.841287] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "joint at minimum limit";\n'}
[0.841314] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.841341] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.841369] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841397] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::JOINT_LIMIT_MAX:\n'}
[0.841426] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.841454] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "joint at maximum limit";\n'}
[0.841482] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.841509] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.841536] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841565] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.841592] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.841620] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (center)";\n'}
[0.841649] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.841677] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.841704] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841730] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.841758] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.841786] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (reach)";\n'}
[0.841813] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.841840] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.841868] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841896] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.841924] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.841951] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (wrist)";\n'}
[0.841979] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842007] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842034] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842067] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.842095] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842131] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 1";\n'}
[0.842160] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842188] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842215] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842242] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.842269] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842296] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 2";\n'}
[0.842323] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842351] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842378] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842405] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.842432] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842461] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 3";\n'}
[0.842489] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842517] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842546] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842573] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.842602] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842629] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 4";\n'}
[0.842656] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842684] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842711] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842740] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.842768] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842796] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 5";\n'}
[0.842823] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842850] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842876] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842903] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.842930] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842957] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 6";\n'}
[0.842984] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.843011] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.843038] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843071] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.843101] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.843128] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "motion not allowed";\n'}
[0.843155] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.843183] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.843210] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843238] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::UNKNOWN:\n'}
[0.843267] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.843294] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "unknown error";\n'}
[0.843322] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.843348] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.843375] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843402] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::NO_ERROR:\n'}
[0.843429] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.843457] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "no error";\n'}
[0.843488] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.843516] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.843544] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.843571] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843599] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Kinematics error [%s]",\n'}
[0.843627] (igus_rebel) StdoutLine: {'line': b'5: +          kinstateMessage.c_str());\n'}
[0.843656] (igus_rebel) StdoutLine: {'line': b'5: @@ -265,7 +447,56 @@\n'}
[0.843684] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.843712] (igus_rebel) StdoutLine: {'line': b'5: -    int Rebel::Ccnt()\n'}
[0.843739] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.843766] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(cntLock);\n'}
[0.843793] (igus_rebel) StdoutLine: {'line': b'5: -        int current = current_ccnt;\n'}
[0.843821] (igus_rebel) StdoutLine: {'line': b'5: -        current_ccnt = (current_ccnt % 9999) + 1;\n'}
[0.843850] (igus_rebel) StdoutLine: {'line': b'5: -        return current;\n'}
[0.843877] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.843905] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843932] (igus_rebel) StdoutLine: {'line': b'5: +  if (currentErrorJoints != lastErrorJoints) {\n'}
[0.843964] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843992] (igus_rebel) StdoutLine: {'line': b'5: +            // loop throught the 6 joint errors\n'}
[0.844020] (igus_rebel) StdoutLine: {'line': b'5: +    for (unsigned int i = 0; i < 6; i++) {\n'}
[0.844051] (igus_rebel) StdoutLine: {'line': b'5: +      int errorJoint = currentErrorJoints.at(i);\n'}
[0.844081] (igus_rebel) StdoutLine: {'line': b'5: +      std::array<int, 8> errorJointBit;\n'}
[0.844109] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844137] (igus_rebel) StdoutLine: {'line': b'5: +      if (errorJoint != lastErrorJoints.at(i)) {\n'}
[0.844164] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844191] (igus_rebel) StdoutLine: {'line': b'5: +                    // extract bits from the error to analyze it\n'}
[0.844219] (igus_rebel) StdoutLine: {'line': b'5: +        for (unsigned j = 0; j < 8; j++) {\n'}
[0.844246] (igus_rebel) StdoutLine: {'line': b'5: +          errorJointBit[j] = errorJoint & (int)exp2(j);\n'}
[0.844274] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.844301] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844328] (igus_rebel) StdoutLine: {'line': b'5: +        std::string errorMsg = "";\n'}
[0.844355] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(0) == static_cast<int>(CriMessages::ErrorJoint::TEMP)) {\n'}
[0.844383] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Overtemperature\' ";\n'}
[0.844410] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.844437] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844464] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(1) == static_cast<int>(CriMessages::ErrorJoint::ESTOP_LOWV)) {\n'}
[0.844492] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Supply too low: Is emergency button pressed?\' ";\n'}
[0.844520] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.844547] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844575] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(2) == static_cast<int>(CriMessages::ErrorJoint::MNE)) {\n'}
[0.844603] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Motor not enabled\' ";\n'}
[0.844630] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.844657] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844685] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(3) == static_cast<int>(CriMessages::ErrorJoint::COM)) {\n'}
[0.844714] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Communication watch dog\' ";\n'}
[0.844741] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.844768] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844795] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(4) == static_cast<int>(CriMessages::ErrorJoint::POS)) {\n'}
[0.844824] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Position lag\' ";\n'}
[0.844852] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.844879] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844907] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(5) == static_cast<int>(CriMessages::ErrorJoint::ENC)) {\n'}
[0.844934] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Encoder Error\' ";\n'}
[0.844963] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.844990] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.845018] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(6) == static_cast<int>(CriMessages::ErrorJoint::OC)) {\n'}
[0.845049] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Overcurrent\' ";\n'}
[0.845081] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.845109] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.845136] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(7) == static_cast<int>(CriMessages::ErrorJoint::DRV)) {\n'}
[0.845166] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'DriveError/SVM\' ";\n'}
[0.845197] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.845226] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.845255] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorMsg != "") {\n'}
[0.845283] (igus_rebel) StdoutLine: {'line': b'5: +          RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Joint %i Error: [%s]", i,\n'}
[0.845310] (igus_rebel) StdoutLine: {'line': b'5: +              errorMsg.c_str());\n'}
[0.845338] (igus_rebel) StdoutLine: {'line': b'5: +        } else {\n'}
[0.845365] (igus_rebel) StdoutLine: {'line': b'5: +          RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Joint %i Error: Cleared", i);\n'}
[0.845393] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.845420] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.845448] (igus_rebel) StdoutLine: {'line': b'5: @@ -273,247 +504,5 @@\n'}
[0.845475] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845502] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetDigitalOut(const int &output, const bool &is_on)\n'}
[0.845530] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.845557] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream cmd;\n'}
[0.845583] (igus_rebel) StdoutLine: {'line': b'5: -        cmd << CriKeywords::COMMAND_DOUT << " " << output << " " << (is_on ? "true" : "false");\n'}
[0.845610] (igus_rebel) StdoutLine: {'line': b'5: -        Command(cmd.str());\n'}
[0.845639] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.845666] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845693] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Command(const std::string &command)\n'}
[0.845720] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.845747] (igus_rebel) StdoutLine: {'line': b'5: -        int commandCount = Ccnt();\n'}
[0.845773] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream msg;\n'}
[0.845800] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::START << " " << commandCount << " ";\n'}
[0.845827] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::TYPE_CMD << " ";\n'}
[0.845854] (igus_rebel) StdoutLine: {'line': b'5: -        msg << command << " ";\n'}
[0.845881] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::END << std::endl;\n'}
[0.845907] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845934] (igus_rebel) StdoutLine: {'line': b'5: -        unacknowledgedCommands[commandCount] = command;\n'}
[0.845961] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845987] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->SendMessage(msg.str());\n'}
[0.846015] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.846041] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846075] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetConfig(const std::string &config)\n'}
[0.846103] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.846129] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream msg;\n'}
[0.846156] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::START << " " << Ccnt() << " ";\n'}
[0.846183] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::TYPE_CONFIG << " ";\n'}
[0.846210] (igus_rebel) StdoutLine: {'line': b'5: -        msg << config << " ";\n'}
[0.846239] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::END << std::endl;\n'}
[0.846265] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846293] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->SendMessage(msg.str());\n'}
[0.846321] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.846348] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846375] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetControlMode(const ControlMode &mode)\n'}
[0.846403] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.846429] (igus_rebel) StdoutLine: {'line': b'5: -        switch (mode)\n'}
[0.846457] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.846483] (igus_rebel) StdoutLine: {'line': b'5: -        case Rebel::ControlMode::POSITION:\n'}
[0.846511] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.846541] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.846568] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.846596] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846622] (igus_rebel) StdoutLine: {'line': b'5: -                j1 = currentStatus.posJointCurrent.at(0);\n'}
[0.846649] (igus_rebel) StdoutLine: {'line': b'5: -                j2 = currentStatus.posJointCurrent.at(1);\n'}
[0.846679] (igus_rebel) StdoutLine: {'line': b'5: -                j3 = currentStatus.posJointCurrent.at(2);\n'}
[0.846706] (igus_rebel) StdoutLine: {'line': b'5: -                j4 = currentStatus.posJointCurrent.at(3);\n'}
[0.846733] (igus_rebel) StdoutLine: {'line': b'5: -                j5 = currentStatus.posJointCurrent.at(4);\n'}
[0.846759] (igus_rebel) StdoutLine: {'line': b'5: -                j6 = currentStatus.posJointCurrent.at(5);\n'}
[0.846786] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846812] (igus_rebel) StdoutLine: {'line': b'5: -                Command(CriKeywords::COMMAND_MOTIONTYPECARTBASE);\n'}
[0.846839] (igus_rebel) StdoutLine: {'line': b'5: -                controlMode = mode;\n'}
[0.846867] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.846894] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by position control.");\n'}
[0.846921] (igus_rebel) StdoutLine: {'line': b'5: -            break;\n'}
[0.846949] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.846975] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847002] (igus_rebel) StdoutLine: {'line': b'5: -        case Rebel::ControlMode::VELOCITY:\n'}
[0.847030] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.847062] (igus_rebel) StdoutLine: {'line': b'5: -            Command(CriKeywords::COMMAND_MOTIONTYPEJOINT);\n'}
[0.847092] (igus_rebel) StdoutLine: {'line': b'5: -            controlMode = mode;\n'}
[0.847120] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by velocity control.");\n'}
[0.847148] (igus_rebel) StdoutLine: {'line': b'5: -            break;\n'}
[0.847176] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.847203] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.847232] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.847259] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847286] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::ProcessStatus(const CriMessages::Status &status)\n'}
[0.847313] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.847340] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Kinstate currentKinstate = status.kinstate;\n'}
[0.847368] (igus_rebel) StdoutLine: {'line': b'5: -        std::array<int, 16> currentErrorJoints = status.errorJoints;\n'}
[0.847396] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847423] (igus_rebel) StdoutLine: {'line': b'5: -        if (lastKinstate != currentKinstate)\n'}
[0.847449] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.847475] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847502] (igus_rebel) StdoutLine: {'line': b'5: -            if (lastKinstate != CriMessages::Kinstate::NO_ERROR)\n'}
[0.847528] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.847554] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Kinematics error resolved [%s]", kinstateMessage.c_str());\n'}
[0.847584] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.847612] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847640] (igus_rebel) StdoutLine: {'line': b'5: -            if (currentKinstate != CriMessages::Kinstate::NO_ERROR)\n'}
[0.847670] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.847699] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847727] (igus_rebel) StdoutLine: {'line': b'5: -                switch (status.kinstate)\n'}
[0.847755] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.847785] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::JOINT_LIMIT_MIN:\n'}
[0.847812] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.847839] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "joint at minimum limit";\n'}
[0.847867] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.847894] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.847922] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847949] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::JOINT_LIMIT_MAX:\n'}
[0.847977] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848004] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "joint at maximum limit";\n'}
[0.848030] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848063] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848091] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848117] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.848146] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848174] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (center)";\n'}
[0.848201] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848229] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848256] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848283] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.848310] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848337] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (reach)";\n'}
[0.848364] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848391] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848418] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848444] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.848470] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848497] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (wrist)";\n'}
[0.848523] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848550] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848577] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848603] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.848630] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848656] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 1";\n'}
[0.848683] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848709] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848736] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848763] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.848791] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848819] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 2";\n'}
[0.848846] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848874] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848901] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848929] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.848956] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848983] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 3";\n'}
[0.849010] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.849039] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.849073] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849102] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.849128] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.849155] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 4";\n'}
[0.849181] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.849209] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.849236] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849263] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.849290] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.849318] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 5";\n'}
[0.849345] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.849372] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.849399] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849426] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.849453] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.849479] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 6";\n'}
[0.849506] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.849533] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.849559] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849588] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.849619] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.849647] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "motion not allowed";\n'}
[0.849674] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.849702] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.849728] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849756] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::UNKNOWN:\n'}
[0.849783] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.849809] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "unknown error";\n'}
[0.849836] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.849864] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.849891] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849918] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::NO_ERROR:\n'}
[0.849946] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.849975] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "no error";\n'}
[0.850002] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.850030] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.850061] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.850091] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850119] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Kinematics error [%s]", kinstateMessage.c_str());\n'}
[0.850147] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.850175] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.850203] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850230] (igus_rebel) StdoutLine: {'line': b'5: -        if (currentErrorJoints != lastErrorJoints)\n'}
[0.850259] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.850286] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850315] (igus_rebel) StdoutLine: {'line': b'5: -            // loop throught the 6 joint errors\n'}
[0.850343] (igus_rebel) StdoutLine: {'line': b'5: -            for (unsigned int i = 0; i < 6; i++)\n'}
[0.850373] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.850400] (igus_rebel) StdoutLine: {'line': b'5: -                int errorJoint = currentErrorJoints.at(i);\n'}
[0.850428] (igus_rebel) StdoutLine: {'line': b'5: -                std::array<int, 8> errorJointBit;\n'}
[0.850454] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850482] (igus_rebel) StdoutLine: {'line': b'5: -                if (errorJoint != lastErrorJoints.at(i))\n'}
[0.850509] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.850536] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850564] (igus_rebel) StdoutLine: {'line': b'5: -                    // extract bits from the error to analyze it\n'}
[0.850593] (igus_rebel) StdoutLine: {'line': b'5: -                    for (unsigned j = 0; j < 8; j++)\n'}
[0.850620] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.850648] (igus_rebel) StdoutLine: {'line': b'5: -                        errorJointBit[j] = errorJoint & (int)exp2(j);\n'}
[0.850677] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.850705] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850732] (igus_rebel) StdoutLine: {'line': b'5: -                    std::string errorMsg = "";\n'}
[0.850760] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(0) == static_cast<int>(CriMessages::ErrorJoint::TEMP))\n'}
[0.850788] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.850815] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Overtemperature\' ";\n'}
[0.850843] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.850870] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850898] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(1) == static_cast<int>(CriMessages::ErrorJoint::ESTOP_LOWV))\n'}
[0.850926] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.850954] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Supply too low: Is emergency button pressed?\' ";\n'}
[0.850982] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851008] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851035] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(2) == static_cast<int>(CriMessages::ErrorJoint::MNE))\n'}
[0.851069] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851096] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Motor not enabled\' ";\n'}
[0.851124] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851152] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851180] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(3) == static_cast<int>(CriMessages::ErrorJoint::COM))\n'}
[0.851207] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851235] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Communication watch dog\' ";\n'}
[0.851263] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851290] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851317] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(4) == static_cast<int>(CriMessages::ErrorJoint::POS))\n'}
[0.851345] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851372] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Position lag\' ";\n'}
[0.851400] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851427] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851454] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(5) == static_cast<int>(CriMessages::ErrorJoint::ENC))\n'}
[0.851482] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851511] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Encoder Error\' ";\n'}
[0.851538] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851568] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851596] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(6) == static_cast<int>(CriMessages::ErrorJoint::OC))\n'}
[0.851624] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851651] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Overcurrent\' ";\n'}
[0.851679] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851706] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851735] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(7) == static_cast<int>(CriMessages::ErrorJoint::DRV))\n'}
[0.851763] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851791] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'DriveError/SVM\' ";\n'}
[0.851818] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851846] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851874] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorMsg != "")\n'}
[0.851902] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851929] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Joint %i Error: [%s]", i, errorMsg.c_str());\n'}
[0.851958] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851984] (igus_rebel) StdoutLine: {'line': b'5: -                    else\n'}
[0.852011] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.852038] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Joint %i Error: Cleared", i);\n'}
[0.852074] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.852102] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.852130] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.852159] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.852186] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.852213] (igus_rebel) StdoutLine: {'line': b'5: -        lastKinstate = currentKinstate;\n'}
[0.852240] (igus_rebel) StdoutLine: {'line': b'5: -        lastErrorJoints = currentErrorJoints;\n'}
[0.852268] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.852294] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.852322] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852349] (igus_rebel) StdoutLine: {'line': b'5: +  lastKinstate = currentKinstate;\n'}
[0.852376] (igus_rebel) StdoutLine: {'line': b'5: +  lastErrorJoints = currentErrorJoints;\n'}
[0.852404] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.852432] (igus_rebel) StdoutLine: {'line': b'5: @@ -524,52 +513,54 @@\n'}
[0.852459] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetJog(const float &joint1, const float &joint2, const float &joint3,\n'}
[0.852487] (igus_rebel) StdoutLine: {'line': b'5: -                       const float &joint4, const float &joint5, const float &joint6)\n'}
[0.852518] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.852547] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = joint1;\n'}
[0.852575] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = joint2;\n'}
[0.852605] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = joint3;\n'}
[0.852635] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = joint4;\n'}
[0.852665] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = joint5;\n'}
[0.852693] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = joint6;\n'}
[0.852719] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.852747] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.852774] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetJoints(float &joint1, float &joint2, float &joint3,\n'}
[0.852802] (igus_rebel) StdoutLine: {'line': b'5: -                          float &joint4, float &joint5, float &joint6)\n'}
[0.852830] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.852857] (igus_rebel) StdoutLine: {'line': b'5: -        joint1 = currentStatus.posJointCurrent.at(0);\n'}
[0.852886] (igus_rebel) StdoutLine: {'line': b'5: -        joint2 = currentStatus.posJointCurrent.at(1);\n'}
[0.852915] (igus_rebel) StdoutLine: {'line': b'5: -        joint3 = currentStatus.posJointCurrent.at(2);\n'}
[0.852942] (igus_rebel) StdoutLine: {'line': b'5: -        joint4 = currentStatus.posJointCurrent.at(3);\n'}
[0.852968] (igus_rebel) StdoutLine: {'line': b'5: -        joint5 = currentStatus.posJointCurrent.at(4);\n'}
[0.852995] (igus_rebel) StdoutLine: {'line': b'5: -        joint6 = currentStatus.posJointCurrent.at(5);\n'}
[0.853022] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.853054] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853083] (igus_rebel) StdoutLine: {'line': b'5: -    CallbackReturn Rebel::on_init(const HardwareInfo&)\n'}
[0.853111] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.853138] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket = std::make_shared<RebelSocket>(ip, port, 200),\n'}
[0.853165] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = 0.0f;\n'}
[0.853193] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = 0.0f;\n'}
[0.853220] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = 0.0f;\n'}
[0.853246] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = 0.0f;\n'}
[0.853273] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = 0.0f;\n'}
[0.853300] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = 0.0f;\n'}
[0.853327] (igus_rebel) StdoutLine: {'line': b'5: -        controlMode = Rebel::ControlMode::VELOCITY;\n'}
[0.853353] (igus_rebel) StdoutLine: {'line': b'5: -        current_ccnt = 1;\n'}
[0.853381] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = false;\n'}
[0.853409] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = false;\n'}
[0.853436] (igus_rebel) StdoutLine: {'line': b'5: -        aliveWaitMs = 100;\n'}
[0.853463] (igus_rebel) StdoutLine: {'line': b'5: -        lastKinstate = CriMessages::Kinstate::NO_ERROR;\n'}
[0.853490] (igus_rebel) StdoutLine: {'line': b'5: -        kinstateMessage = "";\n'}
[0.853518] (igus_rebel) StdoutLine: {'line': b'5: -        node_ = std::make_shared<rclcpp::Node>("igus_rebel");\n'}
[0.853545] (igus_rebel) StdoutLine: {'line': b'5: -        digital_output_srv_ = node_->create_service<igus_rebel_msgs::srv::SetDigitalOutput>(\n'}
[0.853573] (igus_rebel) StdoutLine: {'line': b'5: -            "set_digital_output", std::bind(&Rebel::dio_callback, this, std::placeholders::_1, std::placeholders::_2));\n'}
[0.853601] (igus_rebel) StdoutLine: {'line': b'5: -        Start();\n'}
[0.853627] (igus_rebel) StdoutLine: {'line': b'5: -        return CallbackReturn::SUCCESS;\n'}
[0.853655] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.853682] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853707] (igus_rebel) StdoutLine: {'line': b'5: -    std::vector<StateInterface> Rebel::export_state_interfaces()\n'}
[0.853734] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.853761] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<StateInterface> state_interfaces;\n'}
[0.853788] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853815] (igus_rebel) StdoutLine: {'line': b'5: -        for (int i = 0; i < 6; ++i)\n'}
[0.853842] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.853870] (igus_rebel) StdoutLine: {'line': b'5: -            state_interfaces.emplace_back(StateInterface(\n'}
[0.853897] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetJog(\n'}
[0.853924] (igus_rebel) StdoutLine: {'line': b'5: +  const float & joint1, const float & joint2, const float & joint3,\n'}
[0.853951] (igus_rebel) StdoutLine: {'line': b'5: +  const float & joint4, const float & joint5, const float & joint6)\n'}
[0.853977] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.854003] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = joint1;\n'}
[0.854028] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = joint2;\n'}
[0.854060] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = joint3;\n'}
[0.854089] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = joint4;\n'}
[0.854118] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = joint5;\n'}
[0.854145] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = joint6;\n'}
[0.854172] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.854199] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.854227] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetJoints(\n'}
[0.854253] (igus_rebel) StdoutLine: {'line': b'5: +  float & joint1, float & joint2, float & joint3,\n'}
[0.854280] (igus_rebel) StdoutLine: {'line': b'5: +  float & joint4, float & joint5, float & joint6)\n'}
[0.854308] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.854335] (igus_rebel) StdoutLine: {'line': b'5: +  joint1 = currentStatus.posJointCurrent.at(0);\n'}
[0.854362] (igus_rebel) StdoutLine: {'line': b'5: +  joint2 = currentStatus.posJointCurrent.at(1);\n'}
[0.854389] (igus_rebel) StdoutLine: {'line': b'5: +  joint3 = currentStatus.posJointCurrent.at(2);\n'}
[0.854416] (igus_rebel) StdoutLine: {'line': b'5: +  joint4 = currentStatus.posJointCurrent.at(3);\n'}
[0.854442] (igus_rebel) StdoutLine: {'line': b'5: +  joint5 = currentStatus.posJointCurrent.at(4);\n'}
[0.854469] (igus_rebel) StdoutLine: {'line': b'5: +  joint6 = currentStatus.posJointCurrent.at(5);\n'}
[0.854496] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.854523] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.854551] (igus_rebel) StdoutLine: {'line': b'5: +CallbackReturn Rebel::on_init(const HardwareInfo &)\n'}
[0.854578] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.854605] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket = std::make_shared<RebelSocket>(ip, port, 200),\n'}
[0.854633] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = 0.0f;\n'}
[0.854660] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = 0.0f;\n'}
[0.854688] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = 0.0f;\n'}
[0.854715] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = 0.0f;\n'}
[0.854742] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = 0.0f;\n'}
[0.854768] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = 0.0f;\n'}
[0.854795] (igus_rebel) StdoutLine: {'line': b'5: +  controlMode = Rebel::ControlMode::VELOCITY;\n'}
[0.854821] (igus_rebel) StdoutLine: {'line': b'5: +  current_ccnt = 1;\n'}
[0.854847] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = false;\n'}
[0.854874] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = false;\n'}
[0.854902] (igus_rebel) StdoutLine: {'line': b'5: +  aliveWaitMs = 100;\n'}
[0.854929] (igus_rebel) StdoutLine: {'line': b'5: +  lastKinstate = CriMessages::Kinstate::NO_ERROR;\n'}
[0.854956] (igus_rebel) StdoutLine: {'line': b'5: +  kinstateMessage = "";\n'}
[0.854983] (igus_rebel) StdoutLine: {'line': b'5: +  node_ = std::make_shared<rclcpp::Node>("igus_rebel");\n'}
[0.855009] (igus_rebel) StdoutLine: {'line': b'5: +  digital_output_srv_ = node_->create_service<igus_rebel_msgs::srv::SetDigitalOutput>(\n'}
[0.855036] (igus_rebel) StdoutLine: {'line': b'5: +            "set_digital_output",\n'}
[0.855069] (igus_rebel) StdoutLine: {'line': b'5: +      std::bind(&Rebel::dio_callback, this, std::placeholders::_1, std::placeholders::_2));\n'}
[0.855097] (igus_rebel) StdoutLine: {'line': b'5: +  Start();\n'}
[0.855125] (igus_rebel) StdoutLine: {'line': b'5: +  return CallbackReturn::SUCCESS;\n'}
[0.855152] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.855179] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.855207] (igus_rebel) StdoutLine: {'line': b'5: +std::vector<StateInterface> Rebel::export_state_interfaces()\n'}
[0.855236] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.855262] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<StateInterface> state_interfaces;\n'}
[0.855289] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.855315] (igus_rebel) StdoutLine: {'line': b'5: +  for (int i = 0; i < 6; ++i) {\n'}
[0.855342] (igus_rebel) StdoutLine: {'line': b'5: +    state_interfaces.emplace_back(StateInterface(\n'}
[0.855369] (igus_rebel) StdoutLine: {'line': b'5: @@ -577 +568 @@\n'}
[0.855397] (igus_rebel) StdoutLine: {'line': b'5: -            state_interfaces.emplace_back(StateInterface(\n'}
[0.855426] (igus_rebel) StdoutLine: {'line': b'5: +    state_interfaces.emplace_back(StateInterface(\n'}
[0.855456] (igus_rebel) StdoutLine: {'line': b'5: @@ -579,12 +570,11 @@\n'}
[0.855483] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.855511] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855537] (igus_rebel) StdoutLine: {'line': b'5: -        return state_interfaces;\n'}
[0.855565] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.855592] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855618] (igus_rebel) StdoutLine: {'line': b'5: -    std::vector<CommandInterface> Rebel::export_command_interfaces()\n'}
[0.855646] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.855672] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<CommandInterface> command_interfaces;\n'}
[0.855700] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855726] (igus_rebel) StdoutLine: {'line': b'5: -        for (int i = 0; i < 6; ++i)\n'}
[0.855756] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.855783] (igus_rebel) StdoutLine: {'line': b'5: -            command_interfaces.emplace_back(CommandInterface(\n'}
[0.855811] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.855837] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.855864] (igus_rebel) StdoutLine: {'line': b'5: +  return state_interfaces;\n'}
[0.855891] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.855918] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.855945] (igus_rebel) StdoutLine: {'line': b'5: +std::vector<CommandInterface> Rebel::export_command_interfaces()\n'}
[0.855973] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.856000] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<CommandInterface> command_interfaces;\n'}
[0.856028] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.856061] (igus_rebel) StdoutLine: {'line': b'5: +  for (int i = 0; i < 6; ++i) {\n'}
[0.856090] (igus_rebel) StdoutLine: {'line': b'5: +    command_interfaces.emplace_back(CommandInterface(\n'}
[0.856117] (igus_rebel) StdoutLine: {'line': b'5: @@ -592,37 +582,37 @@\n'}
[0.856144] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.856172] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856199] (igus_rebel) StdoutLine: {'line': b'5: -        return command_interfaces;\n'}
[0.856226] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.856253] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856279] (igus_rebel) StdoutLine: {'line': b'5: -    return_type Rebel::read(const rclcpp::Time&, const rclcpp::Duration &period)\n'}
[0.856306] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.856333] (igus_rebel) StdoutLine: {'line': b'5: -        read();\n'}
[0.856360] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856389] (igus_rebel) StdoutLine: {'line': b'5: -        vel[0] = (pos[0] - last_pos[0]) / period.seconds();\n'}
[0.856417] (igus_rebel) StdoutLine: {'line': b'5: -        vel[1] = (pos[1] - last_pos[1]) / period.seconds();\n'}
[0.856444] (igus_rebel) StdoutLine: {'line': b'5: -        vel[2] = (pos[2] - last_pos[2]) / period.seconds();\n'}
[0.856472] (igus_rebel) StdoutLine: {'line': b'5: -        vel[3] = (pos[3] - last_pos[3]) / period.seconds();\n'}
[0.856500] (igus_rebel) StdoutLine: {'line': b'5: -        vel[4] = (pos[4] - last_pos[4]) / period.seconds();\n'}
[0.856528] (igus_rebel) StdoutLine: {'line': b'5: -        vel[5] = (pos[5] - last_pos[5]) / period.seconds();\n'}
[0.856555] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856582] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[0] = pos[0];\n'}
[0.856610] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[1] = pos[1];\n'}
[0.856638] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[2] = pos[2];\n'}
[0.856665] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[3] = pos[3];\n'}
[0.856693] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[4] = pos[4];\n'}
[0.856720] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[5] = pos[5];\n'}
[0.856747] (igus_rebel) StdoutLine: {'line': b'5: -        return return_type::OK;\n'}
[0.856774] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.856804] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856831] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::read()\n'}
[0.856858] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.856884] (igus_rebel) StdoutLine: {'line': b'5: -        pos[0] = currentStatus.posJointCurrent.at(0) * degToRad;\n'}
[0.856912] (igus_rebel) StdoutLine: {'line': b'5: -        pos[1] = currentStatus.posJointCurrent.at(1) * degToRad;\n'}
[0.856939] (igus_rebel) StdoutLine: {'line': b'5: -        pos[2] = currentStatus.posJointCurrent.at(2) * degToRad;\n'}
[0.856966] (igus_rebel) StdoutLine: {'line': b'5: -        pos[3] = currentStatus.posJointCurrent.at(3) * degToRad;\n'}
[0.856994] (igus_rebel) StdoutLine: {'line': b'5: -        pos[4] = currentStatus.posJointCurrent.at(4) * degToRad;\n'}
[0.857020] (igus_rebel) StdoutLine: {'line': b'5: -        pos[5] = currentStatus.posJointCurrent.at(5) * degToRad;\n'}
[0.857052] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.857081] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.857112] (igus_rebel) StdoutLine: {'line': b'5: -    return_type Rebel::write(const rclcpp::Time&, const rclcpp::Duration&)\n'}
[0.857141] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.857168] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.857193] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857220] (igus_rebel) StdoutLine: {'line': b'5: +  return command_interfaces;\n'}
[0.857245] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.857271] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857297] (igus_rebel) StdoutLine: {'line': b'5: +return_type Rebel::read(const rclcpp::Time &, const rclcpp::Duration & period)\n'}
[0.857324] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.857349] (igus_rebel) StdoutLine: {'line': b'5: +  read();\n'}
[0.857375] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857401] (igus_rebel) StdoutLine: {'line': b'5: +  vel[0] = (pos[0] - last_pos[0]) / period.seconds();\n'}
[0.857426] (igus_rebel) StdoutLine: {'line': b'5: +  vel[1] = (pos[1] - last_pos[1]) / period.seconds();\n'}
[0.857452] (igus_rebel) StdoutLine: {'line': b'5: +  vel[2] = (pos[2] - last_pos[2]) / period.seconds();\n'}
[0.857477] (igus_rebel) StdoutLine: {'line': b'5: +  vel[3] = (pos[3] - last_pos[3]) / period.seconds();\n'}
[0.857502] (igus_rebel) StdoutLine: {'line': b'5: +  vel[4] = (pos[4] - last_pos[4]) / period.seconds();\n'}
[0.857527] (igus_rebel) StdoutLine: {'line': b'5: +  vel[5] = (pos[5] - last_pos[5]) / period.seconds();\n'}
[0.857552] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857578] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[0] = pos[0];\n'}
[0.857604] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[1] = pos[1];\n'}
[0.857630] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[2] = pos[2];\n'}
[0.857656] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[3] = pos[3];\n'}
[0.857682] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[4] = pos[4];\n'}
[0.857709] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[5] = pos[5];\n'}
[0.857735] (igus_rebel) StdoutLine: {'line': b'5: +  return return_type::OK;\n'}
[0.857761] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.857787] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857813] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::read()\n'}
[0.857839] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.857865] (igus_rebel) StdoutLine: {'line': b'5: +  pos[0] = currentStatus.posJointCurrent.at(0) * degToRad;\n'}
[0.857892] (igus_rebel) StdoutLine: {'line': b'5: +  pos[1] = currentStatus.posJointCurrent.at(1) * degToRad;\n'}
[0.857917] (igus_rebel) StdoutLine: {'line': b'5: +  pos[2] = currentStatus.posJointCurrent.at(2) * degToRad;\n'}
[0.857943] (igus_rebel) StdoutLine: {'line': b'5: +  pos[3] = currentStatus.posJointCurrent.at(3) * degToRad;\n'}
[0.857968] (igus_rebel) StdoutLine: {'line': b'5: +  pos[4] = currentStatus.posJointCurrent.at(4) * degToRad;\n'}
[0.857995] (igus_rebel) StdoutLine: {'line': b'5: +  pos[5] = currentStatus.posJointCurrent.at(5) * degToRad;\n'}
[0.858022] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.858055] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.858083] (igus_rebel) StdoutLine: {'line': b'5: +return_type Rebel::write(const rclcpp::Time &, const rclcpp::Duration &)\n'}
[0.858110] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.858137] (igus_rebel) StdoutLine: {'line': b'5: @@ -630,6 +620,6 @@\n'}
[0.858164] (igus_rebel) StdoutLine: {'line': b'5: -        write();\n'}
[0.858191] (igus_rebel) StdoutLine: {'line': b'5: -        return return_type::OK;\n'}
[0.858217] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.858243] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858270] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::write()\n'}
[0.858295] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.858323] (igus_rebel) StdoutLine: {'line': b'5: +  write();\n'}
[0.858351] (igus_rebel) StdoutLine: {'line': b'5: +  return return_type::OK;\n'}
[0.858378] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.858404] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.858431] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::write()\n'}
[0.858458] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.858484] (igus_rebel) StdoutLine: {'line': b'5: @@ -637,32 +627,31 @@\n'}
[0.858510] (igus_rebel) StdoutLine: {'line': b'5: -        if (rclcpp::ok())\n'}
[0.858536] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.858561] (igus_rebel) StdoutLine: {'line': b'5: -            rclcpp::spin_some(node_);\n'}
[0.858587] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.858613] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858639] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = (float)vel_cmd[0];\n'}
[0.858664] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = (float)vel_cmd[1];\n'}
[0.858689] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = (float)vel_cmd[2];\n'}
[0.858716] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = (float)vel_cmd[3];\n'}
[0.858741] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = (float)vel_cmd[4];\n'}
[0.858766] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = (float)vel_cmd[5];\n'}
[0.858792] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.858817] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858843] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::dio_callback(\n'}
[0.858870] (igus_rebel) StdoutLine: {'line': b'5: -        const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.858896] (igus_rebel) StdoutLine: {'line': b'5: -        std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response)\n'}
[0.858922] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.858948] (igus_rebel) StdoutLine: {'line': b'5: -        SetDigitalOut(request->output.output, request->output.is_on);\n'}
[0.858974] (igus_rebel) StdoutLine: {'line': b'5: -        response->success = true;\n'}
[0.859001] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.859028] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859061] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetReferenceInfo()\n'}
[0.859090] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.859117] (igus_rebel) StdoutLine: {'line': b'5: -        Command(std::string("GetReferencingInfo"));\n'}
[0.859143] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.859169] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859200] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Start()\n'}
[0.859225] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.859251] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = true;\n'}
[0.859277] (igus_rebel) StdoutLine: {'line': b'5: -        messageThread = std::thread(&Rebel::MessageThreadFunction, this);\n'}
[0.859303] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859330] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->Start();\n'}
[0.859355] (igus_rebel) StdoutLine: {'line': b'5: +  if (rclcpp::ok()) {\n'}
[0.859382] (igus_rebel) StdoutLine: {'line': b'5: +    rclcpp::spin_some(node_);\n'}
[0.859408] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.859434] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859462] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = (float)vel_cmd[0];\n'}
[0.859488] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = (float)vel_cmd[1];\n'}
[0.859514] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = (float)vel_cmd[2];\n'}
[0.859540] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = (float)vel_cmd[3];\n'}
[0.859565] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = (float)vel_cmd[4];\n'}
[0.859590] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = (float)vel_cmd[5];\n'}
[0.859617] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.859643] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859668] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::dio_callback(\n'}
[0.859695] (igus_rebel) StdoutLine: {'line': b'5: +  const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.859723] (igus_rebel) StdoutLine: {'line': b'5: +  std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response)\n'}
[0.859753] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.859780] (igus_rebel) StdoutLine: {'line': b'5: +  SetDigitalOut(request->output.output, request->output.is_on);\n'}
[0.859806] (igus_rebel) StdoutLine: {'line': b'5: +  response->success = true;\n'}
[0.859833] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.859860] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859886] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetReferenceInfo()\n'}
[0.859911] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.859938] (igus_rebel) StdoutLine: {'line': b'5: +  Command(std::string("GetReferencingInfo"));\n'}
[0.859964] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.859990] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.860016] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Start()\n'}
[0.860048] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.860078] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = true;\n'}
[0.860104] (igus_rebel) StdoutLine: {'line': b'5: +  messageThread = std::thread(&Rebel::MessageThreadFunction, this);\n'}
[0.860133] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.860159] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->Start();\n'}
[0.860186] (igus_rebel) StdoutLine: {'line': b'5: @@ -673,30 +662,29 @@\n'}
[0.860212] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_SETACTIVE + " true");\n'}
[0.860238] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_RESET);\n'}
[0.860262] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_ENABLE);\n'}
[0.860288] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860313] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = true;\n'}
[0.860340] (igus_rebel) StdoutLine: {'line': b'5: -        aliveThread = std::thread(&Rebel::AliveThreadFunction, this);\n'}
[0.860367] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860393] (igus_rebel) StdoutLine: {'line': b'5: -        GetConfig(CriKeywords::CONFIG_GETKINEMATICLIMITS);\n'}
[0.860419] (igus_rebel) StdoutLine: {'line': b'5: -        SetControlMode(ControlMode::VELOCITY);\n'}
[0.860445] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.860471] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860497] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Stop()\n'}
[0.860523] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.860548] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = 0.0f;\n'}
[0.860574] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = 0.0f;\n'}
[0.860600] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = 0.0f;\n'}
[0.860625] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = 0.0f;\n'}
[0.860651] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = 0.0f;\n'}
[0.860677] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = 0.0f;\n'}
[0.860702] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860727] (igus_rebel) StdoutLine: {'line': b'5: -        std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs + 10));\n'}
[0.860753] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860778] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = false;\n'}
[0.860806] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860831] (igus_rebel) StdoutLine: {'line': b'5: -        if (aliveThread.joinable())\n'}
[0.860856] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.860882] (igus_rebel) StdoutLine: {'line': b'5: -            aliveThread.join();\n'}
[0.860907] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.860932] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860959] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_DISABLE);\n'}
[0.860986] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_SETACTIVE + " true");\n'}
[0.861013] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_RESET);\n'}
[0.861040] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_ENABLE);\n'}
[0.861073] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.861101] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = true;\n'}
[0.861129] (igus_rebel) StdoutLine: {'line': b'5: +  aliveThread = std::thread(&Rebel::AliveThreadFunction, this);\n'}
[0.861156] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.861182] (igus_rebel) StdoutLine: {'line': b'5: +  GetConfig(CriKeywords::CONFIG_GETKINEMATICLIMITS);\n'}
[0.861208] (igus_rebel) StdoutLine: {'line': b'5: +  SetControlMode(ControlMode::VELOCITY);\n'}
[0.861234] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.861260] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.861286] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Stop()\n'}
[0.861311] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.861337] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = 0.0f;\n'}
[0.861364] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = 0.0f;\n'}
[0.861390] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = 0.0f;\n'}
[0.861415] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = 0.0f;\n'}
[0.861441] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = 0.0f;\n'}
[0.861467] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = 0.0f;\n'}
[0.861493] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.861519] (igus_rebel) StdoutLine: {'line': b'5: +  std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs + 10));\n'}
[0.861546] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.861572] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = false;\n'}
[0.861598] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.861624] (igus_rebel) StdoutLine: {'line': b'5: +  if (aliveThread.joinable()) {\n'}
[0.861650] (igus_rebel) StdoutLine: {'line': b'5: +    aliveThread.join();\n'}
[0.861677] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.861704] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.861730] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_DISABLE);\n'}
[0.861756] (igus_rebel) StdoutLine: {'line': b'5: @@ -704,11 +692,10 @@\n'}
[0.861782] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_QUIT);\n'}
[0.861808] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861836] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->Stop();\n'}
[0.861864] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861891] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = false;\n'}
[0.861918] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861944] (igus_rebel) StdoutLine: {'line': b'5: -        if (messageThread.joinable())\n'}
[0.861972] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.861998] (igus_rebel) StdoutLine: {'line': b'5: -            messageThread.join();\n'}
[0.862025] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.862057] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.862087] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_QUIT);\n'}
[0.862114] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.862141] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->Stop();\n'}
[0.862169] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.862195] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = false;\n'}
[0.862220] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.862245] (igus_rebel) StdoutLine: {'line': b'5: +  if (messageThread.joinable()) {\n'}
[0.862277] (igus_rebel) StdoutLine: {'line': b'5: +    messageThread.join();\n'}
[0.862304] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.862330] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.862356] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.862381] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/RebelSocket.cpp':\n"}
[0.862408] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.862433] (igus_rebel) StdoutLine: {'line': b'5: --- src/RebelSocket.cpp\n'}
[0.862459] (igus_rebel) StdoutLine: {'line': b'5: +++ src/RebelSocket.cpp.uncrustify\n'}
[0.862484] (igus_rebel) StdoutLine: {'line': b'5: @@ -15,14 +15,14 @@\n'}
[0.862510] (igus_rebel) StdoutLine: {'line': b'5: -    RebelSocket::RebelSocket(const std::string &ip, const int &port, const int &timeout)\n'}
[0.862537] (igus_rebel) StdoutLine: {'line': b'5: -        : sock(0),\n'}
[0.862563] (igus_rebel) StdoutLine: {'line': b'5: -          ip(ip),\n'}
[0.862590] (igus_rebel) StdoutLine: {'line': b'5: -          port(port),\n'}
[0.862615] (igus_rebel) StdoutLine: {'line': b'5: -          timeout(timeout),\n'}
[0.862641] (igus_rebel) StdoutLine: {'line': b'5: -          unprocessedMessages(),\n'}
[0.862667] (igus_rebel) StdoutLine: {'line': b'5: -          fragmentBuffer{0}\n'}
[0.862693] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.862719] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.862745] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862770] (igus_rebel) StdoutLine: {'line': b'5: -    RebelSocket::~RebelSocket()\n'}
[0.862796] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.862822] (igus_rebel) StdoutLine: {'line': b'5: -        Stop();\n'}
[0.862848] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.862874] (igus_rebel) StdoutLine: {'line': b'5: +RebelSocket::RebelSocket(const std::string & ip, const int & port, const int & timeout)\n'}
[0.862901] (igus_rebel) StdoutLine: {'line': b'5: +: sock(0),\n'}
[0.862927] (igus_rebel) StdoutLine: {'line': b'5: +  ip(ip),\n'}
[0.862953] (igus_rebel) StdoutLine: {'line': b'5: +  port(port),\n'}
[0.862979] (igus_rebel) StdoutLine: {'line': b'5: +  timeout(timeout),\n'}
[0.863005] (igus_rebel) StdoutLine: {'line': b'5: +  unprocessedMessages(),\n'}
[0.863032] (igus_rebel) StdoutLine: {'line': b'5: +  fragmentBuffer{0}\n'}
[0.863064] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.863092] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.863120] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.863146] (igus_rebel) StdoutLine: {'line': b'5: +RebelSocket::~RebelSocket()\n'}
[0.863171] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.863197] (igus_rebel) StdoutLine: {'line': b'5: +  Stop();\n'}
[0.863222] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.863248] (igus_rebel) StdoutLine: {'line': b'5: @@ -33,2 +33,2 @@\n'}
[0.863274] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::MakeConnection()\n'}
[0.863299] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.863325] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::MakeConnection()\n'}
[0.863350] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.863375] (igus_rebel) StdoutLine: {'line': b'5: @@ -37,16 +37,14 @@\n'}
[0.863404] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(connectionLock);\n'}
[0.863430] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863454] (igus_rebel) StdoutLine: {'line': b'5: -        while (connectionNeeded)\n'}
[0.863480] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.863506] (igus_rebel) StdoutLine: {'line': b'5: -            sock = 0;\n'}
[0.863532] (igus_rebel) StdoutLine: {'line': b'5: -            struct sockaddr_in serv_addr;\n'}
[0.863557] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863582] (igus_rebel) StdoutLine: {'line': b'5: -            if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0)\n'}
[0.863607] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.863632] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket creation error.");\n'}
[0.863661] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.863688] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.863716] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.863743] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863769] (igus_rebel) StdoutLine: {'line': b'5: -            serv_addr.sin_family = AF_INET;\n'}
[0.863796] (igus_rebel) StdoutLine: {'line': b'5: -            serv_addr.sin_port = htons(port);\n'}
[0.863823] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(connectionLock);\n'}
[0.863851] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.863876] (igus_rebel) StdoutLine: {'line': b'5: +  while (connectionNeeded) {\n'}
[0.863903] (igus_rebel) StdoutLine: {'line': b'5: +    sock = 0;\n'}
[0.863929] (igus_rebel) StdoutLine: {'line': b'5: +    struct sockaddr_in serv_addr;\n'}
[0.863956] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.863983] (igus_rebel) StdoutLine: {'line': b'5: +    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {\n'}
[0.864010] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket creation error.");\n'}
[0.864041] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.864076] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.864105] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.864133] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.864160] (igus_rebel) StdoutLine: {'line': b'5: +    serv_addr.sin_family = AF_INET;\n'}
[0.864186] (igus_rebel) StdoutLine: {'line': b'5: +    serv_addr.sin_port = htons(port);\n'}
[0.864212] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,16 +53,42 @@\n'}
[0.864238] (igus_rebel) StdoutLine: {'line': b'5: -            if (inet_pton(AF_INET, ip.c_str(), &serv_addr.sin_addr) <= 0)\n'}
[0.864264] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.864291] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Invalid robot IP address / Address not supported.");\n'}
[0.864318] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.864345] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.864371] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.864398] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864424] (igus_rebel) StdoutLine: {'line': b'5: -            if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0)\n'}
[0.864451] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.864478] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Connection Failed.");\n'}
[0.864505] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.864532] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.864560] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.864587] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864614] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = false;\n'}
[0.864641] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Connected to ReBeL at %s:%d", ip.c_str(), port);\n'}
[0.864667] (igus_rebel) StdoutLine: {'line': b'5: +    if (inet_pton(AF_INET, ip.c_str(), &serv_addr.sin_addr) <= 0) {\n'}
[0.864694] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.864721] (igus_rebel) StdoutLine: {'line': b'5: +          "Invalid robot IP address / Address not supported.");\n'}
[0.864747] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.864774] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.864800] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.864828] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.864854] (igus_rebel) StdoutLine: {'line': b'5: +    if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0) {\n'}
[0.864881] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Connection Failed.");\n'}
[0.864907] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.864932] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.864959] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.864987] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865014] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = false;\n'}
[0.865045] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Connected to ReBeL at %s:%d", ip.c_str(), port);\n'}
[0.865077] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.865104] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.865133] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865158] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::SeparateMessages(const char *msg)\n'}
[0.865185] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.865209] (igus_rebel) StdoutLine: {'line': b'5: +  const char *start;\n'}
[0.865236] (igus_rebel) StdoutLine: {'line': b'5: +  const char *end = msg;\n'}
[0.865262] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865288] (igus_rebel) StdoutLine: {'line': b'5: +  while (true) {\n'}
[0.865315] (igus_rebel) StdoutLine: {'line': b'5: +    start = std::strstr(end, CriKeywords::START.c_str());\n'}
[0.865341] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865367] (igus_rebel) StdoutLine: {'line': b'5: +    if (start == nullptr) {\n'}
[0.865393] (igus_rebel) StdoutLine: {'line': b'5: +      break;\n'}
[0.865419] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.865445] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865471] (igus_rebel) StdoutLine: {'line': b'5: +    end = std::strstr(start, CriKeywords::END.c_str());\n'}
[0.865498] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865524] (igus_rebel) StdoutLine: {'line': b'5: +    if (end == nullptr) {\n'}
[0.865550] (igus_rebel) StdoutLine: {'line': b'5: +                // Found a start without end.\n'}
[0.865577] (igus_rebel) StdoutLine: {'line': b'5: +      const char *remainingStart = start + CriKeywords::START.size();\n'}
[0.865603] (igus_rebel) StdoutLine: {'line': b"5: +      const char *remainingEnd = std::strchr(remainingStart, '\\0');\n"}
[0.865630] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865656] (igus_rebel) StdoutLine: {'line': b'5: +      if (remainingEnd != nullptr) {\n'}
[0.865682] (igus_rebel) StdoutLine: {'line': b'5: +        fragmentLength = remainingEnd - remainingStart;\n'}
[0.865708] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865734] (igus_rebel) StdoutLine: {'line': b'5: +        for (int i = 0; i < fragmentLength; i++) {\n'}
[0.865760] (igus_rebel) StdoutLine: {'line': b'5: +          fragmentBuffer[i] = *(remainingStart + i);\n'}
[0.865787] (igus_rebel) StdoutLine: {'line': b'5: @@ -72,3 +96,8 @@\n'}
[0.865813] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.865838] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865864] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::SeparateMessages(const char *msg)\n'}
[0.865891] (igus_rebel) StdoutLine: {'line': b'5: +      } else {\n'}
[0.865917] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.865943] (igus_rebel) StdoutLine: {'line': b'5: +            "Socket read was not null-terminated, somehow.");\n'}
[0.865969] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.865995] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.866023] (igus_rebel) StdoutLine: {'line': b'5: +      break;\n'}
[0.866054] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.866083] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.866110] (igus_rebel) StdoutLine: {'line': b'5: @@ -76,40 +105,2 @@\n'}
[0.866138] (igus_rebel) StdoutLine: {'line': b'5: -        const char *start;\n'}
[0.866167] (igus_rebel) StdoutLine: {'line': b'5: -        const char *end = msg;\n'}
[0.866193] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866219] (igus_rebel) StdoutLine: {'line': b'5: -        while (true)\n'}
[0.866245] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.866270] (igus_rebel) StdoutLine: {'line': b'5: -            start = std::strstr(end, CriKeywords::START.c_str());\n'}
[0.866296] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866322] (igus_rebel) StdoutLine: {'line': b'5: -            if (start == nullptr)\n'}
[0.866347] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.866373] (igus_rebel) StdoutLine: {'line': b'5: -                break;\n'}
[0.866399] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.866426] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866451] (igus_rebel) StdoutLine: {'line': b'5: -            end = std::strstr(start, CriKeywords::END.c_str());\n'}
[0.866481] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866506] (igus_rebel) StdoutLine: {'line': b'5: -            if (end == nullptr)\n'}
[0.866532] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.866558] (igus_rebel) StdoutLine: {'line': b'5: -                // Found a start without end.\n'}
[0.866584] (igus_rebel) StdoutLine: {'line': b'5: -                const char *remainingStart = start + CriKeywords::START.size();\n'}
[0.866611] (igus_rebel) StdoutLine: {'line': b"5: -                const char *remainingEnd = std::strchr(remainingStart, '\\0');\n"}
[0.866637] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866662] (igus_rebel) StdoutLine: {'line': b'5: -                if (remainingEnd != nullptr)\n'}
[0.866687] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.866713] (igus_rebel) StdoutLine: {'line': b'5: -                    fragmentLength = remainingEnd - remainingStart;\n'}
[0.866738] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866764] (igus_rebel) StdoutLine: {'line': b'5: -                    for (int i = 0; i < fragmentLength; i++)\n'}
[0.866790] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.866816] (igus_rebel) StdoutLine: {'line': b'5: -                        fragmentBuffer[i] = *(remainingStart + i);\n'}
[0.866843] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.866869] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.866894] (igus_rebel) StdoutLine: {'line': b'5: -                else\n'}
[0.866919] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.866945] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket read was not null-terminated, somehow.");\n'}
[0.866972] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.866999] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.867026] (igus_rebel) StdoutLine: {'line': b'5: -                break;\n'}
[0.867057] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.867087] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.867114] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.867141] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.867167] (igus_rebel) StdoutLine: {'line': b'5: -                unprocessedMessages.push_front(\n'}
[0.867193] (igus_rebel) StdoutLine: {'line': b'5: +      std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.867220] (igus_rebel) StdoutLine: {'line': b'5: +      unprocessedMessages.push_front(\n'}
[0.867246] (igus_rebel) StdoutLine: {'line': b'5: @@ -119 +110,29 @@\n'}
[0.867272] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.867299] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.867325] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.867353] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.867382] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.867409] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::ReceiveThreadFunction()\n'}
[0.867437] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.867465] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to receive messages from robot.");\n'}
[0.867492] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.867519] (igus_rebel) StdoutLine: {'line': b'5: +  char buffer[bufferSize * 2] = {0};\n'}
[0.867546] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.867572] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueReceive) {\n'}
[0.867599] (igus_rebel) StdoutLine: {'line': b'5: +    if (connectionNeeded) {\n'}
[0.867624] (igus_rebel) StdoutLine: {'line': b'5: +      MakeConnection();\n'}
[0.867650] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.867676] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.867702] (igus_rebel) StdoutLine: {'line': b'5: +    int valread = read(sock, buffer + fragmentLength, bufferSize);\n'}
[0.867729] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.867754] (igus_rebel) StdoutLine: {'line': b'5: +    if (!IsSocketOk()) {\n'}
[0.867781] (igus_rebel) StdoutLine: {'line': b'5: +      connectionNeeded = true;\n'}
[0.867807] (igus_rebel) StdoutLine: {'line': b'5: +    } else {\n'}
[0.867833] (igus_rebel) StdoutLine: {'line': b'5: +      if (valread == 0) {\n'}
[0.867859] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Empty message received");\n'}
[0.867884] (igus_rebel) StdoutLine: {'line': b'5: +        connectionNeeded = true;\n'}
[0.867910] (igus_rebel) StdoutLine: {'line': b'5: +      } else {\n'}
[0.867935] (igus_rebel) StdoutLine: {'line': b'5: +        if (fragmentLength > 0) {\n'}
[0.867962] (igus_rebel) StdoutLine: {'line': b'5: +          for (int i = 0; i < fragmentLength; i++) {\n'}
[0.867988] (igus_rebel) StdoutLine: {'line': b'5: +            buffer[i] = fragmentBuffer[i];\n'}
[0.868016] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.868050] (igus_rebel) StdoutLine: {'line': b'5: +          fragmentLength = 0;\n'}
[0.868080] (igus_rebel) StdoutLine: {'line': b'5: @@ -121,46 +140,4 @@\n'}
[0.868107] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.868135] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.868161] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::ReceiveThreadFunction()\n'}
[0.868187] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.868213] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to receive messages from robot.");\n'}
[0.868239] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.868266] (igus_rebel) StdoutLine: {'line': b'5: -        char buffer[bufferSize * 2] = {0};\n'}
[0.868291] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.868317] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueReceive)\n'}
[0.868343] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.868369] (igus_rebel) StdoutLine: {'line': b'5: -            if (connectionNeeded)\n'}
[0.868395] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.868420] (igus_rebel) StdoutLine: {'line': b'5: -                MakeConnection();\n'}
[0.868445] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.868471] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.868497] (igus_rebel) StdoutLine: {'line': b'5: -            int valread = read(sock, buffer + fragmentLength, bufferSize);\n'}
[0.868524] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.868550] (igus_rebel) StdoutLine: {'line': b'5: -            if (!IsSocketOk())\n'}
[0.868576] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.868602] (igus_rebel) StdoutLine: {'line': b'5: -                connectionNeeded = true;\n'}
[0.868628] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.868654] (igus_rebel) StdoutLine: {'line': b'5: -            else\n'}
[0.868680] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.868706] (igus_rebel) StdoutLine: {'line': b'5: -                if (valread == 0)\n'}
[0.868731] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.868757] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Empty message received");\n'}
[0.868785] (igus_rebel) StdoutLine: {'line': b'5: -                    connectionNeeded = true;\n'}
[0.868811] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.868837] (igus_rebel) StdoutLine: {'line': b'5: -                else\n'}
[0.868863] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.868889] (igus_rebel) StdoutLine: {'line': b'5: -                    if (fragmentLength > 0)\n'}
[0.868915] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.868941] (igus_rebel) StdoutLine: {'line': b'5: -                        for (int i = 0; i < fragmentLength; i++)\n'}
[0.868967] (igus_rebel) StdoutLine: {'line': b'5: -                        {\n'}
[0.868994] (igus_rebel) StdoutLine: {'line': b'5: -                            buffer[i] = fragmentBuffer[i];\n'}
[0.869022] (igus_rebel) StdoutLine: {'line': b'5: -                        }\n'}
[0.869054] (igus_rebel) StdoutLine: {'line': b'5: -                        fragmentLength = 0;\n'}
[0.869083] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.869112] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869139] (igus_rebel) StdoutLine: {'line': b'5: -                    SeparateMessages(buffer);\n'}
[0.869168] (igus_rebel) StdoutLine: {'line': b'5: -                    for (int i = 0; i < bufferSize * 2; i++)\n'}
[0.869196] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.869224] (igus_rebel) StdoutLine: {'line': b'5: -                        buffer[i] = 0;\n'}
[0.869251] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.869281] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.869307] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.869333] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.869358] (igus_rebel) StdoutLine: {'line': b'5: +        SeparateMessages(buffer);\n'}
[0.869384] (igus_rebel) StdoutLine: {'line': b'5: +        for (int i = 0; i < bufferSize * 2; i++) {\n'}
[0.869410] (igus_rebel) StdoutLine: {'line': b'5: +          buffer[i] = 0;\n'}
[0.869437] (igus_rebel) StdoutLine: {'line': b'5: @@ -168,3 +145,6 @@\n'}
[0.869464] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869490] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to receive messages from robot.");\n'}
[0.869516] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.869543] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.869570] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.869596] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.869623] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.869650] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to receive messages from robot.");\n'}
[0.869677] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.869703] (igus_rebel) StdoutLine: {'line': b'5: @@ -175,42 +155,41 @@\n'}
[0.869729] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::ListCheckThreadFunction()\n'}
[0.869760] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.869787] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to check if the message list is being processed.");\n'}
[0.869814] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869839] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueReceive)\n'}
[0.869865] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.869892] (igus_rebel) StdoutLine: {'line': b'5: -            if (unprocessedMessages.size() > maxUnprocessedMessages)\n'}
[0.869918] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.869945] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Robot messages are not processed fast enough. Discarding messages.");\n'}
[0.869972] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869998] (igus_rebel) StdoutLine: {'line': b'5: -                while (unprocessedMessages.size() > (maxUnprocessedMessages * 0.9))\n'}
[0.870026] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.870058] (igus_rebel) StdoutLine: {'line': b'5: -                    unprocessedMessages.pop_back();\n'}
[0.870086] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.870113] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.870139] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870165] (igus_rebel) StdoutLine: {'line': b'5: -            std::this_thread::sleep_for(std::chrono::milliseconds(listCheckWaitMs));\n'}
[0.870191] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.870218] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870245] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to check if the message list is being processed.");\n'}
[0.870272] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.870297] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870323] (igus_rebel) StdoutLine: {'line': b'5: -    bool RebelSocket::IsSocketOk()\n'}
[0.870349] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.870376] (igus_rebel) StdoutLine: {'line': b'5: -        int error = 0;\n'}
[0.870402] (igus_rebel) StdoutLine: {'line': b'5: -        socklen_t len = sizeof(error);\n'}
[0.870428] (igus_rebel) StdoutLine: {'line': b'5: -        int retval = getsockopt(sock, SOL_SOCKET, SO_ERROR, &error, &len);\n'}
[0.870454] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870480] (igus_rebel) StdoutLine: {'line': b'5: -        if (retval != 0)\n'}
[0.870505] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.870530] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error getting socket error code: %s", strerror(retval));\n'}
[0.870557] (igus_rebel) StdoutLine: {'line': b'5: -            return false;\n'}
[0.870584] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.870610] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870635] (igus_rebel) StdoutLine: {'line': b'5: -        if (error != 0)\n'}
[0.870662] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.870688] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket error: %s", strerror(error));\n'}
[0.870714] (igus_rebel) StdoutLine: {'line': b'5: -            return false;\n'}
[0.870740] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.870767] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870794] (igus_rebel) StdoutLine: {'line': b'5: -        return true;\n'}
[0.870821] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.870847] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::ListCheckThreadFunction()\n'}
[0.870874] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.870901] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"),\n'}
[0.870927] (igus_rebel) StdoutLine: {'line': b'5: +      "Starting to check if the message list is being processed.");\n'}
[0.870953] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870979] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueReceive) {\n'}
[0.871006] (igus_rebel) StdoutLine: {'line': b'5: +    if (unprocessedMessages.size() > maxUnprocessedMessages) {\n'}
[0.871033] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_WARN(rclcpp::get_logger("igus_rebel"),\n'}
[0.871066] (igus_rebel) StdoutLine: {'line': b'5: +          "Robot messages are not processed fast enough. Discarding messages.");\n'}
[0.871093] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871119] (igus_rebel) StdoutLine: {'line': b'5: +      while (unprocessedMessages.size() > (maxUnprocessedMessages * 0.9)) {\n'}
[0.871146] (igus_rebel) StdoutLine: {'line': b'5: +        unprocessedMessages.pop_back();\n'}
[0.871173] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.871199] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.871226] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871252] (igus_rebel) StdoutLine: {'line': b'5: +    std::this_thread::sleep_for(std::chrono::milliseconds(listCheckWaitMs));\n'}
[0.871280] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.871306] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871332] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"),\n'}
[0.871359] (igus_rebel) StdoutLine: {'line': b'5: +      "Stopped to check if the message list is being processed.");\n'}
[0.871385] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.871410] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871435] (igus_rebel) StdoutLine: {'line': b'5: +bool RebelSocket::IsSocketOk()\n'}
[0.871461] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.871487] (igus_rebel) StdoutLine: {'line': b'5: +  int error = 0;\n'}
[0.871513] (igus_rebel) StdoutLine: {'line': b'5: +  socklen_t len = sizeof(error);\n'}
[0.871541] (igus_rebel) StdoutLine: {'line': b'5: +  int retval = getsockopt(sock, SOL_SOCKET, SO_ERROR, &error, &len);\n'}
[0.871567] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871592] (igus_rebel) StdoutLine: {'line': b'5: +  if (retval != 0) {\n'}
[0.871618] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error getting socket error code: %s",\n'}
[0.871644] (igus_rebel) StdoutLine: {'line': b'5: +        strerror(retval));\n'}
[0.871669] (igus_rebel) StdoutLine: {'line': b'5: +    return false;\n'}
[0.871695] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.871721] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871747] (igus_rebel) StdoutLine: {'line': b'5: +  if (error != 0) {\n'}
[0.871772] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket error: %s", strerror(error));\n'}
[0.871798] (igus_rebel) StdoutLine: {'line': b'5: +    return false;\n'}
[0.871824] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.871850] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871875] (igus_rebel) StdoutLine: {'line': b'5: +  return true;\n'}
[0.871901] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.871927] (igus_rebel) StdoutLine: {'line': b'5: @@ -221,67 +200,61 @@\n'}
[0.871953] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::Start()\n'}
[0.871979] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.872004] (igus_rebel) StdoutLine: {'line': b'5: -        connectionNeeded = true;\n'}
[0.872029] (igus_rebel) StdoutLine: {'line': b'5: -        continueReceive = true;\n'}
[0.872060] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872087] (igus_rebel) StdoutLine: {'line': b'5: -        listCheckThread = std::thread(&RebelSocket::ListCheckThreadFunction, this);\n'}
[0.872115] (igus_rebel) StdoutLine: {'line': b'5: -        receiveThread = std::thread(&RebelSocket::ReceiveThreadFunction, this);\n'}
[0.872140] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.872166] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872191] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::Stop()\n'}
[0.872219] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.872245] (igus_rebel) StdoutLine: {'line': b'5: -        connectionNeeded = false;\n'}
[0.872270] (igus_rebel) StdoutLine: {'line': b'5: -        continueReceive = false;\n'}
[0.872296] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872322] (igus_rebel) StdoutLine: {'line': b'5: -        if (receiveThread.joinable())\n'}
[0.872348] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.872375] (igus_rebel) StdoutLine: {'line': b'5: -            receiveThread.join();\n'}
[0.872401] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.872427] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872453] (igus_rebel) StdoutLine: {'line': b'5: -        if (listCheckThread.joinable())\n'}
[0.872479] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.872506] (igus_rebel) StdoutLine: {'line': b'5: -            listCheckThread.join();\n'}
[0.872533] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.872558] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.872584] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872611] (igus_rebel) StdoutLine: {'line': b'5: -    bool RebelSocket::HasMessage()\n'}
[0.872637] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.872665] (igus_rebel) StdoutLine: {'line': b'5: -        return unprocessedMessages.size() > 0;\n'}
[0.872691] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.872718] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872744] (igus_rebel) StdoutLine: {'line': b'5: -    std::string RebelSocket::GetMessage()\n'}
[0.872771] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.872797] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.872823] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872850] (igus_rebel) StdoutLine: {'line': b'5: -        if (!HasMessage())\n'}
[0.872876] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.872902] (igus_rebel) StdoutLine: {'line': b'5: -            return "";\n'}
[0.872929] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.872955] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872980] (igus_rebel) StdoutLine: {'line': b'5: -        std::string msg = unprocessedMessages.back();\n'}
[0.873006] (igus_rebel) StdoutLine: {'line': b'5: -        unprocessedMessages.pop_back();\n'}
[0.873032] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873064] (igus_rebel) StdoutLine: {'line': b'5: -        return msg;\n'}
[0.873091] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.873118] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873143] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::SendMessage(const std::string &msg)\n'}
[0.873173] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.873199] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(socketWriteLock);\n'}
[0.873225] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873256] (igus_rebel) StdoutLine: {'line': b'5: -        if (connectionNeeded)\n'}
[0.873283] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.873309] (igus_rebel) StdoutLine: {'line': b'5: -            MakeConnection();\n'}
[0.873335] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.873362] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873387] (igus_rebel) StdoutLine: {'line': b'5: -        int sent = send(sock, msg.c_str(), msg.length(), 0);\n'}
[0.873413] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873440] (igus_rebel) StdoutLine: {'line': b'5: -        if (!IsSocketOk())\n'}
[0.873466] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.873493] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = true;\n'}
[0.873519] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.873545] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873573] (igus_rebel) StdoutLine: {'line': b'5: -        if (sent < 0)\n'}
[0.873600] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.873627] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = true;\n'}
[0.873654] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.873680] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.873706] (igus_rebel) StdoutLine: {'line': b'5: -}\n'}
[0.873733] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::Start()\n'}
[0.873760] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.873784] (igus_rebel) StdoutLine: {'line': b'5: +  connectionNeeded = true;\n'}
[0.873810] (igus_rebel) StdoutLine: {'line': b'5: +  continueReceive = true;\n'}
[0.873837] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.873863] (igus_rebel) StdoutLine: {'line': b'5: +  listCheckThread = std::thread(&RebelSocket::ListCheckThreadFunction, this);\n'}
[0.873889] (igus_rebel) StdoutLine: {'line': b'5: +  receiveThread = std::thread(&RebelSocket::ReceiveThreadFunction, this);\n'}
[0.873914] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.873940] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.873967] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::Stop()\n'}
[0.873992] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.874019] (igus_rebel) StdoutLine: {'line': b'5: +  connectionNeeded = false;\n'}
[0.874049] (igus_rebel) StdoutLine: {'line': b'5: +  continueReceive = false;\n'}
[0.874078] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874107] (igus_rebel) StdoutLine: {'line': b'5: +  if (receiveThread.joinable()) {\n'}
[0.874134] (igus_rebel) StdoutLine: {'line': b'5: +    receiveThread.join();\n'}
[0.874160] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.874186] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874212] (igus_rebel) StdoutLine: {'line': b'5: +  if (listCheckThread.joinable()) {\n'}
[0.874239] (igus_rebel) StdoutLine: {'line': b'5: +    listCheckThread.join();\n'}
[0.874266] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.874292] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.874319] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874345] (igus_rebel) StdoutLine: {'line': b'5: +bool RebelSocket::HasMessage()\n'}
[0.874372] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.874398] (igus_rebel) StdoutLine: {'line': b'5: +  return unprocessedMessages.size() > 0;\n'}
[0.874424] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.874449] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874476] (igus_rebel) StdoutLine: {'line': b'5: +std::string RebelSocket::GetMessage()\n'}
[0.874501] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.874528] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.874555] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874581] (igus_rebel) StdoutLine: {'line': b'5: +  if (!HasMessage()) {\n'}
[0.874607] (igus_rebel) StdoutLine: {'line': b'5: +    return "";\n'}
[0.874633] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.874659] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874685] (igus_rebel) StdoutLine: {'line': b'5: +  std::string msg = unprocessedMessages.back();\n'}
[0.874713] (igus_rebel) StdoutLine: {'line': b'5: +  unprocessedMessages.pop_back();\n'}
[0.874740] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874766] (igus_rebel) StdoutLine: {'line': b'5: +  return msg;\n'}
[0.874792] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.874818] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874844] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::SendMessage(const std::string & msg)\n'}
[0.874871] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.874897] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(socketWriteLock);\n'}
[0.874922] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874947] (igus_rebel) StdoutLine: {'line': b'5: +  if (connectionNeeded) {\n'}
[0.874973] (igus_rebel) StdoutLine: {'line': b'5: +    MakeConnection();\n'}
[0.875000] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.875027] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.875059] (igus_rebel) StdoutLine: {'line': b'5: +  int sent = send(sock, msg.c_str(), msg.length(), 0);\n'}
[0.875086] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.875113] (igus_rebel) StdoutLine: {'line': b'5: +  if (!IsSocketOk()) {\n'}
[0.875140] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = true;\n'}
[0.875167] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.875193] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.875219] (igus_rebel) StdoutLine: {'line': b'5: +  if (sent < 0) {\n'}
[0.875245] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = true;\n'}
[0.875272] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.875297] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.875324] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.875351] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.875379] (igus_rebel) StdoutLine: {'line': b'5: 7 files with code style divergence\n'}
[0.875406] (igus_rebel) StdoutLine: {'line': b'5: -- run_test.py: return code 1\n'}
[0.875432] (igus_rebel) StdoutLine: {'line': b"5: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml'\n"}
[0.875460] (igus_rebel) StdoutLine: {'line': b'5/6 Test #5: uncrustify .......................***Failed    0.23 sec\n'}
[0.875487] (igus_rebel) StdoutLine: {'line': b'test 6\n'}
[0.875514] (igus_rebel) StdoutLine: {'line': b'    Start 6: xmllint\n'}
[0.875541] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.875571] (igus_rebel) StdoutLine: {'line': b'6: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_xmllint/xmllint.txt" "--command" "/opt/ros/jazzy/bin/ament_xmllint" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml"\n'}
[0.875603] (igus_rebel) StdoutLine: {'line': b'6: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.875631] (igus_rebel) StdoutLine: {'line': b'6: Test timeout computed to be: 60\n'}
[0.875658] (igus_rebel) StdoutLine: {'line': b"6: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.875685] (igus_rebel) StdoutLine: {'line': b'6:  - /opt/ros/jazzy/bin/ament_xmllint --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml\n'}
[0.890973] (igus_rebel_description) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.891115] (igus_rebel_description) StdoutLine: {'line': b'2: \n'}
[0.891152] (igus_rebel_description) StdoutLine: {'line': b'2: No problems found\n'}
[0.898810] (igus_rebel_description) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.898908] (igus_rebel_description) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml'\n"}
[0.900951] (-) TimerEvent: {}
[0.904732] (igus_rebel_description) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.78 sec\n'}
[0.904884] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.904921] (igus_rebel_description) StdoutLine: {'line': b'\x1b[0;32m100% tests passed\x1b[0;0m, 0 tests failed\x1b[0;0m out of 2\n'}
[0.904955] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.904987] (igus_rebel_description) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.905018] (igus_rebel_description) StdoutLine: {'line': b'lint_cmake    =   0.10 sec*proc (1 test)\n'}
[0.905054] (igus_rebel_description) StdoutLine: {'line': b'linter        =   0.88 sec*proc (2 tests)\n'}
[0.905084] (igus_rebel_description) StdoutLine: {'line': b'xmllint       =   0.78 sec*proc (1 test)\n'}
[0.905113] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.905143] (igus_rebel_description) StdoutLine: {'line': b'Total Test time (real) =   0.88 sec\n'}
[0.911847] (igus_rebel_description) CommandEnded: {'returncode': 0}
[0.912276] (igus_rebel_description) JobEnded: {'identifier': 'igus_rebel_description', 'rc': 0}
[0.913025] (igus_rebel_moveit_config) JobStarted: {'identifier': 'igus_rebel_moveit_config'}
[0.928245] (igus_rebel_moveit_config) JobEnded: {'identifier': 'igus_rebel_moveit_config', 'rc': 0}
[1.001079] (-) TimerEvent: {}
[1.101695] (-) TimerEvent: {}
[1.202424] (-) TimerEvent: {}
[1.303123] (-) TimerEvent: {}
[1.371232] (igus_rebel) StdoutLine: {'line': b"6: File 'package.xml' is valid\n"}
[1.371440] (igus_rebel) StdoutLine: {'line': b'6: \n'}
[1.371521] (igus_rebel) StdoutLine: {'line': b"6: File 'rebel.xml' is valid\n"}
[1.371595] (igus_rebel) StdoutLine: {'line': b'6: \n'}
[1.371664] (igus_rebel) StdoutLine: {'line': b'6: No problems found\n'}
[1.379837] (igus_rebel) StdoutLine: {'line': b'6: -- run_test.py: return code 0\n'}
[1.380021] (igus_rebel) StdoutLine: {'line': b"6: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml'\n"}
[1.386942] (igus_rebel) StdoutLine: {'line': b'6/6 Test #6: xmllint ..........................   Passed    0.61 sec\n'}
[1.387414] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.387576] (igus_rebel) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m3 tests failed\x1b[0;0m out of 6\n'}
[1.387662] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.387746] (igus_rebel) StdoutLine: {'line': b'Label Time Summary:\n'}
[1.387817] (igus_rebel) StdoutLine: {'line': b'cppcheck      =   0.10 sec*proc (1 test)\n'}
[1.387888] (igus_rebel) StdoutLine: {'line': b'flake8        =   0.19 sec*proc (1 test)\n'}
[1.387956] (igus_rebel) StdoutLine: {'line': b'lint_cmake    =   0.09 sec*proc (1 test)\n'}
[1.388024] (igus_rebel) StdoutLine: {'line': b'linter        =   1.34 sec*proc (6 tests)\n'}
[1.388110] (igus_rebel) StdoutLine: {'line': b'pep257        =   0.12 sec*proc (1 test)\n'}
[1.388179] (igus_rebel) StdoutLine: {'line': b'uncrustify    =   0.23 sec*proc (1 test)\n'}
[1.388244] (igus_rebel) StdoutLine: {'line': b'xmllint       =   0.61 sec*proc (1 test)\n'}
[1.388312] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.388379] (igus_rebel) StdoutLine: {'line': b'Total Test time (real) =   1.34 sec\n'}
[1.388445] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.388513] (igus_rebel) StdoutLine: {'line': b'The following tests FAILED:\n'}
[1.388579] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  2 - flake8 (Failed)\x1b[0;0m\n'}
[1.388645] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  3 - lint_cmake (Failed)\x1b[0;0m\n'}
[1.388703] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  5 - uncrustify (Failed)\x1b[0;0m\n'}
[1.392846] (igus_rebel) StderrLine: {'line': b'Errors while running CTest\n'}
[1.393053] (igus_rebel) StderrLine: {'line': b'Output from these tests are in: /home/amrl-linux24-04/ros2_ben/build/igus_rebel/Testing/Temporary/LastTest.log\n'}
[1.393166] (igus_rebel) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[1.394448] (igus_rebel) CommandEnded: {'returncode': 8}
[1.394916] (igus_rebel) TestFailure: {'identifier': 'igus_rebel'}
[1.394951] (igus_rebel) JobEnded: {'identifier': 'igus_rebel', 'rc': 0}
[1.396042] (-) EventReactorShutdown: {}
