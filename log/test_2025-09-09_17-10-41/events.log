[0.000000] (-) TimerEvent: {}
[0.000399] (igus_rebel_description) JobQueued: {'identifier': 'igus_rebel_description', 'dependencies': OrderedDict({'igus_rebel_description': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description'})}
[0.000521] (igus_rebel_msgs) JobQueued: {'identifier': 'igus_rebel_msgs', 'dependencies': OrderedDict({'igus_rebel_msgs': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs'})}
[0.000753] (igus_rebel) JobQueued: {'identifier': 'igus_rebel', 'dependencies': OrderedDict({'igus_rebel_msgs': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs', 'igus_rebel': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel'})}
[0.000784] (igus_rebel_moveit_config) JobQueued: {'identifier': 'igus_rebel_moveit_config', 'dependencies': OrderedDict({'igus_rebel_description': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description', 'igus_rebel_moveit_config': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_moveit_config'})}
[0.000892] (igus_rebel_description) JobStarted: {'identifier': 'igus_rebel_description'}
[0.004562] (igus_rebel_msgs) JobStarted: {'identifier': 'igus_rebel_msgs'}
[0.017936] (igus_rebel_description) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'amrl-linux24-04', 'XDG_SESSION_TYPE': 'wayland', 'ROS_APT_SOURCE_VERSION': '1.1.0', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/amrl-linux24-04', 'OLDPWD': '/home/amrl-linux24-04', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '2178', 'SYSTEMD_EXEC_PID': '2614', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3989', 'GNOME_KEYRING_CONTROL': '/run/user/1000/keyring', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'amrl-linux24-04', 'JOURNAL_STREAM': '9:27789', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.SettingsDaemon.MediaKeys.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'amrl-linux24-04', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/amrl-linux24-04-ThinkPad-E16-Gen-2:@/tmp/.ICE-unix/2401,unix/amrl-linux24-04-ThinkPad-E16-Gen-2:/tmp/.ICE-unix/2401', 'INVOCATION_ID': 'a8c54b4195194d3a83d59bc6c61c007c', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.UJD3C3', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:5a724dbf-67e5-4a1e-9f78-8a4d2b7bcf90', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[0.021778] (igus_rebel_msgs) JobEnded: {'identifier': 'igus_rebel_msgs', 'rc': 0}
[0.022400] (igus_rebel) JobStarted: {'identifier': 'igus_rebel'}
[0.025645] (igus_rebel_description) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.025782] (igus_rebel_description) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.025869] (igus_rebel_description) StdoutLine: {'line': b'   Site: amrl-linux24-04-ThinkPad-E16-Gen-2\n'}
[0.025947] (igus_rebel_description) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.026054] (igus_rebel_description) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.026129] (igus_rebel_description) StdoutLine: {'line': b'Create new tag: 20250909-1510 - Experimental\n'}
[0.026199] (igus_rebel_description) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.026271] (igus_rebel_description) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.026346] (igus_rebel_description) StdoutLine: {'line': b'Test project /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description\n'}
[0.026416] (igus_rebel_description) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.026538] (igus_rebel_description) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.026623] (igus_rebel_description) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.026691] (igus_rebel_description) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.026756] (igus_rebel_description) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.026825] (igus_rebel_description) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.027097] (igus_rebel_description) StdoutLine: {'line': b'test 1\n'}
[0.027169] (igus_rebel_description) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.027235] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.027302] (igus_rebel_description) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml" "--package-name" "igus_rebel_description" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/jazzy/bin/ament_lint_cmake" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml"\n'}
[0.027378] (igus_rebel_description) StdoutLine: {'line': b'1: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description\n'}
[0.027447] (igus_rebel_description) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.042763] (igus_rebel) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'amrl-linux24-04', 'XDG_SESSION_TYPE': 'wayland', 'ROS_APT_SOURCE_VERSION': '1.1.0', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel/lib:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/amrl-linux24-04', 'OLDPWD': '/home/amrl-linux24-04', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '2178', 'SYSTEMD_EXEC_PID': '2614', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3989', 'GNOME_KEYRING_CONTROL': '/run/user/1000/keyring', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'amrl-linux24-04', 'JOURNAL_STREAM': '9:27789', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.SettingsDaemon.MediaKeys.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'amrl-linux24-04', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/amrl-linux24-04-ThinkPad-E16-Gen-2:@/tmp/.ICE-unix/2401,unix/amrl-linux24-04-ThinkPad-E16-Gen-2:/tmp/.ICE-unix/2401', 'INVOCATION_ID': 'a8c54b4195194d3a83d59bc6c61c007c', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.UJD3C3', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:5a724dbf-67e5-4a1e-9f78-8a4d2b7bcf90', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs/lib/python3.12/site-packages:/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[0.048999] (igus_rebel) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.049125] (igus_rebel) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.049199] (igus_rebel) StdoutLine: {'line': b'   Site: amrl-linux24-04-ThinkPad-E16-Gen-2\n'}
[0.049270] (igus_rebel) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.049340] (igus_rebel) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.049408] (igus_rebel) StdoutLine: {'line': b'Create new tag: 20250909-1510 - Experimental\n'}
[0.049474] (igus_rebel) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.049546] (igus_rebel) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.049625] (igus_rebel) StdoutLine: {'line': b'Test project /home/amrl-linux24-04/ros2_ben/build/igus_rebel\n'}
[0.049692] (igus_rebel) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.050120] (igus_rebel) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.050195] (igus_rebel) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.050262] (igus_rebel) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.050329] (igus_rebel) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.050395] (igus_rebel) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.050464] (igus_rebel) StdoutLine: {'line': b'test 1\n'}
[0.050529] (igus_rebel) StdoutLine: {'line': b'    Start 1: cppcheck\n'}
[0.050603] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.050672] (igus_rebel) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_cppcheck/cppcheck.txt" "--command" "/opt/ros/jazzy/bin/ament_cppcheck" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml" "--include_dirs" "/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel/include"\n'}
[0.050746] (igus_rebel) StdoutLine: {'line': b'1: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.050813] (igus_rebel) StdoutLine: {'line': b'1: Test timeout computed to be: 300\n'}
[0.067212] (igus_rebel_description) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description':\n"}
[0.067303] (igus_rebel_description) StdoutLine: {'line': b'1:  - /opt/ros/jazzy/bin/ament_lint_cmake --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml\n'}
[0.087128] (igus_rebel) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.087315] (igus_rebel) StdoutLine: {'line': b'1:  - /opt/ros/jazzy/bin/ament_cppcheck --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml --include_dirs /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel/include\n'}
[0.099922] (-) TimerEvent: {}
[0.109056] (igus_rebel_description) StdoutLine: {'line': b'1: \n'}
[0.109260] (igus_rebel_description) StdoutLine: {'line': b'1: No problems found\n'}
[0.116335] (igus_rebel_description) StdoutLine: {'line': b'1: -- run_test.py: return code 0\n'}
[0.116516] (igus_rebel_description) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml'\n"}
[0.122623] (igus_rebel_description) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................   Passed    0.10 sec\n'}
[0.122851] (igus_rebel_description) StdoutLine: {'line': b'test 2\n'}
[0.122942] (igus_rebel_description) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.123019] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.123093] (igus_rebel_description) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml" "--package-name" "igus_rebel_description" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/ament_xmllint/xmllint.txt" "--command" "/opt/ros/jazzy/bin/ament_xmllint" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml"\n'}
[0.123174] (igus_rebel_description) StdoutLine: {'line': b'2: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description\n'}
[0.123248] (igus_rebel_description) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.135242] (igus_rebel) StdoutLine: {'line': b'1: cppcheck 2.13.0 has known performance issues and therefore will not be used, set the AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS environment variable to override this.\n'}
[0.149047] (igus_rebel) StdoutLine: {'line': b'1: -- run_test.py: return code 0\n'}
[0.149174] (igus_rebel) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml'\n"}
[0.159509] (igus_rebel) StdoutLine: {'line': b'1/6 Test #1: cppcheck .........................   Passed    0.11 sec\n'}
[0.159959] (igus_rebel) StdoutLine: {'line': b'test 2\n'}
[0.159999] (igus_rebel) StdoutLine: {'line': b'    Start 2: flake8\n'}
[0.160032] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.160062] (igus_rebel) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_flake8/flake8.txt" "--command" "/opt/ros/jazzy/bin/ament_flake8" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml"\n'}
[0.160108] (igus_rebel) StdoutLine: {'line': b'2: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.160138] (igus_rebel) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.161867] (igus_rebel_description) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description':\n"}
[0.161954] (igus_rebel_description) StdoutLine: {'line': b'2:  - /opt/ros/jazzy/bin/ament_xmllint --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml\n'}
[0.194929] (igus_rebel) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.195038] (igus_rebel) StdoutLine: {'line': b'2:  - /opt/ros/jazzy/bin/ament_flake8 --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml\n'}
[0.199990] (-) TimerEvent: {}
[0.300207] (-) TimerEvent: {}
[0.313347] (igus_rebel) StdoutLine: {'line': b'2: from launch.substitutions import Command, FindExecutable, LaunchConfiguration\n'}
[0.313719] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.313800] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.313875] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.313945] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.314015] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.314079] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.314147] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.314213] (igus_rebel) StdoutLine: {'line': b'2: from launch.launch_description_sources import PythonLaunchDescriptionSource\n'}
[0.314280] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.314345] (igus_rebel) StdoutLine: {'line': b'2: from ament_index_python.packages import get_package_share_directory\n'}
[0.314409] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.314473] (igus_rebel) StdoutLine: {'line': b'2: import os\n'}
[0.314536] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.314612] (igus_rebel) StdoutLine: {'line': b'2: import os\n'}
[0.314677] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.314743] (igus_rebel) StdoutLine: {'line': b'2:     env = {\n'}
[0.314805] (igus_rebel) StdoutLine: {'line': b'2:     ^\n'}
[0.314865] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.314925] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.314988] (igus_rebel) StdoutLine: {'line': b'2:         "hardware_protocol",\n'}
[0.315052] (igus_rebel) StdoutLine: {'line': b'2:         ^\n'}
[0.315117] (igus_rebel) StdoutLine: {'line': b'2:         default_value="rebel",\n'}
[0.315184] (igus_rebel) StdoutLine: {'line': b'2:                       ^\n'}
[0.315248] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.315313] (igus_rebel) StdoutLine: {'line': b'2:                  ^\n'}
[0.315378] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.315442] (igus_rebel) StdoutLine: {'line': b'2:                                   ^\n'}
[0.315517] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.315590] (igus_rebel) StdoutLine: {'line': b'2:                                             ^\n'}
[0.315657] (igus_rebel) StdoutLine: {'line': b'2:         description="Which hardware protocol or mock hardware should be used",\n'}
[0.315730] (igus_rebel) StdoutLine: {'line': b'2:                     ^\n'}
[0.315792] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.315852] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.315912] (igus_rebel) StdoutLine: {'line': b'2:     igus_rebel_pkg = get_package_share_directory("igus_rebel")\n'}
[0.315975] (igus_rebel) StdoutLine: {'line': b'2:                                                  ^\n'}
[0.316038] (igus_rebel) StdoutLine: {'line': b'2:     igus_rebel_desc_pkg = get_package_share_directory("igus_rebel_description")\n'}
[0.316098] (igus_rebel) StdoutLine: {'line': b'2:                                                       ^\n'}
[0.316145] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.316193] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.316240] (igus_rebel) StdoutLine: {'line': b'2:     controller_config_path = os.path.join(igus_rebel_pkg, "config", "controller.yaml")\n'}
[0.316287] (igus_rebel) StdoutLine: {'line': b'2:                                                           ^\n'}
[0.316335] (igus_rebel) StdoutLine: {'line': b'2:     controller_config_path = os.path.join(igus_rebel_pkg, "config", "controller.yaml")\n'}
[0.316383] (igus_rebel) StdoutLine: {'line': b'2:                                                                     ^\n'}
[0.316432] (igus_rebel) StdoutLine: {'line': b'2:     robot_description = {"robot_description" : Command(\n'}
[0.316481] (igus_rebel) StdoutLine: {'line': b'2:                          ^\n'}
[0.316530] (igus_rebel) StdoutLine: {'line': b'2:     robot_description = {"robot_description" : Command(\n'}
[0.316588] (igus_rebel) StdoutLine: {'line': b'2:                                             ^\n'}
[0.316641] (igus_rebel) StdoutLine: {'line': b'2:             FindExecutable(name="xacro"),\n'}
[0.316690] (igus_rebel) StdoutLine: {'line': b'2:                                 ^\n'}
[0.316737] (igus_rebel) StdoutLine: {'line': b'2:             " ",\n'}
[0.316786] (igus_rebel) StdoutLine: {'line': b'2:             ^\n'}
[0.316835] (igus_rebel) StdoutLine: {'line': b'2:             " hardware_protocol:=",\n'}
[0.316881] (igus_rebel) StdoutLine: {'line': b'2:             ^\n'}
[0.316928] (igus_rebel) StdoutLine: {'line': b'2:             LaunchConfiguration("hardware_protocol"),\n'}
[0.316975] (igus_rebel) StdoutLine: {'line': b'2:                                 ^\n'}
[0.317022] (igus_rebel) StdoutLine: {'line': b'2:         \n'}
[0.317069] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.317118] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.317166] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.317214] (igus_rebel) StdoutLine: {'line': b'2:         executable="ros2_control_node",\n'}
[0.317248] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.317278] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.317307] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.317337] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.317366] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.317394] (igus_rebel) StdoutLine: {'line': b'2:         package="robot_state_publisher",\n'}
[0.317423] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.317451] (igus_rebel) StdoutLine: {'line': b'2:         executable="robot_state_publisher",\n'}
[0.317481] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.317510] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.317538] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.317570] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.317599] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.317628] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.317659] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.317687] (igus_rebel) StdoutLine: {'line': b'2:         executable="spawner",\n'}
[0.317716] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.317745] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.317773] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.317801] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.317829] (igus_rebel) StdoutLine: {'line': b'2:                                               ^\n'}
[0.317859] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.317887] (igus_rebel) StdoutLine: {'line': b'2:                                                                       ^\n'}
[0.317916] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.317945] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.317974] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.318003] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.318033] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.318062] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.318092] (igus_rebel) StdoutLine: {'line': b'2:         executable="spawner",\n'}
[0.318122] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.318150] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.318180] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.318208] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.318236] (igus_rebel) StdoutLine: {'line': b'2:                                            ^\n'}
[0.318272] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.318301] (igus_rebel) StdoutLine: {'line': b'2:                                                                    ^\n'}
[0.318330] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.318359] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.318389] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.318418] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.318447] (igus_rebel) StdoutLine: {'line': b'2:     ^\n'}
[0.318480] (igus_rebel) StdoutLine: {'line': b'2:         ^\n'}
[0.318514] (igus_rebel) StdoutLine: {'line': b"2: 1     E203 whitespace before ':'\n"}
[0.318551] (igus_rebel) StdoutLine: {'line': b"2: 2     F401 'launch.actions.IncludeLaunchDescription' imported but unused\n"}
[0.318587] (igus_rebel) StdoutLine: {'line': b"2: 1     F841 local variable 'env' is assigned to but never used\n"}
[0.318621] (igus_rebel) StdoutLine: {'line': b"2: 4     I100 Import statements are in the wrong order. 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration' should be before 'from launch_ros.actions import Node'\n"}
[0.318657] (igus_rebel) StdoutLine: {'line': b'2: 1     I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.318688] (igus_rebel) StdoutLine: {'line': b"2: 1     I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from ament_index_python.packages import get_package_share_directory' is identified as Third Party.\n"}
[0.318719] (igus_rebel) StdoutLine: {'line': b'2: 33    Q000 Double quotes found but single quotes preferred\n'}
[0.318750] (igus_rebel) StdoutLine: {'line': b'2: 1     W292 no newline at end of file\n'}
[0.318780] (igus_rebel) StdoutLine: {'line': b'2: 9     W293 blank line contains whitespace\n'}
[0.318810] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.318843] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:3:1: I100 Import statements are in the wrong order. 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration' should be before 'from launch_ros.actions import Node'\n"}
[0.318873] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.318902] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:4:1: I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.318932] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.318962] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:4:1: I100 Import statements are in the wrong order. 'from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument' should be before 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration'\n"}
[0.318995] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319024] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:4:1: F401 'launch.actions.IncludeLaunchDescription' imported but unused\n"}
[0.319054] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319083] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:5:1: F401 'launch.launch_description_sources.PythonLaunchDescriptionSource' imported but unused\n"}
[0.319112] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319140] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:6:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch.launch_description_sources import PythonLaunchDescriptionSource'\n"}
[0.319171] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319199] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:7:1: I100 Import statements are in the wrong order. 'import os' should be before 'from ament_index_python.packages import get_package_share_directory' and in a different group.\n"}
[0.319227] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319255] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:7:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from ament_index_python.packages import get_package_share_directory' is identified as Third Party.\n"}
[0.319284] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319312] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:11:5: F841 local variable 'env' is assigned to but never used\n"}
[0.319341] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319368] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:17:1: W293 blank line contains whitespace\n'}
[0.319397] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319425] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:19:9: Q000 Double quotes found but single quotes preferred\n'}
[0.319453] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319481] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:20:23: Q000 Double quotes found but single quotes preferred\n'}
[0.319508] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319537] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:18: Q000 Double quotes found but single quotes preferred\n'}
[0.319570] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319599] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:35: Q000 Double quotes found but single quotes preferred\n'}
[0.319628] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319656] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:45: Q000 Double quotes found but single quotes preferred\n'}
[0.319687] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319714] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:22:21: Q000 Double quotes found but single quotes preferred\n'}
[0.319743] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319770] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:24:1: W293 blank line contains whitespace\n'}
[0.319798] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319825] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:25:50: Q000 Double quotes found but single quotes preferred\n'}
[0.319854] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319882] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:26:55: Q000 Double quotes found but single quotes preferred\n'}
[0.319910] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319939] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:27:1: W293 blank line contains whitespace\n'}
[0.319967] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.319995] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:28:59: Q000 Double quotes found but single quotes preferred\n'}
[0.320022] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320049] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:28:69: Q000 Double quotes found but single quotes preferred\n'}
[0.320077] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320104] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:36:26: Q000 Double quotes found but single quotes preferred\n'}
[0.320132] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320159] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:36:45: E203 whitespace before ':'\n"}
[0.320187] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320214] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:38:33: Q000 Double quotes found but single quotes preferred\n'}
[0.320242] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320270] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:39:13: Q000 Double quotes found but single quotes preferred\n'}
[0.320298] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320325] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:41:13: Q000 Double quotes found but single quotes preferred\n'}
[0.320352] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320380] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:42:33: Q000 Double quotes found but single quotes preferred\n'}
[0.320408] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320435] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:45:1: W293 blank line contains whitespace\n'}
[0.320463] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320490] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:47:17: Q000 Double quotes found but single quotes preferred\n'}
[0.320517] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320544] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:48:20: Q000 Double quotes found but single quotes preferred\n'}
[0.320815] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.320924] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:54:16: Q000 Double quotes found but single quotes preferred\n'}
[0.321003] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.321081] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:56:1: W293 blank line contains whitespace\n'}
[0.321159] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.321231] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:58:17: Q000 Double quotes found but single quotes preferred\n'}
[0.321305] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.321366] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:59:20: Q000 Double quotes found but single quotes preferred\n'}
[0.321431] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.321495] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:62:16: Q000 Double quotes found but single quotes preferred\n'}
[0.321590] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.321663] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:64:1: W293 blank line contains whitespace\n'}
[0.321729] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.321794] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:66:17: Q000 Double quotes found but single quotes preferred\n'}
[0.321857] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.321920] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:67:20: Q000 Double quotes found but single quotes preferred\n'}
[0.321982] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322056] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:20: Q000 Double quotes found but single quotes preferred\n'}
[0.322120] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322183] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:47: Q000 Double quotes found but single quotes preferred\n'}
[0.322246] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322307] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:71: Q000 Double quotes found but single quotes preferred\n'}
[0.322363] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322415] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:69:16: Q000 Double quotes found but single quotes preferred\n'}
[0.322474] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322529] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:71:1: W293 blank line contains whitespace\n'}
[0.322595] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322651] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:73:17: Q000 Double quotes found but single quotes preferred\n'}
[0.322706] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322759] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:74:20: Q000 Double quotes found but single quotes preferred\n'}
[0.322812] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322866] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:20: Q000 Double quotes found but single quotes preferred\n'}
[0.322922] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.322978] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:44: Q000 Double quotes found but single quotes preferred\n'}
[0.323033] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323087] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:68: Q000 Double quotes found but single quotes preferred\n'}
[0.323142] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323197] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:76:16: Q000 Double quotes found but single quotes preferred\n'}
[0.323242] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323277] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:78:1: W293 blank line contains whitespace\n'}
[0.323314] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323350] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:86:1: W293 blank line contains whitespace\n'}
[0.323387] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323423] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:86:5: W292 no newline at end of file\n'}
[0.323459] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323495] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323531] (igus_rebel) StdoutLine: {'line': b'2: 1 files checked\n'}
[0.323572] (igus_rebel) StdoutLine: {'line': b'2: 53 errors\n'}
[0.323610] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323646] (igus_rebel) StdoutLine: {'line': b"2: 'E'-type errors: 1\n"}
[0.323682] (igus_rebel) StdoutLine: {'line': b"2: 'F'-type errors: 3\n"}
[0.323718] (igus_rebel) StdoutLine: {'line': b"2: 'I'-type errors: 6\n"}
[0.323755] (igus_rebel) StdoutLine: {'line': b"2: 'Q'-type errors: 33\n"}
[0.323791] (igus_rebel) StdoutLine: {'line': b"2: 'W'-type errors: 10\n"}
[0.323828] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323864] (igus_rebel) StdoutLine: {'line': b'2: Checked files:\n'}
[0.323900] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.323937] (igus_rebel) StdoutLine: {'line': b'2: * ./launch/rebel.launch.py\n'}
[0.328033] (igus_rebel) StdoutLine: {'line': b'2: -- run_test.py: return code 1\n'}
[0.328136] (igus_rebel) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml'\n"}
[0.333832] (igus_rebel) StdoutLine: {'line': b'2/6 Test #2: flake8 ...........................***Failed    0.17 sec\n'}
[0.334136] (igus_rebel) StdoutLine: {'line': b'test 3\n'}
[0.334202] (igus_rebel) StdoutLine: {'line': b'    Start 3: lint_cmake\n'}
[0.334250] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.334305] (igus_rebel) StdoutLine: {'line': b'3: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/jazzy/bin/ament_lint_cmake" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml"\n'}
[0.334357] (igus_rebel) StdoutLine: {'line': b'3: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.334410] (igus_rebel) StdoutLine: {'line': b'3: Test timeout computed to be: 60\n'}
[0.371206] (igus_rebel) StdoutLine: {'line': b"3: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.371383] (igus_rebel) StdoutLine: {'line': b'3:  - /opt/ros/jazzy/bin/ament_lint_cmake --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml\n'}
[0.400299] (-) TimerEvent: {}
[0.412323] (igus_rebel) StdoutLine: {'line': b'3: CMakeLists.txt:6: Line ends in whitespace [whitespace/eol]\n'}
[0.412539] (igus_rebel) StdoutLine: {'line': b'3: \n'}
[0.412637] (igus_rebel) StdoutLine: {'line': b'3: \n'}
[0.412716] (igus_rebel) StdoutLine: {'line': b'3: 1 errors\n'}
[0.418634] (igus_rebel) StdoutLine: {'line': b'3: -- run_test.py: return code 1\n'}
[0.418805] (igus_rebel) StdoutLine: {'line': b"3: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml'\n"}
[0.424022] (igus_rebel) StdoutLine: {'line': b'3/6 Test #3: lint_cmake .......................***Failed    0.09 sec\n'}
[0.424144] (igus_rebel) StdoutLine: {'line': b'test 4\n'}
[0.424181] (igus_rebel) StdoutLine: {'line': b'    Start 4: pep257\n'}
[0.424270] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.424303] (igus_rebel) StdoutLine: {'line': b'4: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_pep257/pep257.txt" "--command" "/opt/ros/jazzy/bin/ament_pep257" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml"\n'}
[0.424337] (igus_rebel) StdoutLine: {'line': b'4: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.424365] (igus_rebel) StdoutLine: {'line': b'4: Test timeout computed to be: 60\n'}
[0.449021] (igus_rebel_description) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.449083] (igus_rebel_description) StdoutLine: {'line': b'2: \n'}
[0.449113] (igus_rebel_description) StdoutLine: {'line': b'2: No problems found\n'}
[0.457996] (igus_rebel_description) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.458103] (igus_rebel_description) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml'\n"}
[0.461454] (igus_rebel) StdoutLine: {'line': b"4: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.461531] (igus_rebel) StdoutLine: {'line': b'4:  - /opt/ros/jazzy/bin/ament_pep257 --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml\n'}
[0.463395] (igus_rebel_description) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.34 sec\n'}
[0.463789] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.463827] (igus_rebel_description) StdoutLine: {'line': b'\x1b[0;32m100% tests passed\x1b[0;0m, 0 tests failed\x1b[0;0m out of 2\n'}
[0.463859] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.463887] (igus_rebel_description) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.463921] (igus_rebel_description) StdoutLine: {'line': b'lint_cmake    =   0.10 sec*proc (1 test)\n'}
[0.463949] (igus_rebel_description) StdoutLine: {'line': b'linter        =   0.44 sec*proc (2 tests)\n'}
[0.463977] (igus_rebel_description) StdoutLine: {'line': b'xmllint       =   0.34 sec*proc (1 test)\n'}
[0.464004] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.464031] (igus_rebel_description) StdoutLine: {'line': b'Total Test time (real) =   0.44 sec\n'}
[0.469273] (igus_rebel_description) CommandEnded: {'returncode': 0}
[0.469523] (igus_rebel_description) JobEnded: {'identifier': 'igus_rebel_description', 'rc': 0}
[0.469738] (igus_rebel_moveit_config) JobStarted: {'identifier': 'igus_rebel_moveit_config'}
[0.481669] (igus_rebel_moveit_config) JobEnded: {'identifier': 'igus_rebel_moveit_config', 'rc': 0}
[0.500381] (-) TimerEvent: {}
[0.531271] (igus_rebel) StdoutLine: {'line': b'4: checking ./launch/rebel.launch.py\n'}
[0.531407] (igus_rebel) StdoutLine: {'line': b'4: No problems found\n'}
[0.541682] (igus_rebel) StdoutLine: {'line': b'4: -- run_test.py: return code 0\n'}
[0.541872] (igus_rebel) StdoutLine: {'line': b"4: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml'\n"}
[0.547944] (igus_rebel) StdoutLine: {'line': b'4/6 Test #4: pep257 ...........................   Passed    0.12 sec\n'}
[0.548041] (igus_rebel) StdoutLine: {'line': b'test 5\n'}
[0.548110] (igus_rebel) StdoutLine: {'line': b'    Start 5: uncrustify\n'}
[0.548181] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.548249] (igus_rebel) StdoutLine: {'line': b'5: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_uncrustify/uncrustify.txt" "--command" "/opt/ros/jazzy/bin/ament_uncrustify" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml"\n'}
[0.548349] (igus_rebel) StdoutLine: {'line': b'5: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.548419] (igus_rebel) StdoutLine: {'line': b'5: Test timeout computed to be: 60\n'}
[0.587509] (igus_rebel) StdoutLine: {'line': b"5: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.587613] (igus_rebel) StdoutLine: {'line': b'5:  - /opt/ros/jazzy/bin/ament_uncrustify --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml\n'}
[0.600478] (-) TimerEvent: {}
[0.700709] (-) TimerEvent: {}
[0.751544] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/CriKeywords.hpp':\n"}
[0.751675] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.751719] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/CriKeywords.hpp\n'}
[0.751753] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/CriKeywords.hpp.uncrustify\n'}
[0.751785] (igus_rebel) StdoutLine: {'line': b'5: @@ -8,4 +8,4 @@\n'}
[0.751815] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriKeywords\n'}
[0.751844] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.751873] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string START = "CRISTART";\n'}
[0.751901] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string END = "CRIEND";\n'}
[0.751929] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriKeywords\n'}
[0.751956] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.751989] (igus_rebel) StdoutLine: {'line': b'5: +const std::string START = "CRISTART";\n'}
[0.752018] (igus_rebel) StdoutLine: {'line': b'5: +const std::string END = "CRIEND";\n'}
[0.752048] (igus_rebel) StdoutLine: {'line': b'5: @@ -13,14 +13,14 @@\n'}
[0.752077] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_STATUS = "STATUS";\n'}
[0.752108] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_OPINFO = "OPINFO";\n'}
[0.752139] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_GSIG = "GSIG";\n'}
[0.752170] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_GRIPPERSTATE = "GRIPPERSTATE";\n'}
[0.752202] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_RUNSTATE = "RUNSTATE";\n'}
[0.752235] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_MESSAGE = "MESSAGE";\n'}
[0.752266] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMD = "CMD";\n'}
[0.752297] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CONFIG = "CONFIG";\n'}
[0.752328] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_INFO = "INFO";\n'}
[0.752359] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_LOGMSG = "LOGMSG";\n'}
[0.752390] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_VARIABLES = "VARIABLES";\n'}
[0.752419] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMDERROR = "CMDERROR";\n'}
[0.752449] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMDACK = "CMDACK";\n'}
[0.752480] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CYCLESTAT = "CYCLESTAT";\n'}
[0.752512] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_STATUS = "STATUS";\n'}
[0.752542] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_OPINFO = "OPINFO";\n'}
[0.752580] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_GSIG = "GSIG";\n'}
[0.752611] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_GRIPPERSTATE = "GRIPPERSTATE";\n'}
[0.752640] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_RUNSTATE = "RUNSTATE";\n'}
[0.752670] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_MESSAGE = "MESSAGE";\n'}
[0.752700] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMD = "CMD";\n'}
[0.752730] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CONFIG = "CONFIG";\n'}
[0.752761] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_INFO = "INFO";\n'}
[0.752793] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_LOGMSG = "LOGMSG";\n'}
[0.752825] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_VARIABLES = "VARIABLES";\n'}
[0.752854] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMDERROR = "CMDERROR";\n'}
[0.752883] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMDACK = "CMDACK";\n'}
[0.752913] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CYCLESTAT = "CYCLESTAT";\n'}
[0.752943] (igus_rebel) StdoutLine: {'line': b'5: @@ -28,15 +28,15 @@\n'}
[0.752972] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_MODE = "MODE";\n'}
[0.753004] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSJOINTSETPOINT = "POSJOINTSETPOINT";\n'}
[0.753035] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSJOINTCURRENT = "POSJOINTCURRENT";\n'}
[0.753065] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSCARTROBOT = "POSCARTROBOT";\n'}
[0.753095] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSCARTPLATTFORM = "POSCARTPLATTFORM";\n'}
[0.753126] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_OVERRIDE = "OVERRIDE";\n'}
[0.753156] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_DIN = "DIN";\n'}
[0.753187] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_DOUT = "DOUT";\n'}
[0.753218] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_ESTOP = "ESTOP";\n'}
[0.753248] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_SUPPLY = "SUPPLY";\n'}
[0.753279] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_CURRENTALL = "CURRENTALL";\n'}
[0.753309] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_CURRENTJOINTS = "CURRENTJOINTS";\n'}
[0.753342] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_ERROR = "ERROR";\n'}
[0.753373] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_KINSTATE = "KINSTATE";\n'}
[0.753404] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_FRAMEROBOT = "FRAMEROBOT";\n'}
[0.753435] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_MODE = "MODE";\n'}
[0.753465] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSJOINTSETPOINT = "POSJOINTSETPOINT";\n'}
[0.753496] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSJOINTCURRENT = "POSJOINTCURRENT";\n'}
[0.753527] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSCARTROBOT = "POSCARTROBOT";\n'}
[0.753565] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSCARTPLATTFORM = "POSCARTPLATTFORM";\n'}
[0.753603] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_OVERRIDE = "OVERRIDE";\n'}
[0.753835] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_DIN = "DIN";\n'}
[0.753870] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_DOUT = "DOUT";\n'}
[0.753903] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_ESTOP = "ESTOP";\n'}
[0.753935] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_SUPPLY = "SUPPLY";\n'}
[0.753965] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_CURRENTALL = "CURRENTALL";\n'}
[0.753996] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_CURRENTJOINTS = "CURRENTJOINTS";\n'}
[0.754028] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_ERROR = "ERROR";\n'}
[0.754061] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_KINSTATE = "KINSTATE";\n'}
[0.754091] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_FRAMEROBOT = "FRAMEROBOT";\n'}
[0.754124] (igus_rebel) StdoutLine: {'line': b'5: @@ -44,10 +44,10 @@\n'}
[0.754156] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_CONNECT = "Connect";\n'}
[0.754188] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_RESET = "Reset";\n'}
[0.754219] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_ENABLE = "Enable";\n'}
[0.754249] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DISABLE = "Disable";\n'}
[0.754279] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DISCONNECT = "Disconnect";\n'}
[0.754310] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_MOTIONTYPEJOINT = "MotionTypeJoint";\n'}
[0.754341] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_MOTIONTYPECARTBASE = "MotionTypeCartBase";\n'}
[0.754372] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_QUIT = "QUIT";\n'}
[0.754403] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_SETACTIVE = "SetActive";\n'}
[0.754434] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DOUT = "DOUT";\n'}
[0.754465] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_CONNECT = "Connect";\n'}
[0.754495] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_RESET = "Reset";\n'}
[0.754526] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_ENABLE = "Enable";\n'}
[0.754564] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DISABLE = "Disable";\n'}
[0.754597] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DISCONNECT = "Disconnect";\n'}
[0.754627] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_MOTIONTYPEJOINT = "MotionTypeJoint";\n'}
[0.754657] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_MOTIONTYPECARTBASE = "MotionTypeCartBase";\n'}
[0.754689] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_QUIT = "QUIT";\n'}
[0.754720] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_SETACTIVE = "SetActive";\n'}
[0.754754] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DOUT = "DOUT";\n'}
[0.754785] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,2 +55,2 @@\n'}
[0.754816] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string CONFIG_GETKINEMATICLIMITS = "GetKinematicLimits";\n'}
[0.754847] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string CONFIG_GETKINEMATICLIMITS_ANSWER = "KinematicLimits";\n'}
[0.754878] (igus_rebel) StdoutLine: {'line': b'5: +const std::string CONFIG_GETKINEMATICLIMITS = "GetKinematicLimits";\n'}
[0.754910] (igus_rebel) StdoutLine: {'line': b'5: +const std::string CONFIG_GETKINEMATICLIMITS_ANSWER = "KinematicLimits";\n'}
[0.754940] (igus_rebel) StdoutLine: {'line': b'5: @@ -58,5 +58,5 @@\n'}
[0.754971] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_JOINT = "joint";\n'}
[0.755002] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_CARTBASE = "cartbase";\n'}
[0.755033] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_CARTTOOL = "carttool";\n'}
[0.755065] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_PLATFORM = "platform";\n'}
[0.755096] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_FSM = "fsm";\n'}
[0.755126] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_JOINT = "joint";\n'}
[0.755157] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_CARTBASE = "cartbase";\n'}
[0.755188] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_CARTTOOL = "carttool";\n'}
[0.755219] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_PLATFORM = "platform";\n'}
[0.755248] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_FSM = "fsm";\n'}
[0.755278] (igus_rebel) StdoutLine: {'line': b'5: @@ -64,7 +64,7 @@\n'}
[0.755307] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_DEBUG = "DEBUG";\n'}
[0.755337] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_APP_INFO = "APP_INFO";\n'}
[0.755367] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_APP_ERROR = "APP_ERROR";\n'}
[0.755397] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_INFO = "INFO";\n'}
[0.755428] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_WARN = "WARN";\n'}
[0.755459] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_ERROR = "ERROR";\n'}
[0.755489] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_FATAL = "FATAL";\n'}
[0.755519] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_DEBUG = "DEBUG";\n'}
[0.755552] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_APP_INFO = "APP_INFO";\n'}
[0.755586] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_APP_ERROR = "APP_ERROR";\n'}
[0.755616] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_INFO = "INFO";\n'}
[0.755646] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_WARN = "WARN";\n'}
[0.755678] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_ERROR = "ERROR";\n'}
[0.755708] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_FATAL = "FATAL";\n'}
[0.755738] (igus_rebel) StdoutLine: {'line': b'5: @@ -72,3 +72,3 @@\n'}
[0.755768] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string VARIABLES_NR_VARIABLE = "ValueNrVariable";\n'}
[0.755799] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string VARIABLES_POS_VARIABLE = "ValuePosVariable";\n'}
[0.755830] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.755860] (igus_rebel) StdoutLine: {'line': b'5: +const std::string VARIABLES_NR_VARIABLE = "ValueNrVariable";\n'}
[0.755890] (igus_rebel) StdoutLine: {'line': b'5: +const std::string VARIABLES_POS_VARIABLE = "ValuePosVariable";\n'}
[0.755921] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.755952] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.755984] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/CriMessages.hpp':\n"}
[0.756016] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.756047] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/CriMessages.hpp\n'}
[0.756077] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/CriMessages.hpp.uncrustify\n'}
[0.756107] (igus_rebel) StdoutLine: {'line': b'5: @@ -21,238 +21,241 @@\n'}
[0.756137] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriMessages\n'}
[0.756170] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.756201] (igus_rebel) StdoutLine: {'line': b'5: -        enum class MessageType\n'}
[0.756232] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.756263] (igus_rebel) StdoutLine: {'line': b'5: -            STATUS,\n'}
[0.756293] (igus_rebel) StdoutLine: {'line': b'5: -            OPINFO,\n'}
[0.756325] (igus_rebel) StdoutLine: {'line': b'5: -            GSIG,\n'}
[0.756357] (igus_rebel) StdoutLine: {'line': b'5: -            GRIPPERSTATE,\n'}
[0.756389] (igus_rebel) StdoutLine: {'line': b'5: -            RUNSTATE,\n'}
[0.756421] (igus_rebel) StdoutLine: {'line': b'5: -            MESSAGE,\n'}
[0.756452] (igus_rebel) StdoutLine: {'line': b'5: -            CMD,\n'}
[0.756481] (igus_rebel) StdoutLine: {'line': b'5: -            CONFIG,\n'}
[0.756511] (igus_rebel) StdoutLine: {'line': b'5: -            INFO,\n'}
[0.756542] (igus_rebel) StdoutLine: {'line': b'5: -            LOGMSG,\n'}
[0.756580] (igus_rebel) StdoutLine: {'line': b'5: -            VARIABLES,\n'}
[0.756611] (igus_rebel) StdoutLine: {'line': b'5: -            CMDERROR,\n'}
[0.756642] (igus_rebel) StdoutLine: {'line': b'5: -            CMDACK,\n'}
[0.756672] (igus_rebel) StdoutLine: {'line': b'5: -            CYCLESTAT,\n'}
[0.756701] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.756730] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.756761] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.756791] (igus_rebel) StdoutLine: {'line': b'5: -        enum class Mode\n'}
[0.756821] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.756850] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT,\n'}
[0.756880] (igus_rebel) StdoutLine: {'line': b'5: -            CARTBASE,\n'}
[0.756909] (igus_rebel) StdoutLine: {'line': b'5: -            CARTTOOL,\n'}
[0.756938] (igus_rebel) StdoutLine: {'line': b'5: -            PLATFORM,\n'}
[0.756967] (igus_rebel) StdoutLine: {'line': b'5: -            FSM,\n'}
[0.756997] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.757028] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.757059] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757088] (igus_rebel) StdoutLine: {'line': b'5: -        enum class Kinstate\n'}
[0.757120] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.757149] (igus_rebel) StdoutLine: {'line': b'5: -            NO_ERROR = 0,\n'}
[0.757178] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT_LIMIT_MIN = 13,\n'}
[0.757208] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT_LIMIT_MAX = 14,\n'}
[0.757238] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_CENTER = 21,\n'}
[0.757267] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_REACH = 23,\n'}
[0.757297] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_WRIST = 24,\n'}
[0.757326] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_1 = 30,\n'}
[0.757356] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_2 = 31,\n'}
[0.757385] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_3 = 32,\n'}
[0.757414] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_4 = 33,\n'}
[0.757443] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_5 = 34,\n'}
[0.757473] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_6 = 35,\n'}
[0.757502] (igus_rebel) StdoutLine: {'line': b'5: -            MOTION_NOT_ALLOWED = 99,\n'}
[0.757676] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.757709] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.757743] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.757776] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ErrorJoint\n'}
[0.757808] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.757840] (igus_rebel) StdoutLine: {'line': b'5: -            TEMP = 1,       // OverTemperature\n'}
[0.757873] (igus_rebel) StdoutLine: {'line': b'5: -            ESTOP_LOWV = 2, // Energy supply too low\n'}
[0.757905] (igus_rebel) StdoutLine: {'line': b'5: -            MNE = 4,        // Motor not enabled\n'}
[0.757937] (igus_rebel) StdoutLine: {'line': b'5: -            COM = 8,        // Communication watch dog\n'}
[0.757968] (igus_rebel) StdoutLine: {'line': b'5: -            POS = 16,       // Position lag\n'}
[0.757999] (igus_rebel) StdoutLine: {'line': b'5: -            ENC = 32,       // Encoder Error\n'}
[0.758030] (igus_rebel) StdoutLine: {'line': b'5: -            OC = 64,        // Overcurrent\n'}
[0.758060] (igus_rebel) StdoutLine: {'line': b'5: -            DRV = 128       // Driver Error\n'}
[0.758091] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.758121] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758150] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ConfigType\n'}
[0.758180] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.758210] (igus_rebel) StdoutLine: {'line': b'5: -            KINEMATICLIMITS,\n'}
[0.758240] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.758270] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.758300] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758332] (igus_rebel) StdoutLine: {'line': b'5: -        enum class LogLevel\n'}
[0.758364] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.758394] (igus_rebel) StdoutLine: {'line': b'5: -            DEBUG,\n'}
[0.758423] (igus_rebel) StdoutLine: {'line': b'5: -            APP_INFO,\n'}
[0.758454] (igus_rebel) StdoutLine: {'line': b'5: -            APP_ERROR,\n'}
[0.758485] (igus_rebel) StdoutLine: {'line': b'5: -            INFO,\n'}
[0.758515] (igus_rebel) StdoutLine: {'line': b'5: -            WARN,\n'}
[0.758545] (igus_rebel) StdoutLine: {'line': b'5: -            ERROR,\n'}
[0.758710] (igus_rebel) StdoutLine: {'line': b'5: -            FATAL,\n'}
[0.758743] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.758775] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.758809] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.758841] (igus_rebel) StdoutLine: {'line': b'5: -        class CriMessage\n'}
[0.758873] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.758905] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.758937] (igus_rebel) StdoutLine: {'line': b'5: -            MessageType GetType()\n'}
[0.758969] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.759001] (igus_rebel) StdoutLine: {'line': b'5: -                return type;\n'}
[0.759033] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.759063] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759094] (igus_rebel) StdoutLine: {'line': b'5: -            static MessageType GetMessageType(const std::string &);\n'}
[0.759126] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759156] (igus_rebel) StdoutLine: {'line': b'5: -        protected:\n'}
[0.759189] (igus_rebel) StdoutLine: {'line': b'5: -            MessageType type;\n'}
[0.759220] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CriMessage(const MessageType &_type) : type(_type) {}\n'}
[0.759252] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759283] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ParseMessageString(const std::string &, const std::string::size_type &,\n'}
[0.759315] (igus_rebel) StdoutLine: {'line': b'5: -                                                  const std::string::size_type &, const std::string::size_type &);\n'}
[0.759428] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759460] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T, std::size_t N>\n'}
[0.759492] (igus_rebel) StdoutLine: {'line': b'5: -            static void FillArray(std::array<T, N> &, const std::string &);\n'}
[0.759524] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759559] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T>\n'}
[0.759592] (igus_rebel) StdoutLine: {'line': b'5: -            void FillVector(std::vector<T> &, const std::string &);\n'}
[0.759635] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.759666] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T, std::size_t N>\n'}
[0.759698] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ArrayToString(std::array<T, N> &);\n'}
[0.759733] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.760120] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T>\n'}
[0.760150] (igus_rebel) StdoutLine: {'line': b'5: -            std::string VectorToString(std::vector<T> &vector);\n'}
[0.760180] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.760209] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.760236] (igus_rebel) StdoutLine: {'line': b'5: -        class Status : public CriMessage\n'}
[0.760263] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.760290] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.760319] (igus_rebel) StdoutLine: {'line': b'5: -            Mode mode;\n'}
[0.760351] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 16> posJointSetPoint;\n'}
[0.760383] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 16> posJointCurrent;\n'}
[0.760415] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 6> posCartRobot;\n'}
[0.760447] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 3> posCartPlattform;\n'}
[0.760571] (igus_rebel) StdoutLine: {'line': b'5: -            float overrideValue;\n'}
[0.760607] (igus_rebel) StdoutLine: {'line': b'5: -            int din;\n'}
[0.760640] (igus_rebel) StdoutLine: {'line': b'5: -            int dout;\n'}
[0.760673] (igus_rebel) StdoutLine: {'line': b'5: -            int eStop;\n'}
[0.760706] (igus_rebel) StdoutLine: {'line': b'5: -            int supply;\n'}
[0.760738] (igus_rebel) StdoutLine: {'line': b'5: -            int currentall;\n'}
[0.760770] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<int, 16> currentjoints;\n'}
[0.760801] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorSummary;\n'}
[0.760834] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<int, 16> errorJoints;\n'}
[0.760865] (igus_rebel) StdoutLine: {'line': b'5: -            Kinstate kinstate;\n'}
[0.760895] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.760927] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Status(const std::string &);\n'}
[0.760959] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Status();\n'}
[0.760989] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ModeToString(const Mode &);\n'}
[0.761020] (igus_rebel) StdoutLine: {'line': b'5: -            void Print();\n'}
[0.761052] (igus_rebel) StdoutLine: {'line': b'5: -            void Log();\n'}
[0.761084] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.761115] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.761147] (igus_rebel) StdoutLine: {'line': b'5: -            std::string ToString();\n'}
[0.761453] (igus_rebel) StdoutLine: {'line': b'5: -            Mode GetMode(const std::string &);\n'}
[0.761488] (igus_rebel) StdoutLine: {'line': b'5: -            Kinstate GetKinstate(const std::string &);\n'}
[0.761520] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.761553] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.761587] (igus_rebel) StdoutLine: {'line': b'5: -        class Message : public CriMessage\n'}
[0.761618] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.761650] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.761892] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Message(const std::string &);\n'}
[0.761925] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.761958] (igus_rebel) StdoutLine: {'line': b'5: -            std::string message;\n'}
[0.761990] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.762022] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.762053] (igus_rebel) StdoutLine: {'line': b'5: -        class Command : public CriMessage\n'}
[0.762084] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.762116] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.762148] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Command(const std::string &);\n'}
[0.762353] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.762388] (igus_rebel) StdoutLine: {'line': b'5: -            std::string command;\n'}
[0.762421] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.762452] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.762483] (igus_rebel) StdoutLine: {'line': b'5: -        class Info : public CriMessage\n'}
[0.762514] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.762545] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.762588] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Info(const std::string &);\n'}
[0.762622] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.762655] (igus_rebel) StdoutLine: {'line': b'5: -            std::string info;\n'}
[0.762690] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.762723] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.762756] (igus_rebel) StdoutLine: {'line': b'5: -        class LogMsg : public CriMessage\n'}
[0.762789] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.762821] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.762852] (igus_rebel) StdoutLine: {'line': b'5: -            explicit LogMsg(const std::string &);\n'}
[0.762886] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.762918] (igus_rebel) StdoutLine: {'line': b'5: -            LogLevel logLevel;\n'}
[0.762951] (igus_rebel) StdoutLine: {'line': b'5: -            long timestamp;\n'}
[0.762983] (igus_rebel) StdoutLine: {'line': b'5: -            std::string logMsg;\n'}
[0.763016] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.763049] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.763082] (igus_rebel) StdoutLine: {'line': b'5: -            LogLevel GetLogLevel(const std::string &);\n'}
[0.763113] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.763146] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.763178] (igus_rebel) StdoutLine: {'line': b'5: -        class Variables : public CriMessage\n'}
[0.763209] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.763241] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.763272] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Variables(const std::string &);\n'}
[0.763304] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.763336] (igus_rebel) StdoutLine: {'line': b'5: -            struct NumberVariable\n'}
[0.763367] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.763398] (igus_rebel) StdoutLine: {'line': b'5: -                std::string name;\n'}
[0.763430] (igus_rebel) StdoutLine: {'line': b'5: -                double value;\n'}
[0.763460] (igus_rebel) StdoutLine: {'line': b'5: -            };\n'}
[0.763490] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.763520] (igus_rebel) StdoutLine: {'line': b'5: -            struct PositionVariable\n'}
[0.763555] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.763588] (igus_rebel) StdoutLine: {'line': b'5: -                std::string name;\n'}
[0.763622] (igus_rebel) StdoutLine: {'line': b'5: -                std::array<double, 15> values;\n'}
[0.763654] (igus_rebel) StdoutLine: {'line': b'5: -            };\n'}
[0.763685] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.763717] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<NumberVariable> numberVariables;\n'}
[0.763748] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<PositionVariable> positionVariables;\n'}
[0.763864] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.763898] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.763931] (igus_rebel) StdoutLine: {'line': b'5: -            std::string GetMatchString(const std::smatch &);\n'}
[0.763964] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.763996] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.764028] (igus_rebel) StdoutLine: {'line': b'5: -        class CmdError : public CriMessage\n'}
[0.764058] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.764088] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.764118] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CmdError(const std::string &);\n'}
[0.764150] (igus_rebel) StdoutLine: {'line': b'5: -            int recjectedCmd;\n'}
[0.764182] (igus_rebel) StdoutLine: {'line': b'5: -            std::string error;\n'}
[0.764213] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.764245] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.764277] (igus_rebel) StdoutLine: {'line': b'5: -        class CmdAck : public CriMessage\n'}
[0.764413] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.764450] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.764481] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CmdAck(const std::string &);\n'}
[0.764513] (igus_rebel) StdoutLine: {'line': b'5: -            int acceptedCmd;\n'}
[0.764543] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.764577] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.764610] (igus_rebel) StdoutLine: {'line': b'5: -        class Cyclestat : public CriMessage\n'}
[0.764642] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.764674] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.764706] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Cyclestat(const std::string &);\n'}
[0.764739] (igus_rebel) StdoutLine: {'line': b'5: -            int cycletime;\n'}
[0.764772] (igus_rebel) StdoutLine: {'line': b'5: -            int workload;\n'}
[0.764804] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.764835] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.764867] (igus_rebel) StdoutLine: {'line': b'5: -        class Config : public CriMessage\n'}
[0.764897] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.764928] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.764959] (igus_rebel) StdoutLine: {'line': b'5: -            ConfigType configType;\n'}
[0.764991] (igus_rebel) StdoutLine: {'line': b'5: -            static ConfigType GetConfigType(const std::string &);\n'}
[0.765022] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.765052] (igus_rebel) StdoutLine: {'line': b'5: -        protected:\n'}
[0.765083] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Config(const ConfigType &_configType) : CriMessage(MessageType::CONFIG), configType(_configType) {}\n'}
[0.765115] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.765145] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.765175] (igus_rebel) StdoutLine: {'line': b'5: -        class KinematicLimits : public Config\n'}
[0.765205] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.765235] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.765266] (igus_rebel) StdoutLine: {'line': b'5: -            explicit KinematicLimits(const std::string &);\n'}
[0.765297] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriMessages\n'}
[0.765327] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.765356] (igus_rebel) StdoutLine: {'line': b'5: +enum class MessageType\n'}
[0.765386] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.765415] (igus_rebel) StdoutLine: {'line': b'5: +  STATUS,\n'}
[0.765445] (igus_rebel) StdoutLine: {'line': b'5: +  OPINFO,\n'}
[0.765474] (igus_rebel) StdoutLine: {'line': b'5: +  GSIG,\n'}
[0.765503] (igus_rebel) StdoutLine: {'line': b'5: +  GRIPPERSTATE,\n'}
[0.765533] (igus_rebel) StdoutLine: {'line': b'5: +  RUNSTATE,\n'}
[0.765566] (igus_rebel) StdoutLine: {'line': b'5: +  MESSAGE,\n'}
[0.766531] (igus_rebel) StdoutLine: {'line': b'5: +  CMD,\n'}
[0.777543] (igus_rebel) StdoutLine: {'line': b'5: +  CONFIG,\n'}
[0.777587] (igus_rebel) StdoutLine: {'line': b'5: +  INFO,\n'}
[0.777620] (igus_rebel) StdoutLine: {'line': b'5: +  LOGMSG,\n'}
[0.777652] (igus_rebel) StdoutLine: {'line': b'5: +  VARIABLES,\n'}
[0.777685] (igus_rebel) StdoutLine: {'line': b'5: +  CMDERROR,\n'}
[0.777716] (igus_rebel) StdoutLine: {'line': b'5: +  CMDACK,\n'}
[0.777748] (igus_rebel) StdoutLine: {'line': b'5: +  CYCLESTAT,\n'}
[0.777779] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.777810] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.777842] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.777873] (igus_rebel) StdoutLine: {'line': b'5: +enum class Mode\n'}
[0.777903] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.777934] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT,\n'}
[0.777965] (igus_rebel) StdoutLine: {'line': b'5: +  CARTBASE,\n'}
[0.777996] (igus_rebel) StdoutLine: {'line': b'5: +  CARTTOOL,\n'}
[0.778029] (igus_rebel) StdoutLine: {'line': b'5: +  PLATFORM,\n'}
[0.778061] (igus_rebel) StdoutLine: {'line': b'5: +  FSM,\n'}
[0.778094] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.778126] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.778157] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.778187] (igus_rebel) StdoutLine: {'line': b'5: +enum class Kinstate\n'}
[0.778218] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.778248] (igus_rebel) StdoutLine: {'line': b'5: +  NO_ERROR = 0,\n'}
[0.778280] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT_LIMIT_MIN = 13,\n'}
[0.778310] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT_LIMIT_MAX = 14,\n'}
[0.778342] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_CENTER = 21,\n'}
[0.778373] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_REACH = 23,\n'}
[0.778404] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_WRIST = 24,\n'}
[0.778434] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_1 = 30,\n'}
[0.778464] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_2 = 31,\n'}
[0.778494] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_3 = 32,\n'}
[0.778525] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_4 = 33,\n'}
[0.778558] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_5 = 34,\n'}
[0.778589] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_6 = 35,\n'}
[0.778619] (igus_rebel) StdoutLine: {'line': b'5: +  MOTION_NOT_ALLOWED = 99,\n'}
[0.778649] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.778679] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.778710] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.778740] (igus_rebel) StdoutLine: {'line': b'5: +enum class ErrorJoint\n'}
[0.778770] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.778800] (igus_rebel) StdoutLine: {'line': b'5: +  TEMP = 1,                 // OverTemperature\n'}
[0.778831] (igus_rebel) StdoutLine: {'line': b'5: +  ESTOP_LOWV = 2,           // Energy supply too low\n'}
[0.778862] (igus_rebel) StdoutLine: {'line': b'5: +  MNE = 4,                  // Motor not enabled\n'}
[0.778893] (igus_rebel) StdoutLine: {'line': b'5: +  COM = 8,                  // Communication watch dog\n'}
[0.778922] (igus_rebel) StdoutLine: {'line': b'5: +  POS = 16,                 // Position lag\n'}
[0.778953] (igus_rebel) StdoutLine: {'line': b'5: +  ENC = 32,                 // Encoder Error\n'}
[0.778983] (igus_rebel) StdoutLine: {'line': b'5: +  OC = 64,                  // Overcurrent\n'}
[0.779014] (igus_rebel) StdoutLine: {'line': b'5: +  DRV = 128                 // Driver Error\n'}
[0.779044] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.779074] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.779104] (igus_rebel) StdoutLine: {'line': b'5: +enum class ConfigType\n'}
[0.779134] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.779164] (igus_rebel) StdoutLine: {'line': b'5: +  KINEMATICLIMITS,\n'}
[0.779311] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.779345] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.779378] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.779412] (igus_rebel) StdoutLine: {'line': b'5: +enum class LogLevel\n'}
[0.779443] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.779474] (igus_rebel) StdoutLine: {'line': b'5: +  DEBUG,\n'}
[0.779503] (igus_rebel) StdoutLine: {'line': b'5: +  APP_INFO,\n'}
[0.779533] (igus_rebel) StdoutLine: {'line': b'5: +  APP_ERROR,\n'}
[0.779731] (igus_rebel) StdoutLine: {'line': b'5: +  INFO,\n'}
[0.779767] (igus_rebel) StdoutLine: {'line': b'5: +  WARN,\n'}
[0.779798] (igus_rebel) StdoutLine: {'line': b'5: +  ERROR,\n'}
[0.779829] (igus_rebel) StdoutLine: {'line': b'5: +  FATAL,\n'}
[0.779860] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.780025] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.780058] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.780090] (igus_rebel) StdoutLine: {'line': b'5: +class CriMessage\n'}
[0.780120] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.780153] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.780184] (igus_rebel) StdoutLine: {'line': b'5: +  MessageType GetType()\n'}
[0.780215] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.780246] (igus_rebel) StdoutLine: {'line': b'5: +    return type;\n'}
[0.780277] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.780307] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.780337] (igus_rebel) StdoutLine: {'line': b'5: +  static MessageType GetMessageType(const std::string &);\n'}
[0.780367] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.780398] (igus_rebel) StdoutLine: {'line': b'5: +protected:\n'}
[0.780428] (igus_rebel) StdoutLine: {'line': b'5: +  MessageType type;\n'}
[0.780459] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CriMessage(const MessageType & _type)\n'}
[0.780489] (igus_rebel) StdoutLine: {'line': b'5: +  : type(_type) {}\n'}
[0.780520] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.780555] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ParseMessageString(\n'}
[0.780591] (igus_rebel) StdoutLine: {'line': b'5: +    const std::string &, const std::string::size_type &,\n'}
[0.780832] (igus_rebel) StdoutLine: {'line': b'5: +    const std::string::size_type &, const std::string::size_type &);\n'}
[0.780872] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.780907] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T, std::size_t N>\n'}
[0.780942] (igus_rebel) StdoutLine: {'line': b'5: +  static void FillArray(std::array<T, N> &, const std::string &);\n'}
[0.780976] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.781010] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T>\n'}
[0.781042] (igus_rebel) StdoutLine: {'line': b'5: +  void FillVector(std::vector<T> &, const std::string &);\n'}
[0.781075] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.781108] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T, std::size_t N>\n'}
[0.781143] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ArrayToString(std::array<T, N> &);\n'}
[0.781178] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.781210] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T>\n'}
[0.781241] (igus_rebel) StdoutLine: {'line': b'5: +  std::string VectorToString(std::vector<T> & vector);\n'}
[0.781273] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.781305] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.781336] (igus_rebel) StdoutLine: {'line': b'5: +class Status : public CriMessage\n'}
[0.781367] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.781397] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.781428] (igus_rebel) StdoutLine: {'line': b'5: +  Mode mode;\n'}
[0.781459] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 16> posJointSetPoint;\n'}
[0.781490] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 16> posJointCurrent;\n'}
[0.781521] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 6> posCartRobot;\n'}
[0.781556] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 3> posCartPlattform;\n'}
[0.781593] (igus_rebel) StdoutLine: {'line': b'5: +  float overrideValue;\n'}
[0.781625] (igus_rebel) StdoutLine: {'line': b'5: +  int din;\n'}
[0.781658] (igus_rebel) StdoutLine: {'line': b'5: +  int dout;\n'}
[0.781690] (igus_rebel) StdoutLine: {'line': b'5: +  int eStop;\n'}
[0.781723] (igus_rebel) StdoutLine: {'line': b'5: +  int supply;\n'}
[0.781757] (igus_rebel) StdoutLine: {'line': b'5: +  int currentall;\n'}
[0.781792] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> currentjoints;\n'}
[0.781825] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorSummary;\n'}
[0.781857] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> errorJoints;\n'}
[0.781890] (igus_rebel) StdoutLine: {'line': b'5: +  Kinstate kinstate;\n'}
[0.781921] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.781955] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Status(const std::string &);\n'}
[0.781988] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Status();\n'}
[0.782020] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ModeToString(const Mode &);\n'}
[0.782054] (igus_rebel) StdoutLine: {'line': b'5: +  void Print();\n'}
[0.782088] (igus_rebel) StdoutLine: {'line': b'5: +  void Log();\n'}
[0.782120] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.782152] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.782183] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ToString();\n'}
[0.782213] (igus_rebel) StdoutLine: {'line': b'5: +  Mode GetMode(const std::string &);\n'}
[0.782245] (igus_rebel) StdoutLine: {'line': b'5: +  Kinstate GetKinstate(const std::string &);\n'}
[0.782276] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.782307] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.782338] (igus_rebel) StdoutLine: {'line': b'5: +class Message : public CriMessage\n'}
[0.782369] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.782399] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.782430] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Message(const std::string &);\n'}
[0.782686] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.782721] (igus_rebel) StdoutLine: {'line': b'5: +  std::string message;\n'}
[0.782753] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.782785] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.782817] (igus_rebel) StdoutLine: {'line': b'5: +class Command : public CriMessage\n'}
[0.782849] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.782881] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.782913] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Command(const std::string &);\n'}
[0.782944] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.782975] (igus_rebel) StdoutLine: {'line': b'5: +  std::string command;\n'}
[0.783006] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.783038] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.783069] (igus_rebel) StdoutLine: {'line': b'5: +class Info : public CriMessage\n'}
[0.783101] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.783132] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.783164] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Info(const std::string &);\n'}
[0.783195] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.783226] (igus_rebel) StdoutLine: {'line': b'5: +  std::string info;\n'}
[0.783257] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.783289] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.783319] (igus_rebel) StdoutLine: {'line': b'5: +class LogMsg : public CriMessage\n'}
[0.783350] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.783381] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.783412] (igus_rebel) StdoutLine: {'line': b'5: +  explicit LogMsg(const std::string &);\n'}
[0.783443] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.783474] (igus_rebel) StdoutLine: {'line': b'5: +  LogLevel logLevel;\n'}
[0.783504] (igus_rebel) StdoutLine: {'line': b'5: +  long timestamp;\n'}
[0.783535] (igus_rebel) StdoutLine: {'line': b'5: +  std::string logMsg;\n'}
[0.783576] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.783611] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.783908] (igus_rebel) StdoutLine: {'line': b'5: +  LogLevel GetLogLevel(const std::string &);\n'}
[0.783943] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.783976] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.784009] (igus_rebel) StdoutLine: {'line': b'5: +class Variables : public CriMessage\n'}
[0.784041] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.784072] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.784102] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Variables(const std::string &);\n'}
[0.784133] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.784163] (igus_rebel) StdoutLine: {'line': b'5: +  struct NumberVariable\n'}
[0.784193] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.784224] (igus_rebel) StdoutLine: {'line': b'5: +    std::string name;\n'}
[0.784255] (igus_rebel) StdoutLine: {'line': b'5: +    double value;\n'}
[0.784287] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.784319] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.784350] (igus_rebel) StdoutLine: {'line': b'5: +  struct PositionVariable\n'}
[0.784382] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.784415] (igus_rebel) StdoutLine: {'line': b'5: +    std::string name;\n'}
[0.784447] (igus_rebel) StdoutLine: {'line': b'5: +    std::array<double, 15> values;\n'}
[0.784479] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.784511] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.784541] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<NumberVariable> numberVariables;\n'}
[0.784578] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<PositionVariable> positionVariables;\n'}
[0.784611] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.784642] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.784673] (igus_rebel) StdoutLine: {'line': b'5: +  std::string GetMatchString(const std::smatch &);\n'}
[0.784703] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.784738] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.784772] (igus_rebel) StdoutLine: {'line': b'5: +class CmdError : public CriMessage\n'}
[0.784807] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.784842] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.784877] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CmdError(const std::string &);\n'}
[0.784911] (igus_rebel) StdoutLine: {'line': b'5: +  int recjectedCmd;\n'}
[0.784944] (igus_rebel) StdoutLine: {'line': b'5: +  std::string error;\n'}
[0.784977] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.785011] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.785045] (igus_rebel) StdoutLine: {'line': b'5: +class CmdAck : public CriMessage\n'}
[0.785076] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.785107] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.785139] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CmdAck(const std::string &);\n'}
[0.785171] (igus_rebel) StdoutLine: {'line': b'5: +  int acceptedCmd;\n'}
[0.785201] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.785232] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.785264] (igus_rebel) StdoutLine: {'line': b'5: +class Cyclestat : public CriMessage\n'}
[0.785295] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.785326] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.785358] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Cyclestat(const std::string &);\n'}
[0.785388] (igus_rebel) StdoutLine: {'line': b'5: +  int cycletime;\n'}
[0.785419] (igus_rebel) StdoutLine: {'line': b'5: +  int workload;\n'}
[0.785577] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.785619] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.785651] (igus_rebel) StdoutLine: {'line': b'5: +class Config : public CriMessage\n'}
[0.785684] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.785718] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.785749] (igus_rebel) StdoutLine: {'line': b'5: +  ConfigType configType;\n'}
[0.785780] (igus_rebel) StdoutLine: {'line': b'5: +  static ConfigType GetConfigType(const std::string &);\n'}
[0.785812] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.786138] (igus_rebel) StdoutLine: {'line': b'5: +protected:\n'}
[0.786171] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Config(const ConfigType & _configType)\n'}
[0.786204] (igus_rebel) StdoutLine: {'line': b'5: +  : CriMessage(MessageType::CONFIG), configType(_configType) {}\n'}
[0.786237] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.786269] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.786300] (igus_rebel) StdoutLine: {'line': b'5: +class KinematicLimits : public Config\n'}
[0.786332] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.786364] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.786396] (igus_rebel) StdoutLine: {'line': b'5: +  explicit KinematicLimits(const std::string &);\n'}
[0.786426] (igus_rebel) StdoutLine: {'line': b'5: @@ -263,6 +266,5 @@\n'}
[0.786458] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<std::pair<float, float>> minMaxPairs;\n'}
[0.786492] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.786523] (igus_rebel) StdoutLine: {'line': b'5: -            std::string ToString();\n'}
[0.786558] (igus_rebel) StdoutLine: {'line': b'5: -            void Print();\n'}
[0.786592] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.786624] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.786655] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<std::pair<float, float>> minMaxPairs;\n'}
[0.786687] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.786718] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ToString();\n'}
[0.786749] (igus_rebel) StdoutLine: {'line': b'5: +  void Print();\n'}
[0.786781] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.786813] (igus_rebel) StdoutLine: {'line': b'5: @@ -269,0 +272 @@\n'}
[0.786977] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.787011] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.787043] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/Rebel.hpp':\n"}
[0.787074] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.787107] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/Rebel.hpp\n'}
[0.787138] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/Rebel.hpp.uncrustify\n'}
[0.787169] (igus_rebel) StdoutLine: {'line': b'5: @@ -20,8 +20,8 @@\n'}
[0.787199] (igus_rebel) StdoutLine: {'line': b'5: -    class Rebel : public SystemInterface\n'}
[0.787231] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.787261] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.787292] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ControlMode\n'}
[0.787322] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.787353] (igus_rebel) StdoutLine: {'line': b'5: -            POSITION,\n'}
[0.787383] (igus_rebel) StdoutLine: {'line': b'5: -            VELOCITY\n'}
[0.787414] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.787444] (igus_rebel) StdoutLine: {'line': b'5: +class Rebel : public SystemInterface\n'}
[0.787475] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.787507] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.787537] (igus_rebel) StdoutLine: {'line': b'5: +  enum class ControlMode\n'}
[0.787578] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.787611] (igus_rebel) StdoutLine: {'line': b'5: +    POSITION,\n'}
[0.787643] (igus_rebel) StdoutLine: {'line': b'5: +    VELOCITY\n'}
[0.787674] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.787705] (igus_rebel) StdoutLine: {'line': b'5: @@ -29,5 +29,5 @@\n'}
[0.787736] (igus_rebel) StdoutLine: {'line': b'5: -    private:\n'}
[0.787766] (igus_rebel) StdoutLine: {'line': b'5: -        rclcpp::Node::SharedPtr node_;\n'}
[0.787796] (igus_rebel) StdoutLine: {'line': b'5: -        \n'}
[0.787826] (igus_rebel) StdoutLine: {'line': b'5: -        std::shared_ptr<RebelSocket> rebelSocket;\n'}
[0.787856] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Status currentStatus;\n'}
[0.787888] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.787918] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Node::SharedPtr node_;\n'}
[0.787950] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.788110] (igus_rebel) StdoutLine: {'line': b'5: +  std::shared_ptr<RebelSocket> rebelSocket;\n'}
[0.788144] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Status currentStatus;\n'}
[0.788177] (igus_rebel) StdoutLine: {'line': b'5: @@ -36,2 +36,2 @@\n'}
[0.788209] (igus_rebel) StdoutLine: {'line': b'5: -        float j1, j2, j3, j4, j5, j6;\n'}
[0.788241] (igus_rebel) StdoutLine: {'line': b'5: -        ControlMode controlMode;\n'}
[0.788272] (igus_rebel) StdoutLine: {'line': b'5: +  float j1, j2, j3, j4, j5, j6;\n'}
[0.788302] (igus_rebel) StdoutLine: {'line': b'5: +  ControlMode controlMode;\n'}
[0.788333] (igus_rebel) StdoutLine: {'line': b'5: @@ -39,5 +39,5 @@\n'}
[0.788364] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueAlive;\n'}
[0.788395] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueMessage;\n'}
[0.788426] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread aliveThread;\n'}
[0.788456] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread messageThread;\n'}
[0.788486] (igus_rebel) StdoutLine: {'line': b'5: -        int aliveWaitMs;\n'}
[0.788517] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueAlive;\n'}
[0.788551] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueMessage;\n'}
[0.788585] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread aliveThread;\n'}
[0.788615] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread messageThread;\n'}
[0.788645] (igus_rebel) StdoutLine: {'line': b'5: +  int aliveWaitMs;\n'}
[0.788676] (igus_rebel) StdoutLine: {'line': b'5: @@ -45,3 +45,3 @@\n'}
[0.788706] (igus_rebel) StdoutLine: {'line': b'5: -        int current_ccnt;\n'}
[0.788737] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex cntLock;\n'}
[0.788768] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex aliveLock;\n'}
[0.788799] (igus_rebel) StdoutLine: {'line': b'5: +  int current_ccnt;\n'}
[0.788832] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex cntLock;\n'}
[0.788863] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex aliveLock;\n'}
[0.788895] (igus_rebel) StdoutLine: {'line': b'5: @@ -49,5 +49,5 @@\n'}
[0.788927] (igus_rebel) StdoutLine: {'line': b'5: -        double vel_cmd[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.788959] (igus_rebel) StdoutLine: {'line': b'5: -        double pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.788992] (igus_rebel) StdoutLine: {'line': b'5: -        double last_pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.789024] (igus_rebel) StdoutLine: {'line': b'5: -        double vel[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.789056] (igus_rebel) StdoutLine: {'line': b'5: -        double eff[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.789087] (igus_rebel) StdoutLine: {'line': b'5: +  double vel_cmd[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.789117] (igus_rebel) StdoutLine: {'line': b'5: +  double pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.789148] (igus_rebel) StdoutLine: {'line': b'5: +  double last_pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.789179] (igus_rebel) StdoutLine: {'line': b'5: +  double vel[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.789209] (igus_rebel) StdoutLine: {'line': b'5: +  double eff[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.789238] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,3 +55,3 @@\n'}
[0.789268] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Kinstate lastKinstate;\n'}
[0.789299] (igus_rebel) StdoutLine: {'line': b'5: -        std::array<int, 16> lastErrorJoints;\n'}
[0.789330] (igus_rebel) StdoutLine: {'line': b'5: -        std::string kinstateMessage;\n'}
[0.789360] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Kinstate lastKinstate;\n'}
[0.789390] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> lastErrorJoints;\n'}
[0.789420] (igus_rebel) StdoutLine: {'line': b'5: +  std::string kinstateMessage;\n'}
[0.789568] (igus_rebel) StdoutLine: {'line': b'5: @@ -59 +59 @@\n'}
[0.789605] (igus_rebel) StdoutLine: {'line': b'5: -        std::unordered_map<int, std::string> unacknowledgedCommands;\n'}
[0.789637] (igus_rebel) StdoutLine: {'line': b'5: +  std::unordered_map<int, std::string> unacknowledgedCommands;\n'}
[0.789669] (igus_rebel) StdoutLine: {'line': b'5: @@ -62 +62 @@\n'}
[0.789698] (igus_rebel) StdoutLine: {'line': b'5: -        rclcpp::Service<igus_rebel_msgs::srv::SetDigitalOutput>::SharedPtr digital_output_srv_;\n'}
[0.789729] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Service<igus_rebel_msgs::srv::SetDigitalOutput>::SharedPtr digital_output_srv_;\n'}
[0.789760] (igus_rebel) StdoutLine: {'line': b'5: @@ -65,2 +65,2 @@\n'}
[0.789788] (igus_rebel) StdoutLine: {'line': b'5: -        void AliveThreadFunction();\n'}
[0.789817] (igus_rebel) StdoutLine: {'line': b'5: -        void MessageThreadFunction();\n'}
[0.789847] (igus_rebel) StdoutLine: {'line': b'5: +  void AliveThreadFunction();\n'}
[0.789875] (igus_rebel) StdoutLine: {'line': b'5: +  void MessageThreadFunction();\n'}
[0.789904] (igus_rebel) StdoutLine: {'line': b'5: @@ -69,4 +69,4 @@\n'}
[0.789933] (igus_rebel) StdoutLine: {'line': b'5: -        int Ccnt();\n'}
[0.789962] (igus_rebel) StdoutLine: {'line': b'5: -        void Command(const std::string &);\n'}
[0.789990] (igus_rebel) StdoutLine: {'line': b'5: -        void GetConfig(const std::string &);\n'}
[0.790017] (igus_rebel) StdoutLine: {'line': b'5: -        void SetControlMode(const ControlMode &);\n'}
[0.790046] (igus_rebel) StdoutLine: {'line': b'5: +  int Ccnt();\n'}
[0.790074] (igus_rebel) StdoutLine: {'line': b'5: +  void Command(const std::string &);\n'}
[0.790103] (igus_rebel) StdoutLine: {'line': b'5: +  void GetConfig(const std::string &);\n'}
[0.790131] (igus_rebel) StdoutLine: {'line': b'5: +  void SetControlMode(const ControlMode &);\n'}
[0.790158] (igus_rebel) StdoutLine: {'line': b'5: @@ -75,2 +75,2 @@\n'}
[0.790186] (igus_rebel) StdoutLine: {'line': b'5: -        void ProcessStatus(const CriMessages::Status &);\n'}
[0.790215] (igus_rebel) StdoutLine: {'line': b'5: -        void SetUpRosHardwareInterface();\n'}
[0.790243] (igus_rebel) StdoutLine: {'line': b'5: +  void ProcessStatus(const CriMessages::Status &);\n'}
[0.790272] (igus_rebel) StdoutLine: {'line': b'5: +  void SetUpRosHardwareInterface();\n'}
[0.790301] (igus_rebel) StdoutLine: {'line': b'5: @@ -78,3 +78,3 @@\n'}
[0.790329] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.790359] (igus_rebel) StdoutLine: {'line': b'5: -        const std::vector<std::string> JOINT_NAME = {\n'}
[0.790387] (igus_rebel) StdoutLine: {'line': b'5: -            "joint1", "joint2", "joint3", "joint4", "joint5", "joint6"};\n'}
[0.790417] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.790446] (igus_rebel) StdoutLine: {'line': b'5: +  const std::vector<std::string> JOINT_NAME = {\n'}
[0.790475] (igus_rebel) StdoutLine: {'line': b'5: +    "joint1", "joint2", "joint3", "joint4", "joint5", "joint6"};\n'}
[0.790504] (igus_rebel) StdoutLine: {'line': b'5: @@ -83 +83 @@\n'}
[0.790531] (igus_rebel) StdoutLine: {'line': b'5: -        const double degToRad = 0.0174532925199432957692369076848861271344287188854172545609719144;\n'}
[0.790567] (igus_rebel) StdoutLine: {'line': b'5: +  const double degToRad = 0.0174532925199432957692369076848861271344287188854172545609719144;\n'}
[0.790597] (igus_rebel) StdoutLine: {'line': b'5: @@ -86,2 +86,2 @@\n'}
[0.790629] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string ip = "192.168.3.11";\n'}
[0.790657] (igus_rebel) StdoutLine: {'line': b'5: -        const int port = 3920;\n'}
[0.790686] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string ip = "192.168.3.11";\n'}
[0.790715] (igus_rebel) StdoutLine: {'line': b'5: +  const int port = 3920;\n'}
[0.790744] (igus_rebel) StdoutLine: {'line': b'5: @@ -89,2 +89,2 @@\n'}
[0.790772] (igus_rebel) StdoutLine: {'line': b'5: -        Rebel();\n'}
[0.790801] (igus_rebel) StdoutLine: {'line': b'5: -        ~Rebel();\n'}
[0.790830] (igus_rebel) StdoutLine: {'line': b'5: +  Rebel();\n'}
[0.790859] (igus_rebel) StdoutLine: {'line': b'5: +  ~Rebel();\n'}
[0.790887] (igus_rebel) StdoutLine: {'line': b'5: @@ -92,3 +92,5 @@\n'}
[0.790915] (igus_rebel) StdoutLine: {'line': b'5: -        void SetJog(const float &, const float &, const float &, const float &, const float &, const float &);\n'}
[0.790946] (igus_rebel) StdoutLine: {'line': b'5: -        void GetJoints(float &, float &, float &, float &, float &, float &);\n'}
[0.790974] (igus_rebel) StdoutLine: {'line': b'5: -        void SetDigitalOut(const int &, const bool &);\n'}
[0.791003] (igus_rebel) StdoutLine: {'line': b'5: +  void SetJog(\n'}
[0.791031] (igus_rebel) StdoutLine: {'line': b'5: +    const float &, const float &, const float &, const float &, const float &,\n'}
[0.791059] (igus_rebel) StdoutLine: {'line': b'5: +    const float &);\n'}
[0.791087] (igus_rebel) StdoutLine: {'line': b'5: +  void GetJoints(float &, float &, float &, float &, float &, float &);\n'}
[0.791115] (igus_rebel) StdoutLine: {'line': b'5: +  void SetDigitalOut(const int &, const bool &);\n'}
[0.791143] (igus_rebel) StdoutLine: {'line': b'5: @@ -97 +99 @@\n'}
[0.791171] (igus_rebel) StdoutLine: {'line': b'5: -        CallbackReturn on_init(const HardwareInfo &hardware_info) override;\n'}
[0.791200] (igus_rebel) StdoutLine: {'line': b'5: +  CallbackReturn on_init(const HardwareInfo & hardware_info) override;\n'}
[0.791228] (igus_rebel) StdoutLine: {'line': b'5: @@ -99,4 +101,4 @@\n'}
[0.791256] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<StateInterface> export_state_interfaces() override;\n'}
[0.791283] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<CommandInterface> export_command_interfaces() override;\n'}
[0.791310] (igus_rebel) StdoutLine: {'line': b'5: -        return_type read(const rclcpp::Time &time, const rclcpp::Duration &period) override;\n'}
[0.791338] (igus_rebel) StdoutLine: {'line': b'5: -        return_type write(const rclcpp::Time &time, const rclcpp::Duration &period) override;\n'}
[0.791367] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<StateInterface> export_state_interfaces() override;\n'}
[0.791394] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<CommandInterface> export_command_interfaces() override;\n'}
[0.791422] (igus_rebel) StdoutLine: {'line': b'5: +  return_type read(const rclcpp::Time & time, const rclcpp::Duration & period) override;\n'}
[0.791449] (igus_rebel) StdoutLine: {'line': b'5: +  return_type write(const rclcpp::Time & time, const rclcpp::Duration & period) override;\n'}
[0.791476] (igus_rebel) StdoutLine: {'line': b'5: @@ -104,2 +106,2 @@\n'}
[0.791504] (igus_rebel) StdoutLine: {'line': b'5: -        void read();\n'}
[0.791532] (igus_rebel) StdoutLine: {'line': b'5: -        void write();\n'}
[0.791568] (igus_rebel) StdoutLine: {'line': b'5: +  void read();\n'}
[0.791598] (igus_rebel) StdoutLine: {'line': b'5: +  void write();\n'}
[0.791628] (igus_rebel) StdoutLine: {'line': b'5: @@ -107,2 +109,3 @@\n'}
[0.791656] (igus_rebel) StdoutLine: {'line': b'5: -        void dio_callback(const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.791683] (igus_rebel) StdoutLine: {'line': b'5: -                          std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response);\n'}
[0.791711] (igus_rebel) StdoutLine: {'line': b'5: +  void dio_callback(\n'}
[0.791742] (igus_rebel) StdoutLine: {'line': b'5: +    const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.791771] (igus_rebel) StdoutLine: {'line': b'5: +    std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response);\n'}
[0.791802] (igus_rebel) StdoutLine: {'line': b'5: @@ -110 +113 @@\n'}
[0.791832] (igus_rebel) StdoutLine: {'line': b'5: -        void GetReferenceInfo();\n'}
[0.791863] (igus_rebel) StdoutLine: {'line': b'5: +  void GetReferenceInfo();\n'}
[0.791895] (igus_rebel) StdoutLine: {'line': b'5: @@ -112,3 +115,3 @@\n'}
[0.791925] (igus_rebel) StdoutLine: {'line': b'5: -        void Start();\n'}
[0.791953] (igus_rebel) StdoutLine: {'line': b'5: -        void Stop();\n'}
[0.791982] (igus_rebel) StdoutLine: {'line': b'5: -    };\n'}
[0.792010] (igus_rebel) StdoutLine: {'line': b'5: +  void Start();\n'}
[0.792040] (igus_rebel) StdoutLine: {'line': b'5: +  void Stop();\n'}
[0.792070] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.792099] (igus_rebel) StdoutLine: {'line': b'5: @@ -117 +120 @@\n'}
[0.792128] (igus_rebel) StdoutLine: {'line': b'5: -#endif\n'}
[0.792158] (igus_rebel) StdoutLine: {'line': b'5: +#endif\n'}
[0.792186] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.792213] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/RebelSocket.hpp':\n"}
[0.792241] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.792268] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/RebelSocket.hpp\n'}
[0.792297] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/RebelSocket.hpp.uncrustify\n'}
[0.792324] (igus_rebel) StdoutLine: {'line': b'5: @@ -14,8 +14,8 @@\n'}
[0.792351] (igus_rebel) StdoutLine: {'line': b'5: -    class RebelSocket\n'}
[0.792379] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.792407] (igus_rebel) StdoutLine: {'line': b'5: -    private:\n'}
[0.792434] (igus_rebel) StdoutLine: {'line': b'5: -        int sock;\n'}
[0.792462] (igus_rebel) StdoutLine: {'line': b'5: -        std::string ip;\n'}
[0.792489] (igus_rebel) StdoutLine: {'line': b'5: -        int port;\n'}
[0.792516] (igus_rebel) StdoutLine: {'line': b'5: -        int timeout;\n'}
[0.792544] (igus_rebel) StdoutLine: {'line': b'5: -        std::list<std::string> unprocessedMessages;\n'}
[0.792576] (igus_rebel) StdoutLine: {'line': b'5: +class RebelSocket\n'}
[0.792605] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.792633] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.792660] (igus_rebel) StdoutLine: {'line': b'5: +  int sock;\n'}
[0.792688] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ip;\n'}
[0.792715] (igus_rebel) StdoutLine: {'line': b'5: +  int port;\n'}
[0.792743] (igus_rebel) StdoutLine: {'line': b'5: +  int timeout;\n'}
[0.792771] (igus_rebel) StdoutLine: {'line': b'5: +  std::list<std::string> unprocessedMessages;\n'}
[0.792799] (igus_rebel) StdoutLine: {'line': b'5: @@ -23,8 +23,8 @@\n'}
[0.792827] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueReceive = false;\n'}
[0.792854] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread receiveThread;\n'}
[0.792882] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread listCheckThread;\n'}
[0.792910] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex socketWriteLock;\n'}
[0.792937] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex connectionLock;\n'}
[0.792964] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex messageLock;\n'}
[0.792992] (igus_rebel) StdoutLine: {'line': b'5: -        unsigned long maxUnprocessedMessages = 25;\n'}
[0.793020] (igus_rebel) StdoutLine: {'line': b'5: -        int listCheckWaitMs = 500;\n'}
[0.793048] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueReceive = false;\n'}
[0.793076] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread receiveThread;\n'}
[0.793104] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread listCheckThread;\n'}
[0.793131] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex socketWriteLock;\n'}
[0.793159] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex connectionLock;\n'}
[0.793187] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex messageLock;\n'}
[0.793215] (igus_rebel) StdoutLine: {'line': b'5: +  unsigned long maxUnprocessedMessages = 25;\n'}
[0.793243] (igus_rebel) StdoutLine: {'line': b'5: +  int listCheckWaitMs = 500;\n'}
[0.793270] (igus_rebel) StdoutLine: {'line': b'5: @@ -32,2 +32,2 @@\n'}
[0.793297] (igus_rebel) StdoutLine: {'line': b'5: -        bool connectionNeeded = false;\n'}
[0.793324] (igus_rebel) StdoutLine: {'line': b'5: -        static const int bufferSize = 4096;\n'}
[0.793352] (igus_rebel) StdoutLine: {'line': b'5: +  bool connectionNeeded = false;\n'}
[0.793379] (igus_rebel) StdoutLine: {'line': b'5: +  static const int bufferSize = 4096;\n'}
[0.793406] (igus_rebel) StdoutLine: {'line': b'5: @@ -35,2 +35,2 @@\n'}
[0.793433] (igus_rebel) StdoutLine: {'line': b'5: -        char fragmentBuffer[bufferSize];\n'}
[0.793462] (igus_rebel) StdoutLine: {'line': b'5: -        int fragmentLength = 0;\n'}
[0.793490] (igus_rebel) StdoutLine: {'line': b'5: +  char fragmentBuffer[bufferSize];\n'}
[0.793517] (igus_rebel) StdoutLine: {'line': b'5: +  int fragmentLength = 0;\n'}
[0.793544] (igus_rebel) StdoutLine: {'line': b'5: @@ -38,2 +38,2 @@\n'}
[0.793577] (igus_rebel) StdoutLine: {'line': b'5: -        void MakeConnection();\n'}
[0.793607] (igus_rebel) StdoutLine: {'line': b'5: -        void SeparateMessages(const char *);\n'}
[0.793634] (igus_rebel) StdoutLine: {'line': b'5: +  void MakeConnection();\n'}
[0.793661] (igus_rebel) StdoutLine: {'line': b'5: +  void SeparateMessages(const char *);\n'}
[0.793688] (igus_rebel) StdoutLine: {'line': b'5: @@ -41,2 +41,2 @@\n'}
[0.793715] (igus_rebel) StdoutLine: {'line': b'5: -        void ReceiveThreadFunction();\n'}
[0.793741] (igus_rebel) StdoutLine: {'line': b'5: -        void ListCheckThreadFunction();\n'}
[0.793767] (igus_rebel) StdoutLine: {'line': b'5: +  void ReceiveThreadFunction();\n'}
[0.793795] (igus_rebel) StdoutLine: {'line': b'5: +  void ListCheckThreadFunction();\n'}
[0.793823] (igus_rebel) StdoutLine: {'line': b'5: @@ -44 +44 @@\n'}
[0.793850] (igus_rebel) StdoutLine: {'line': b'5: -        bool IsSocketOk();\n'}
[0.793878] (igus_rebel) StdoutLine: {'line': b'5: +  bool IsSocketOk();\n'}
[0.793906] (igus_rebel) StdoutLine: {'line': b'5: @@ -46,3 +46,3 @@\n'}
[0.793932] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.793960] (igus_rebel) StdoutLine: {'line': b'5: -        RebelSocket(const std::string &, const int &, const int &);\n'}
[0.793989] (igus_rebel) StdoutLine: {'line': b'5: -        ~RebelSocket();\n'}
[0.794017] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.794044] (igus_rebel) StdoutLine: {'line': b'5: +  RebelSocket(const std::string &, const int &, const int &);\n'}
[0.794073] (igus_rebel) StdoutLine: {'line': b'5: +  ~RebelSocket();\n'}
[0.794101] (igus_rebel) StdoutLine: {'line': b'5: @@ -50,6 +50,6 @@\n'}
[0.794129] (igus_rebel) StdoutLine: {'line': b'5: -        void Start();\n'}
[0.794157] (igus_rebel) StdoutLine: {'line': b'5: -        void Stop();\n'}
[0.794185] (igus_rebel) StdoutLine: {'line': b'5: -        bool HasMessage();\n'}
[0.794213] (igus_rebel) StdoutLine: {'line': b'5: -        std::string GetMessage();\n'}
[0.794241] (igus_rebel) StdoutLine: {'line': b'5: -        void SendMessage(const std::string &);\n'}
[0.794268] (igus_rebel) StdoutLine: {'line': b'5: -    };\n'}
[0.794295] (igus_rebel) StdoutLine: {'line': b'5: +  void Start();\n'}
[0.794323] (igus_rebel) StdoutLine: {'line': b'5: +  void Stop();\n'}
[0.794350] (igus_rebel) StdoutLine: {'line': b'5: +  bool HasMessage();\n'}
[0.794378] (igus_rebel) StdoutLine: {'line': b'5: +  std::string GetMessage();\n'}
[0.794406] (igus_rebel) StdoutLine: {'line': b'5: +  void SendMessage(const std::string &);\n'}
[0.794433] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.794461] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.794488] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/CriMessages.cpp':\n"}
[0.794516] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.794543] (igus_rebel) StdoutLine: {'line': b'5: --- src/CriMessages.cpp\n'}
[0.794576] (igus_rebel) StdoutLine: {'line': b'5: +++ src/CriMessages.cpp.uncrustify\n'}
[0.794604] (igus_rebel) StdoutLine: {'line': b'5: @@ -10,5 +10,5 @@\n'}
[0.794631] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriMessages\n'}
[0.794658] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.794684] (igus_rebel) StdoutLine: {'line': b'5: -        MessageType CriMessage::GetMessageType(const std::string &msg)\n'}
[0.794712] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.794739] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeStart;\n'}
[0.794766] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriMessages\n'}
[0.794794] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.794823] (igus_rebel) StdoutLine: {'line': b'5: +MessageType CriMessage::GetMessageType(const std::string & msg)\n'}
[0.794853] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.794880] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeStart;\n'}
[0.794908] (igus_rebel) StdoutLine: {'line': b'5: @@ -16,247 +16,224 @@\n'}
[0.794936] (igus_rebel) StdoutLine: {'line': b"5: -            if (msg.at(0) == ' ')\n"}
[0.794963] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.794991] (igus_rebel) StdoutLine: {'line': b'5: -                typeStart = msg.find(" ", 1) + 1;\n'}
[0.795019] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.795047] (igus_rebel) StdoutLine: {'line': b'5: -            else\n'}
[0.795075] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.795103] (igus_rebel) StdoutLine: {'line': b'5: -                typeStart = msg.find(" ") + 1;\n'}
[0.795131] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.795159] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.795189] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.795217] (igus_rebel) StdoutLine: {'line': b'5: -            std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.795244] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.795271] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_STATUS)\n'}
[0.795299] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.795327] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::STATUS;\n'}
[0.795356] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.795384] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.795411] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_OPINFO)\n'}
[0.795439] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.795467] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::OPINFO;\n'}
[0.795496] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.795523] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.795559] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_GSIG)\n'}
[0.795589] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.795617] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::GSIG;\n'}
[0.795646] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.795674] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.795702] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_GRIPPERSTATE)\n'}
[0.795730] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.795758] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::GRIPPERSTATE;\n'}
[0.795786] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.795813] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.795841] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_RUNSTATE)\n'}
[0.795868] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.795896] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::RUNSTATE;\n'}
[0.795924] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.795951] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.795979] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_MESSAGE)\n'}
[0.796007] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.796034] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::MESSAGE;\n'}
[0.796062] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.796090] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.796118] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMD)\n'}
[0.796145] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.796173] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMD;\n'}
[0.796200] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.796227] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.796257] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CONFIG)\n'}
[0.796285] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.796313] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CONFIG;\n'}
[0.796341] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.796367] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.796394] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_INFO)\n'}
[0.796421] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.796449] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::INFO;\n'}
[0.796476] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.796504] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.796530] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_LOGMSG)\n'}
[0.796563] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.796590] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::LOGMSG;\n'}
[0.796619] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.796647] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.796674] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_VARIABLES)\n'}
[0.796702] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.796728] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::VARIABLES;\n'}
[0.796755] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.796783] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.796809] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMDERROR)\n'}
[0.796839] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.796866] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMDERROR;\n'}
[0.796894] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.796922] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.796950] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMDACK)\n'}
[0.796978] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.797006] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMDACK;\n'}
[0.797034] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.797060] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.797086] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CYCLESTAT)\n'}
[0.797113] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.797141] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CYCLESTAT;\n'}
[0.797168] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.797194] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.797221] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown message type: \\"%s\\"", typeString.c_str());\n'}
[0.797250] (igus_rebel) StdoutLine: {'line': b'5: -            return MessageType::UNKNOWN;\n'}
[0.797280] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.797307] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.797334] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::ParseMessageString(const std::string &statusString, const std::string::size_type &begin,\n'}
[0.797362] (igus_rebel) StdoutLine: {'line': b'5: -                                                   const std::string::size_type &end, const std::string::size_type &keywordLength)\n'}
[0.797390] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.797417] (igus_rebel) StdoutLine: {'line': b'5: -            int start = begin + keywordLength + 1;\n'}
[0.797444] (igus_rebel) StdoutLine: {'line': b'5: -            int length = end - start - 1;\n'}
[0.797471] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.797498] (igus_rebel) StdoutLine: {'line': b'5: -            return statusString.substr(start, length);\n'}
[0.797525] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.797557] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.797588] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T, std::size_t N>\n'}
[0.797615] (igus_rebel) StdoutLine: {'line': b'5: -        void CriMessage::FillArray(std::array<T, N> &array, const std::string &spaceSeparatedValues)\n'}
[0.797643] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.797670] (igus_rebel) StdoutLine: {'line': b'5: -            typename std::array<T, N>::size_type idx = 0;\n'}
[0.797699] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type begin = 0;\n'}
[0.797727] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.797755] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.797783] (igus_rebel) StdoutLine: {'line': b'5: -            while (end != std::string::npos)\n'}
[0.797810] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.797836] (igus_rebel) StdoutLine: {'line': b'5: -                if (idx >= N)\n'}
[0.797863] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.797890] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Parsing error");\n'}
[0.797917] (igus_rebel) StdoutLine: {'line': b'5: -                    return;\n'}
[0.797943] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.797969] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.797996] (igus_rebel) StdoutLine: {'line': b'5: -                std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.798023] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.798049] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<float, T>::value)\n'}
[0.798076] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.798102] (igus_rebel) StdoutLine: {'line': b'5: -                    array.at(idx) = std::stof(value);\n'}
[0.798130] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.798157] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.798184] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<int, T>::value)\n'}
[0.798212] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.798240] (igus_rebel) StdoutLine: {'line': b'5: -                    array.at(idx) = std::stoi(value);\n'}
[0.798268] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.798295] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.798322] (igus_rebel) StdoutLine: {'line': b'5: -                begin = spaceSeparatedValues.find(" ", end);\n'}
[0.798349] (igus_rebel) StdoutLine: {'line': b'5: -                end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.798376] (igus_rebel) StdoutLine: {'line': b'5: -                idx++;\n'}
[0.798403] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.798431] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.798459] (igus_rebel) StdoutLine: {'line': b'5: -            std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.798485] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.798512] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<float, T>::value)\n'}
[0.798539] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.798571] (igus_rebel) StdoutLine: {'line': b'5: -                array.at(idx) = std::stof(value);\n'}
[0.798599] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.798625] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.798652] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<int, T>::value)\n'}
[0.798679] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.798705] (igus_rebel) StdoutLine: {'line': b'5: -                array.at(idx) = std::stoi(value);\n'}
[0.798733] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.798759] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.798786] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.798813] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T>\n'}
[0.798840] (igus_rebel) StdoutLine: {'line': b'5: -        void CriMessage::FillVector(std::vector<T> &vector, const std::string &spaceSeparatedValues)\n'}
[0.798869] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.798897] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type begin = 0;\n'}
[0.798924] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.798950] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.798976] (igus_rebel) StdoutLine: {'line': b'5: -            while (end != std::string::npos)\n'}
[0.799003] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.799030] (igus_rebel) StdoutLine: {'line': b'5: -                std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.799057] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.799084] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<float, T>::value)\n'}
[0.799111] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.799138] (igus_rebel) StdoutLine: {'line': b'5: -                    vector.push_back(std::stof(value));\n'}
[0.799166] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.799193] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.799220] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<int, T>::value)\n'}
[0.799246] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.799273] (igus_rebel) StdoutLine: {'line': b'5: -                    vector.push_back(std::stoi(value));\n'}
[0.799301] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.799328] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.799356] (igus_rebel) StdoutLine: {'line': b'5: -                begin = spaceSeparatedValues.find(" ", end);\n'}
[0.799383] (igus_rebel) StdoutLine: {'line': b'5: -                end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.799410] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.799437] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.799463] (igus_rebel) StdoutLine: {'line': b'5: -            std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.799491] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.799517] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<float, T>::value)\n'}
[0.799544] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.799582] (igus_rebel) StdoutLine: {'line': b'5: -                vector.push_back(std::stof(value));\n'}
[0.799610] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.799638] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.799666] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<int, T>::value)\n'}
[0.799693] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.799721] (igus_rebel) StdoutLine: {'line': b'5: -                vector.push_back(std::stoi(value));\n'}
[0.799748] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.799776] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.799804] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.799831] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T, std::size_t N>\n'}
[0.799859] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::ArrayToString(std::array<T, N> &array)\n'}
[0.799887] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.799914] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.799941] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.799968] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.799995] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.800023] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.800050] (igus_rebel) StdoutLine: {'line': b'5: -            for (T val : array)\n'}
[0.800076] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.800103] (igus_rebel) StdoutLine: {'line': b'5: -                msg << val << " ";\n'}
[0.800129] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.800159] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.800186] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.800213] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.800241] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.800268] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T>\n'}
[0.800296] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::VectorToString(std::vector<T> &vector)\n'}
[0.800323] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.800350] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.800381] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.800408] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.800435] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.800463] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.800490] (igus_rebel) StdoutLine: {'line': b'5: -            for (T val : vector)\n'}
[0.800517] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.800545] (igus_rebel) StdoutLine: {'line': b'5: -                msg << val << " ";\n'}
[0.800578] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.800605] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.800632] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.800659] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.800687] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.800714] (-) TimerEvent: {}
[0.800772] (igus_rebel) StdoutLine: {'line': b'5: -        Status::Status(const std::string &messageString) : CriMessage(MessageType::STATUS)\n'}
[0.800807] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.800837] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type modeStart = messageString.find(CriKeywords::STATUS_MODE);\n'}
[0.800867] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posJointSetPointStart = messageString.find(CriKeywords::STATUS_POSJOINTSETPOINT);\n'}
[0.800896] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posJointCurrentStart = messageString.find(CriKeywords::STATUS_POSJOINTCURRENT);\n'}
[0.800926] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posCartRobotStart = messageString.find(CriKeywords::STATUS_POSCARTROBOT);\n'}
[0.800955] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posCartPlattformStart = messageString.find(CriKeywords::STATUS_POSCARTPLATTFORM);\n'}
[0.800983] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type overrideValueStart = messageString.find(CriKeywords::STATUS_OVERRIDE);\n'}
[0.801011] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type dinStart = messageString.find(CriKeywords::STATUS_DIN);\n'}
[0.801039] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type doutStart = messageString.find(CriKeywords::STATUS_DOUT);\n'}
[0.801068] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type eStopStart = messageString.find(CriKeywords::STATUS_ESTOP);\n'}
[0.801096] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type supplyStart = messageString.find(CriKeywords::STATUS_SUPPLY);\n'}
[0.801125] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type currentallStart = messageString.find(CriKeywords::STATUS_CURRENTALL);\n'}
[0.801152] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type currentjointsStart = messageString.find(CriKeywords::STATUS_CURRENTJOINTS);\n'}
[0.801181] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorStart = messageString.find(CriKeywords::STATUS_ERROR);\n'}
[0.801211] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type kinstateStart = messageString.find(CriKeywords::STATUS_KINSTATE);\n'}
[0.801242] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.801270] (igus_rebel) StdoutLine: {'line': b'5: -            if (\n'}
[0.801305] (igus_rebel) StdoutLine: {'line': b'5: -                !(\n'}
[0.801335] (igus_rebel) StdoutLine: {'line': b'5: -                    (modeStart < posJointSetPointStart) &&\n'}
[0.801367] (igus_rebel) StdoutLine: {'line': b'5: -                    (posJointSetPointStart < posJointCurrentStart) &&\n'}
[0.801396] (igus_rebel) StdoutLine: {'line': b'5: -                    (posJointCurrentStart < posCartRobotStart) &&\n'}
[0.801425] (igus_rebel) StdoutLine: {'line': b'5: -                    (posCartRobotStart < posCartPlattformStart) &&\n'}
[0.801453] (igus_rebel) StdoutLine: {'line': b'5: -                    (posCartPlattformStart < overrideValueStart) &&\n'}
[0.801483] (igus_rebel) StdoutLine: {'line': b'5: -                    (overrideValueStart < dinStart) &&\n'}
[0.801512] (igus_rebel) StdoutLine: {'line': b'5: -                    (dinStart < doutStart) &&\n'}
[0.801542] (igus_rebel) StdoutLine: {'line': b'5: -                    (doutStart < eStopStart) &&\n'}
[0.801580] (igus_rebel) StdoutLine: {'line': b'5: -                    (eStopStart < supplyStart) &&\n'}
[0.801610] (igus_rebel) StdoutLine: {'line': b'5: -                    (supplyStart < currentallStart) &&\n'}
[0.801639] (igus_rebel) StdoutLine: {'line': b'5: -                    (currentallStart < currentjointsStart) &&\n'}
[0.801669] (igus_rebel) StdoutLine: {'line': b'5: -                    (currentjointsStart < errorStart) &&\n'}
[0.801699] (igus_rebel) StdoutLine: {'line': b'5: -                    (errorStart < kinstateStart)))\n'}
[0.801727] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.801756] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Bad parsing error for message \\"%s\\"", messageString.c_str());\n'}
[0.801787] (igus_rebel) StdoutLine: {'line': b'5: -                return;\n'}
[0.801817] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.801847] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.801877] (igus_rebel) StdoutLine: {'line': b'5: -            std::string modeString = ParseMessageString(messageString, modeStart, posJointSetPointStart,\n'}
[0.801908] (igus_rebel) StdoutLine: {'line': b"5: +  if (msg.at(0) == ' ') {\n"}
[0.801935] (igus_rebel) StdoutLine: {'line': b'5: +    typeStart = msg.find(" ", 1) + 1;\n'}
[0.801965] (igus_rebel) StdoutLine: {'line': b'5: +  } else {\n'}
[0.801994] (igus_rebel) StdoutLine: {'line': b'5: +    typeStart = msg.find(" ") + 1;\n'}
[0.802022] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.802050] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.802079] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802107] (igus_rebel) StdoutLine: {'line': b'5: +  std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.802135] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802163] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_STATUS) {\n'}
[0.802191] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::STATUS;\n'}
[0.802219] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.802247] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802274] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_OPINFO) {\n'}
[0.802303] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::OPINFO;\n'}
[0.802331] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.802359] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802387] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_GSIG) {\n'}
[0.802415] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::GSIG;\n'}
[0.802443] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.802471] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802499] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_GRIPPERSTATE) {\n'}
[0.802526] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::GRIPPERSTATE;\n'}
[0.802558] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.802590] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802618] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_RUNSTATE) {\n'}
[0.802646] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::RUNSTATE;\n'}
[0.802673] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.802702] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802729] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_MESSAGE) {\n'}
[0.802757] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::MESSAGE;\n'}
[0.802786] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.802814] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802842] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMD) {\n'}
[0.802870] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMD;\n'}
[0.802899] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.802927] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.802959] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CONFIG) {\n'}
[0.802988] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CONFIG;\n'}
[0.803017] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.803045] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803073] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_INFO) {\n'}
[0.803100] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::INFO;\n'}
[0.803128] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.803156] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803183] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_LOGMSG) {\n'}
[0.803210] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::LOGMSG;\n'}
[0.803238] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.803265] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803293] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_VARIABLES) {\n'}
[0.803322] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::VARIABLES;\n'}
[0.803350] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.803377] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803406] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMDERROR) {\n'}
[0.803433] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMDERROR;\n'}
[0.803462] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.803489] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803517] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMDACK) {\n'}
[0.803544] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMDACK;\n'}
[0.803584] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.803612] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803641] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CYCLESTAT) {\n'}
[0.803668] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CYCLESTAT;\n'}
[0.803695] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.803723] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803751] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown message type: \\"%s\\"",\n'}
[0.803779] (igus_rebel) StdoutLine: {'line': b'5: +        typeString.c_str());\n'}
[0.803806] (igus_rebel) StdoutLine: {'line': b'5: +  return MessageType::UNKNOWN;\n'}
[0.803834] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.803861] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.803889] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::ParseMessageString(\n'}
[0.803917] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string & statusString, const std::string::size_type & begin,\n'}
[0.803945] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string::size_type & end, const std::string::size_type & keywordLength)\n'}
[0.803973] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.804001] (igus_rebel) StdoutLine: {'line': b'5: +  int start = begin + keywordLength + 1;\n'}
[0.804033] (igus_rebel) StdoutLine: {'line': b'5: +  int length = end - start - 1;\n'}
[0.804060] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.804087] (igus_rebel) StdoutLine: {'line': b'5: +  return statusString.substr(start, length);\n'}
[0.804115] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.804143] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.804171] (igus_rebel) StdoutLine: {'line': b'5: +template<class T, std::size_t N>\n'}
[0.804199] (igus_rebel) StdoutLine: {'line': b'5: +void CriMessage::FillArray(std::array<T, N> & array, const std::string & spaceSeparatedValues)\n'}
[0.804228] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.804256] (igus_rebel) StdoutLine: {'line': b'5: +  typename std::array<T, N>::size_type idx = 0;\n'}
[0.804284] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type begin = 0;\n'}
[0.804312] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.804341] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.804371] (igus_rebel) StdoutLine: {'line': b'5: +  while (end != std::string::npos) {\n'}
[0.804399] (igus_rebel) StdoutLine: {'line': b'5: +    if (idx >= N) {\n'}
[0.804427] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Parsing error");\n'}
[0.804457] (igus_rebel) StdoutLine: {'line': b'5: +      return;\n'}
[0.804485] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.804514] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.804544] (igus_rebel) StdoutLine: {'line': b'5: +    std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.804582] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.804611] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<float, T>::value) {\n'}
[0.804638] (igus_rebel) StdoutLine: {'line': b'5: +      array.at(idx) = std::stof(value);\n'}
[0.804667] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.804694] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.804721] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<int, T>::value) {\n'}
[0.804749] (igus_rebel) StdoutLine: {'line': b'5: +      array.at(idx) = std::stoi(value);\n'}
[0.804777] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.804804] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.804832] (igus_rebel) StdoutLine: {'line': b'5: +    begin = spaceSeparatedValues.find(" ", end);\n'}
[0.804862] (igus_rebel) StdoutLine: {'line': b'5: +    end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.804891] (igus_rebel) StdoutLine: {'line': b'5: +    idx++;\n'}
[0.804920] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.804949] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.804978] (igus_rebel) StdoutLine: {'line': b'5: +  std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.805008] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805036] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<float, T>::value) {\n'}
[0.805065] (igus_rebel) StdoutLine: {'line': b'5: +    array.at(idx) = std::stof(value);\n'}
[0.805092] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.805120] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805148] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<int, T>::value) {\n'}
[0.805176] (igus_rebel) StdoutLine: {'line': b'5: +    array.at(idx) = std::stoi(value);\n'}
[0.805204] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.805231] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.805259] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805287] (igus_rebel) StdoutLine: {'line': b'5: +template<class T>\n'}
[0.805315] (igus_rebel) StdoutLine: {'line': b'5: +void CriMessage::FillVector(std::vector<T> & vector, const std::string & spaceSeparatedValues)\n'}
[0.805344] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.805372] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type begin = 0;\n'}
[0.805400] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.805430] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805457] (igus_rebel) StdoutLine: {'line': b'5: +  while (end != std::string::npos) {\n'}
[0.805487] (igus_rebel) StdoutLine: {'line': b'5: +    std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.805516] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805545] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<float, T>::value) {\n'}
[0.805580] (igus_rebel) StdoutLine: {'line': b'5: +      vector.push_back(std::stof(value));\n'}
[0.805610] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.805640] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805669] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<int, T>::value) {\n'}
[0.805699] (igus_rebel) StdoutLine: {'line': b'5: +      vector.push_back(std::stoi(value));\n'}
[0.805729] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.805760] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805790] (igus_rebel) StdoutLine: {'line': b'5: +    begin = spaceSeparatedValues.find(" ", end);\n'}
[0.805819] (igus_rebel) StdoutLine: {'line': b'5: +    end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.805848] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.805876] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805904] (igus_rebel) StdoutLine: {'line': b'5: +  std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.805932] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.805960] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<float, T>::value) {\n'}
[0.805989] (igus_rebel) StdoutLine: {'line': b'5: +    vector.push_back(std::stof(value));\n'}
[0.806018] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.806046] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.806074] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<int, T>::value) {\n'}
[0.806103] (igus_rebel) StdoutLine: {'line': b'5: +    vector.push_back(std::stoi(value));\n'}
[0.806131] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.806159] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.806187] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.806214] (igus_rebel) StdoutLine: {'line': b'5: +template<class T, std::size_t N>\n'}
[0.806242] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::ArrayToString(std::array<T, N> & array)\n'}
[0.806269] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.806297] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.806326] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::showpoint;\n'}
[0.806354] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::fixed;\n'}
[0.806383] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.806413] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.806440] (igus_rebel) StdoutLine: {'line': b'5: +  for (T val : array) {\n'}
[0.806468] (igus_rebel) StdoutLine: {'line': b'5: +    msg << val << " ";\n'}
[0.806496] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.806524] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.806557] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.806587] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.806615] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.806644] (igus_rebel) StdoutLine: {'line': b'5: +template<class T>\n'}
[0.806672] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::VectorToString(std::vector<T> & vector)\n'}
[0.806701] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.806732] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.806762] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::showpoint;\n'}
[0.806794] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::fixed;\n'}
[0.806824] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.806855] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.806886] (igus_rebel) StdoutLine: {'line': b'5: +  for (T val : vector) {\n'}
[0.806918] (igus_rebel) StdoutLine: {'line': b'5: +    msg << val << " ";\n'}
[0.806949] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.806979] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.807010] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.807045] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.807077] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.807108] (igus_rebel) StdoutLine: {'line': b'5: +Status::Status(const std::string & messageString)\n'}
[0.807138] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::STATUS)\n'}
[0.807169] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.807197] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type modeStart = messageString.find(CriKeywords::STATUS_MODE);\n'}
[0.807226] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posJointSetPointStart =\n'}
[0.807254] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSJOINTSETPOINT);\n'}
[0.807282] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posJointCurrentStart =\n'}
[0.807310] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSJOINTCURRENT);\n'}
[0.807338] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posCartRobotStart = messageString.find(CriKeywords::STATUS_POSCARTROBOT);\n'}
[0.807367] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posCartPlattformStart =\n'}
[0.807395] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSCARTPLATTFORM);\n'}
[0.807423] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type overrideValueStart = messageString.find(CriKeywords::STATUS_OVERRIDE);\n'}
[0.807451] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type dinStart = messageString.find(CriKeywords::STATUS_DIN);\n'}
[0.807480] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type doutStart = messageString.find(CriKeywords::STATUS_DOUT);\n'}
[0.807508] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type eStopStart = messageString.find(CriKeywords::STATUS_ESTOP);\n'}
[0.807538] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type supplyStart = messageString.find(CriKeywords::STATUS_SUPPLY);\n'}
[0.807577] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type currentallStart = messageString.find(CriKeywords::STATUS_CURRENTALL);\n'}
[0.807610] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type currentjointsStart = messageString.find(CriKeywords::STATUS_CURRENTJOINTS);\n'}
[0.807643] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorStart = messageString.find(CriKeywords::STATUS_ERROR);\n'}
[0.807672] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type kinstateStart = messageString.find(CriKeywords::STATUS_KINSTATE);\n'}
[0.807701] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.807731] (igus_rebel) StdoutLine: {'line': b'5: +  if (\n'}
[0.807762] (igus_rebel) StdoutLine: {'line': b'5: +    !(\n'}
[0.807794] (igus_rebel) StdoutLine: {'line': b'5: +      (modeStart < posJointSetPointStart) &&\n'}
[0.807824] (igus_rebel) StdoutLine: {'line': b'5: +      (posJointSetPointStart < posJointCurrentStart) &&\n'}
[0.807856] (igus_rebel) StdoutLine: {'line': b'5: +      (posJointCurrentStart < posCartRobotStart) &&\n'}
[0.807888] (igus_rebel) StdoutLine: {'line': b'5: +      (posCartRobotStart < posCartPlattformStart) &&\n'}
[0.807918] (igus_rebel) StdoutLine: {'line': b'5: +      (posCartPlattformStart < overrideValueStart) &&\n'}
[0.807948] (igus_rebel) StdoutLine: {'line': b'5: +      (overrideValueStart < dinStart) &&\n'}
[0.807979] (igus_rebel) StdoutLine: {'line': b'5: +      (dinStart < doutStart) &&\n'}
[0.808009] (igus_rebel) StdoutLine: {'line': b'5: +      (doutStart < eStopStart) &&\n'}
[0.808040] (igus_rebel) StdoutLine: {'line': b'5: +      (eStopStart < supplyStart) &&\n'}
[0.808072] (igus_rebel) StdoutLine: {'line': b'5: +      (supplyStart < currentallStart) &&\n'}
[0.808103] (igus_rebel) StdoutLine: {'line': b'5: +      (currentallStart < currentjointsStart) &&\n'}
[0.808135] (igus_rebel) StdoutLine: {'line': b'5: +      (currentjointsStart < errorStart) &&\n'}
[0.808165] (igus_rebel) StdoutLine: {'line': b'5: +      (errorStart < kinstateStart)))\n'}
[0.808198] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.808229] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Bad parsing error for message \\"%s\\"",\n'}
[0.808259] (igus_rebel) StdoutLine: {'line': b'5: +          messageString.c_str());\n'}
[0.808287] (igus_rebel) StdoutLine: {'line': b'5: +    return;\n'}
[0.808316] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.808344] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.808372] (igus_rebel) StdoutLine: {'line': b'5: +  std::string modeString = ParseMessageString(messageString, modeStart, posJointSetPointStart,\n'}
[0.808400] (igus_rebel) StdoutLine: {'line': b'5: @@ -264,11 +241,16 @@\n'}
[0.808430] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posJointSetPointString = ParseMessageString(messageString, posJointSetPointStart,\n'}
[0.808458] (igus_rebel) StdoutLine: {'line': b'5: -                                                                    posJointCurrentStart, CriKeywords::STATUS_POSJOINTSETPOINT.size());\n'}
[0.808487] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posJointCurrentString = ParseMessageString(messageString, posJointCurrentStart,\n'}
[0.808516] (igus_rebel) StdoutLine: {'line': b'5: -                                                                   posCartRobotStart, CriKeywords::STATUS_POSJOINTCURRENT.size());\n'}
[0.808546] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posCartRobotString = ParseMessageString(messageString, posCartRobotStart,\n'}
[0.808580] (igus_rebel) StdoutLine: {'line': b'5: -                                                                posCartPlattformStart, CriKeywords::STATUS_POSCARTROBOT.size());\n'}
[0.808609] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posCartPlattformString = ParseMessageString(messageString, posCartPlattformStart,\n'}
[0.808638] (igus_rebel) StdoutLine: {'line': b'5: -                                                                    overrideValueStart, CriKeywords::STATUS_POSCARTPLATTFORM.size());\n'}
[0.808667] (igus_rebel) StdoutLine: {'line': b'5: -            std::string overrideValueString = ParseMessageString(messageString, overrideValueStart,\n'}
[0.808697] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 dinStart, CriKeywords::STATUS_OVERRIDE.size());\n'}
[0.808727] (igus_rebel) StdoutLine: {'line': b'5: -            std::string dinString = ParseMessageString(messageString, dinStart, doutStart,\n'}
[0.808758] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posJointSetPointString = ParseMessageString(messageString, posJointSetPointStart,\n'}
[0.808789] (igus_rebel) StdoutLine: {'line': b'5: +                                                                    posJointCurrentStart,\n'}
[0.808819] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSJOINTSETPOINT.size());\n'}
[0.808850] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posJointCurrentString = ParseMessageString(messageString, posJointCurrentStart,\n'}
[0.808880] (igus_rebel) StdoutLine: {'line': b'5: +                                                                   posCartRobotStart,\n'}
[0.808914] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSJOINTCURRENT.size());\n'}
[0.808942] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posCartRobotString = ParseMessageString(messageString, posCartRobotStart,\n'}
[0.808971] (igus_rebel) StdoutLine: {'line': b'5: +                                                                posCartPlattformStart,\n'}
[0.808999] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSCARTROBOT.size());\n'}
[0.809029] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posCartPlattformString = ParseMessageString(messageString, posCartPlattformStart,\n'}
[0.809059] (igus_rebel) StdoutLine: {'line': b'5: +                                                                    overrideValueStart,\n'}
[0.809088] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSCARTPLATTFORM.size());\n'}
[0.809116] (igus_rebel) StdoutLine: {'line': b'5: +  std::string overrideValueString = ParseMessageString(messageString, overrideValueStart,\n'}
[0.809144] (igus_rebel) StdoutLine: {'line': b'5: +                                                                 dinStart,\n'}
[0.809172] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_OVERRIDE.size());\n'}
[0.809199] (igus_rebel) StdoutLine: {'line': b'5: +  std::string dinString = ParseMessageString(messageString, dinStart, doutStart,\n'}
[0.809226] (igus_rebel) StdoutLine: {'line': b'5: @@ -276 +258 @@\n'}
[0.809254] (igus_rebel) StdoutLine: {'line': b'5: -            std::string doutString = ParseMessageString(messageString, doutStart, eStopStart,\n'}
[0.809284] (igus_rebel) StdoutLine: {'line': b'5: +  std::string doutString = ParseMessageString(messageString, doutStart, eStopStart,\n'}
[0.809313] (igus_rebel) StdoutLine: {'line': b'5: @@ -278 +260 @@\n'}
[0.809342] (igus_rebel) StdoutLine: {'line': b'5: -            std::string eStopString = ParseMessageString(messageString, eStopStart, supplyStart,\n'}
[0.809372] (igus_rebel) StdoutLine: {'line': b'5: +  std::string eStopString = ParseMessageString(messageString, eStopStart, supplyStart,\n'}
[0.809401] (igus_rebel) StdoutLine: {'line': b'5: @@ -280 +262 @@\n'}
[0.809430] (igus_rebel) StdoutLine: {'line': b'5: -            std::string supplyString = ParseMessageString(messageString, supplyStart, currentallStart,\n'}
[0.809460] (igus_rebel) StdoutLine: {'line': b'5: +  std::string supplyString = ParseMessageString(messageString, supplyStart, currentallStart,\n'}
[0.809489] (igus_rebel) StdoutLine: {'line': b'5: @@ -282 +264,2 @@\n'}
[0.809518] (igus_rebel) StdoutLine: {'line': b'5: -            std::string currentallString = ParseMessageString(messageString, currentallStart, currentjointsStart,\n'}
[0.809551] (igus_rebel) StdoutLine: {'line': b'5: +  std::string currentallString = ParseMessageString(messageString, currentallStart,\n'}
[0.809583] (igus_rebel) StdoutLine: {'line': b'5: +        currentjointsStart,\n'}
[0.809612] (igus_rebel) StdoutLine: {'line': b'5: @@ -284,3 +267,5 @@\n'}
[0.809640] (igus_rebel) StdoutLine: {'line': b'5: -            std::string currentjointsString = ParseMessageString(messageString, currentjointsStart, errorStart,\n'}
[0.809669] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 CriKeywords::STATUS_CURRENTJOINTS.size());\n'}
[0.809699] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorString = ParseMessageString(messageString, errorStart, kinstateStart,\n'}
[0.809728] (igus_rebel) StdoutLine: {'line': b'5: +  std::string currentjointsString = ParseMessageString(messageString, currentjointsStart,\n'}
[0.809759] (igus_rebel) StdoutLine: {'line': b'5: +        errorStart,\n'}
[0.809790] (igus_rebel) StdoutLine: {'line': b'5: +                                                                 CriKeywords::STATUS_CURRENTJOINTS.\n'}
[0.809821] (igus_rebel) StdoutLine: {'line': b'5: +      size());\n'}
[0.809851] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorString = ParseMessageString(messageString, errorStart, kinstateStart,\n'}
[0.809882] (igus_rebel) StdoutLine: {'line': b'5: @@ -288 +273,2 @@\n'}
[0.809913] (igus_rebel) StdoutLine: {'line': b'5: -            std::string kinstateString = ParseMessageString(messageString, kinstateStart, messageString.size() + 1,\n'}
[0.809943] (igus_rebel) StdoutLine: {'line': b'5: +  std::string kinstateString = ParseMessageString(messageString, kinstateStart,\n'}
[0.809971] (igus_rebel) StdoutLine: {'line': b'5: +        messageString.size() + 1,\n'}
[0.809999] (igus_rebel) StdoutLine: {'line': b'5: @@ -291,20 +277,20 @@\n'}
[0.810030] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorSummaryEnd = errorString.find(" ");\n'}
[0.810057] (igus_rebel) StdoutLine: {'line': b'5: -            errorSummary = errorString.substr(0, errorSummaryEnd);\n'}
[0.810086] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorJointsString = errorString.substr(errorSummaryEnd + 1);\n'}
[0.810113] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810141] (igus_rebel) StdoutLine: {'line': b'5: -            mode = GetMode(modeString);\n'}
[0.810168] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posJointSetPoint, posJointSetPointString);\n'}
[0.810196] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posJointCurrent, posJointCurrentString);\n'}
[0.810224] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posCartRobot, posCartRobotString);\n'}
[0.810251] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posCartPlattform, posCartPlattformString);\n'}
[0.810278] (igus_rebel) StdoutLine: {'line': b'5: -            try {\n'}
[0.810305] (igus_rebel) StdoutLine: {'line': b'5: -                overrideValue = std::stof(overrideValueString);\n'}
[0.810332] (igus_rebel) StdoutLine: {'line': b'5: -                din = std::stoi(dinString);     // TODO: Process further to actual meaning\n'}
[0.810359] (igus_rebel) StdoutLine: {'line': b'5: -                dout = std::stoi(doutString);   // TODO: Process further to actual meaning\n'}
[0.810386] (igus_rebel) StdoutLine: {'line': b'5: -                eStop = std::stoi(eStopString); // TODO: Process further to actual meaning\n'}
[0.810414] (igus_rebel) StdoutLine: {'line': b'5: -                supply = std::stoi(supplyString);\n'}
[0.810442] (igus_rebel) StdoutLine: {'line': b'5: -                currentall = std::stoi(currentallString);\n'}
[0.810468] (igus_rebel) StdoutLine: {'line': b'5: -            } catch (const std::invalid_argument &e) {\n'}
[0.810495] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing status message: %s", e.what());\n'}
[0.810523] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.810553] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(currentjoints, currentjointsString);\n'}
[0.810585] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorSummaryEnd = errorString.find(" ");\n'}
[0.810612] (igus_rebel) StdoutLine: {'line': b'5: +  errorSummary = errorString.substr(0, errorSummaryEnd);\n'}
[0.810639] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorJointsString = errorString.substr(errorSummaryEnd + 1);\n'}
[0.810667] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.810694] (igus_rebel) StdoutLine: {'line': b'5: +  mode = GetMode(modeString);\n'}
[0.810723] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posJointSetPoint, posJointSetPointString);\n'}
[0.810753] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posJointCurrent, posJointCurrentString);\n'}
[0.810782] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posCartRobot, posCartRobotString);\n'}
[0.810813] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posCartPlattform, posCartPlattformString);\n'}
[0.810843] (igus_rebel) StdoutLine: {'line': b'5: +  try {\n'}
[0.810873] (igus_rebel) StdoutLine: {'line': b'5: +    overrideValue = std::stof(overrideValueString);\n'}
[0.810903] (igus_rebel) StdoutLine: {'line': b'5: +    din = std::stoi(dinString);                 // TODO: Process further to actual meaning\n'}
[0.810934] (igus_rebel) StdoutLine: {'line': b'5: +    dout = std::stoi(doutString);               // TODO: Process further to actual meaning\n'}
[0.810963] (igus_rebel) StdoutLine: {'line': b'5: +    eStop = std::stoi(eStopString);             // TODO: Process further to actual meaning\n'}
[0.810991] (igus_rebel) StdoutLine: {'line': b'5: +    supply = std::stoi(supplyString);\n'}
[0.811019] (igus_rebel) StdoutLine: {'line': b'5: +    currentall = std::stoi(currentallString);\n'}
[0.811049] (igus_rebel) StdoutLine: {'line': b'5: +  } catch (const std::invalid_argument & e) {\n'}
[0.811076] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing status message: %s", e.what());\n'}
[0.811104] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.811132] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(currentjoints, currentjointsString);\n'}
[0.811159] (igus_rebel) StdoutLine: {'line': b'5: @@ -312,59 +298,60 @@\n'}
[0.811186] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(errorJoints, errorJointsString); // TODO: Process further to actual meaning\n'}
[0.811214] (igus_rebel) StdoutLine: {'line': b'5: -            kinstate = GetKinstate(kinstateString);\n'}
[0.811241] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.811268] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811294] (igus_rebel) StdoutLine: {'line': b'5: -        Status::Status() : CriMessage(MessageType::STATUS)\n'}
[0.811322] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.811349] (igus_rebel) StdoutLine: {'line': b'5: -            mode = Mode::UNKNOWN;\n'}
[0.811376] (igus_rebel) StdoutLine: {'line': b'5: -            posJointSetPoint.fill(0.0f);\n'}
[0.811403] (igus_rebel) StdoutLine: {'line': b'5: -            posJointCurrent.fill(0.0f);\n'}
[0.811430] (igus_rebel) StdoutLine: {'line': b'5: -            posCartRobot.fill(0.0f);\n'}
[0.811458] (igus_rebel) StdoutLine: {'line': b'5: -            posCartPlattform.fill(0.0f);\n'}
[0.811484] (igus_rebel) StdoutLine: {'line': b'5: -            overrideValue = 0.0f;\n'}
[0.811511] (igus_rebel) StdoutLine: {'line': b'5: -            din = 0;\n'}
[0.811539] (igus_rebel) StdoutLine: {'line': b'5: -            dout = 0;\n'}
[0.811576] (igus_rebel) StdoutLine: {'line': b'5: -            eStop = 0;\n'}
[0.811605] (igus_rebel) StdoutLine: {'line': b'5: -            supply = 0;\n'}
[0.811632] (igus_rebel) StdoutLine: {'line': b'5: -            currentall = 0;\n'}
[0.811660] (igus_rebel) StdoutLine: {'line': b'5: -            currentjoints.fill(0);\n'}
[0.811687] (igus_rebel) StdoutLine: {'line': b'5: -            errorSummary = "NotInitialized";\n'}
[0.811715] (igus_rebel) StdoutLine: {'line': b'5: -            errorJoints.fill(0);\n'}
[0.811742] (igus_rebel) StdoutLine: {'line': b'5: -            kinstate = Kinstate::UNKNOWN;\n'}
[0.811769] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.811796] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811824] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Status::ModeToString(const Mode &mode)\n'}
[0.811852] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.811880] (igus_rebel) StdoutLine: {'line': b'5: -            switch (mode)\n'}
[0.811908] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.811936] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::JOINT:\n'}
[0.811963] (igus_rebel) StdoutLine: {'line': b'5: -                return "Joint";\n'}
[0.811991] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::CARTBASE:\n'}
[0.812018] (igus_rebel) StdoutLine: {'line': b'5: -                return "Cartesian (base)";\n'}
[0.812046] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::CARTTOOL:\n'}
[0.812074] (igus_rebel) StdoutLine: {'line': b'5: -                return "Cartesian (tool)";\n'}
[0.812102] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::PLATFORM:\n'}
[0.812130] (igus_rebel) StdoutLine: {'line': b'5: -                return "Platform";\n'}
[0.812157] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::FSM:\n'}
[0.812185] (igus_rebel) StdoutLine: {'line': b'5: -                return "FSM";\n'}
[0.812213] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::UNKNOWN:\n'}
[0.812241] (igus_rebel) StdoutLine: {'line': b'5: -                return "Unknown";\n'}
[0.812269] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.812296] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812324] (igus_rebel) StdoutLine: {'line': b'5: -            return std::string();\n'}
[0.812351] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.812378] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812404] (igus_rebel) StdoutLine: {'line': b'5: -        void Status::Print()\n'}
[0.812431] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.812461] (igus_rebel) StdoutLine: {'line': b'5: -            std::cout << ToString();\n'}
[0.812488] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.812515] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812542] (igus_rebel) StdoutLine: {'line': b'5: -        void Status::Log()\n'}
[0.812574] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.812602] (igus_rebel) StdoutLine: {'line': b'5: -            rclcpp::Clock::SharedPtr clock_ = std::make_shared<rclcpp::Clock>(RCL_SYSTEM_TIME);\n'}
[0.812630] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *clock_, 60, "Rebel status:\\n%s", ToString().c_str());\n'}
[0.812658] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.812686] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.812713] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Status::ToString()\n'}
[0.812740] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.812768] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.812794] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint\n'}
[0.812821] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(errorJoints, errorJointsString);           // TODO: Process further to actual meaning\n'}
[0.812849] (igus_rebel) StdoutLine: {'line': b'5: +  kinstate = GetKinstate(kinstateString);\n'}
[0.812878] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.812905] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812933] (igus_rebel) StdoutLine: {'line': b'5: +Status::Status()\n'}
[0.812961] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::STATUS)\n'}
[0.812989] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.813017] (igus_rebel) StdoutLine: {'line': b'5: +  mode = Mode::UNKNOWN;\n'}
[0.813045] (igus_rebel) StdoutLine: {'line': b'5: +  posJointSetPoint.fill(0.0f);\n'}
[0.813072] (igus_rebel) StdoutLine: {'line': b'5: +  posJointCurrent.fill(0.0f);\n'}
[0.813099] (igus_rebel) StdoutLine: {'line': b'5: +  posCartRobot.fill(0.0f);\n'}
[0.813126] (igus_rebel) StdoutLine: {'line': b'5: +  posCartPlattform.fill(0.0f);\n'}
[0.813154] (igus_rebel) StdoutLine: {'line': b'5: +  overrideValue = 0.0f;\n'}
[0.813181] (igus_rebel) StdoutLine: {'line': b'5: +  din = 0;\n'}
[0.813210] (igus_rebel) StdoutLine: {'line': b'5: +  dout = 0;\n'}
[0.813239] (igus_rebel) StdoutLine: {'line': b'5: +  eStop = 0;\n'}
[0.813267] (igus_rebel) StdoutLine: {'line': b'5: +  supply = 0;\n'}
[0.813295] (igus_rebel) StdoutLine: {'line': b'5: +  currentall = 0;\n'}
[0.813323] (igus_rebel) StdoutLine: {'line': b'5: +  currentjoints.fill(0);\n'}
[0.813351] (igus_rebel) StdoutLine: {'line': b'5: +  errorSummary = "NotInitialized";\n'}
[0.813378] (igus_rebel) StdoutLine: {'line': b'5: +  errorJoints.fill(0);\n'}
[0.813406] (igus_rebel) StdoutLine: {'line': b'5: +  kinstate = Kinstate::UNKNOWN;\n'}
[0.813433] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.813461] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813488] (igus_rebel) StdoutLine: {'line': b'5: +std::string Status::ModeToString(const Mode & mode)\n'}
[0.813515] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.813542] (igus_rebel) StdoutLine: {'line': b'5: +  switch (mode) {\n'}
[0.813575] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::JOINT:\n'}
[0.813603] (igus_rebel) StdoutLine: {'line': b'5: +      return "Joint";\n'}
[0.813630] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::CARTBASE:\n'}
[0.813657] (igus_rebel) StdoutLine: {'line': b'5: +      return "Cartesian (base)";\n'}
[0.813685] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::CARTTOOL:\n'}
[0.813712] (igus_rebel) StdoutLine: {'line': b'5: +      return "Cartesian (tool)";\n'}
[0.813742] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::PLATFORM:\n'}
[0.813769] (igus_rebel) StdoutLine: {'line': b'5: +      return "Platform";\n'}
[0.813795] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::FSM:\n'}
[0.813823] (igus_rebel) StdoutLine: {'line': b'5: +      return "FSM";\n'}
[0.813850] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::UNKNOWN:\n'}
[0.813879] (igus_rebel) StdoutLine: {'line': b'5: +      return "Unknown";\n'}
[0.813906] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.813934] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813962] (igus_rebel) StdoutLine: {'line': b'5: +  return std::string();\n'}
[0.813990] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.814017] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814044] (igus_rebel) StdoutLine: {'line': b'5: +void Status::Print()\n'}
[0.814072] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.814100] (igus_rebel) StdoutLine: {'line': b'5: +  std::cout << ToString();\n'}
[0.814128] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.814155] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814182] (igus_rebel) StdoutLine: {'line': b'5: +void Status::Log()\n'}
[0.814210] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.814237] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Clock::SharedPtr clock_ = std::make_shared<rclcpp::Clock>(RCL_SYSTEM_TIME);\n'}
[0.814264] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *clock_, 60, "Rebel status:\\n%s",\n'}
[0.814292] (igus_rebel) StdoutLine: {'line': b'5: +        ToString().c_str());\n'}
[0.814320] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.814347] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814374] (igus_rebel) StdoutLine: {'line': b'5: +std::string Status::ToString()\n'}
[0.814402] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.814429] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.814456] (igus_rebel) StdoutLine: {'line': b'5: +  msg           << std::showpoint\n'}
[0.814484] (igus_rebel) StdoutLine: {'line': b'5: @@ -390,303 +377,175 @@\n'}
[0.814511] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.814538] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.814570] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814598] (igus_rebel) StdoutLine: {'line': b'5: -        Mode Status::GetMode(const std::string &modeString)\n'}
[0.814626] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.814654] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_JOINT)\n'}
[0.814682] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.814710] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::JOINT;\n'}
[0.814739] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.814767] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814797] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_CARTBASE)\n'}
[0.814826] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.814855] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::CARTBASE;\n'}
[0.814883] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.814911] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.814939] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_CARTTOOL)\n'}
[0.814966] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.814993] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::CARTTOOL;\n'}
[0.815021] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.815048] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815076] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_PLATFORM)\n'}
[0.815105] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.815133] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::PLATFORM;\n'}
[0.815162] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.815188] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815216] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_FSM)\n'}
[0.815244] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.815271] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::FSM;\n'}
[0.815299] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.815327] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815353] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown robot mode during parsing: %s", modeString.c_str());\n'}
[0.815382] (igus_rebel) StdoutLine: {'line': b'5: -            return Mode::UNKNOWN;\n'}
[0.815409] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.815436] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815463] (igus_rebel) StdoutLine: {'line': b'5: -        Kinstate Status::GetKinstate(const std::string &kinstateString)\n'}
[0.815491] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.815518] (igus_rebel) StdoutLine: {'line': b'5: -            int kinstateInt = std::stoi(kinstateString);\n'}
[0.815545] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815580] (igus_rebel) StdoutLine: {'line': b'5: -            switch (kinstateInt)\n'}
[0.815609] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.815636] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::NO_ERROR:\n'}
[0.815665] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::NO_ERROR;\n'}
[0.815693] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815722] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::JOINT_LIMIT_MIN:\n'}
[0.815751] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::JOINT_LIMIT_MIN;\n'}
[0.815779] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815807] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::JOINT_LIMIT_MAX:\n'}
[0.815835] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::JOINT_LIMIT_MAX;\n'}
[0.815864] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815891] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.815922] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_CENTER;\n'}
[0.815951] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.815979] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.816008] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_REACH;\n'}
[0.816037] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816065] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.816094] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_WRIST;\n'}
[0.816122] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816149] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.816177] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1;\n'}
[0.816206] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816235] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.816265] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2;\n'}
[0.816294] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816322] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.816352] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3;\n'}
[0.816380] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816408] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.816437] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4;\n'}
[0.816466] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816494] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.816522] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5;\n'}
[0.816555] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816585] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.816616] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6;\n'}
[0.816645] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816673] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.816702] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::MOTION_NOT_ALLOWED;\n'}
[0.816730] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816758] (igus_rebel) StdoutLine: {'line': b'5: -            default:\n'}
[0.816787] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::UNKNOWN;\n'}
[0.816815] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.816843] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.816871] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.816900] (igus_rebel) StdoutLine: {'line': b'5: -        Message::Message(const std::string &messageString) : CriMessage(MessageType::MESSAGE)\n'}
[0.816929] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.816957] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type messageStart =\n'}
[0.816986] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_MESSAGE) + CriKeywords::TYPE_MESSAGE.size() + 1;\n'}
[0.817015] (igus_rebel) StdoutLine: {'line': b'5: -            message = messageString.substr(messageStart);\n'}
[0.817044] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.817072] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.817101] (igus_rebel) StdoutLine: {'line': b'5: -        Command::Command(const std::string &messageString) : CriMessage(MessageType::CMD)\n'}
[0.817132] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.817160] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandStart =\n'}
[0.817188] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_CMD) + CriKeywords::TYPE_CMD.size() + 1;\n'}
[0.817217] (igus_rebel) StdoutLine: {'line': b'5: -            command = messageString.substr(commandStart);\n'}
[0.817245] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.817272] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.817301] (igus_rebel) StdoutLine: {'line': b'5: -        Info::Info(const std::string &messageString) : CriMessage(MessageType::INFO)\n'}
[0.817328] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.817355] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type infoStart =\n'}
[0.817383] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_INFO) + CriKeywords::TYPE_INFO.size() + 1;\n'}
[0.817410] (igus_rebel) StdoutLine: {'line': b'5: -            info = messageString.substr(infoStart);\n'}
[0.817438] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.817465] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.817493] (igus_rebel) StdoutLine: {'line': b'5: -        LogMsg::LogMsg(const std::string &messageString) : CriMessage(MessageType::LOGMSG)\n'}
[0.817522] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.817552] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type logLvlStart = messageString.find(CriKeywords::TYPE_LOGMSG) + CriKeywords::TYPE_LOGMSG.size() + 1;\n'}
[0.817582] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type timestampStart = messageString.find(" ", logLvlStart) + 1;\n'}
[0.817610] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type msgStart = messageString.find(" ", timestampStart) + 1;\n'}
[0.817638] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.817665] (igus_rebel) StdoutLine: {'line': b'5: -            logLevel = GetLogLevel(messageString.substr(logLvlStart, (timestampStart - logLvlStart - 1)));\n'}
[0.817693] (igus_rebel) StdoutLine: {'line': b'5: -            timestamp = std::stol(messageString.substr(timestampStart, (msgStart - timestampStart - 1)));\n'}
[0.817721] (igus_rebel) StdoutLine: {'line': b'5: -            logMsg = messageString.substr(msgStart);\n'}
[0.817751] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.817779] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.817807] (igus_rebel) StdoutLine: {'line': b'5: -        LogLevel LogMsg::GetLogLevel(const std::string &logLvlString)\n'}
[0.817835] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.817863] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_DEBUG)\n'}
[0.817891] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.817918] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::DEBUG;\n'}
[0.817946] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.817974] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.818001] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_APP_INFO)\n'}
[0.818031] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.818059] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::APP_INFO;\n'}
[0.818087] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.818115] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.818143] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_APP_ERROR)\n'}
[0.818171] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.818199] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::APP_ERROR;\n'}
[0.818226] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.818254] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.818280] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_INFO)\n'}
[0.818307] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.818334] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::INFO;\n'}
[0.818362] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.818389] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.818417] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_WARN)\n'}
[0.818447] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.818476] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::WARN;\n'}
[0.818505] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.818533] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.818565] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_ERROR)\n'}
[0.818596] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.818625] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::ERROR;\n'}
[0.818655] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.818682] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.818710] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_FATAL)\n'}
[0.818737] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.818765] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::FATAL;\n'}
[0.818793] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.818821] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.818849] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown log level during parsing: %s", logLvlString.c_str());\n'}
[0.818879] (igus_rebel) StdoutLine: {'line': b'5: -            return LogLevel::UNKNOWN;\n'}
[0.818907] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.818934] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.818963] (igus_rebel) StdoutLine: {'line': b'5: -        Variables::Variables(const std::string &messageString) : CriMessage(MessageType::VARIABLES),\n'}
[0.818991] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 numberVariables(),\n'}
[0.819020] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 positionVariables()\n'}
[0.819048] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.819079] (igus_rebel) StdoutLine: {'line': b'5: -            std::regex variables_regex("\\\\S+");\n'}
[0.819107] (igus_rebel) StdoutLine: {'line': b'5: -            auto variables_begin = std::sregex_iterator(messageString.begin(), messageString.end(), variables_regex);\n'}
[0.819135] (igus_rebel) StdoutLine: {'line': b'5: -            auto variables_end = std::sregex_iterator();\n'}
[0.819162] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819190] (igus_rebel) StdoutLine: {'line': b'5: -            std::sregex_iterator it = variables_begin;\n'}
[0.819218] (igus_rebel) StdoutLine: {'line': b'5: -            while (it != variables_end)\n'}
[0.819247] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.819274] (igus_rebel) StdoutLine: {'line': b'5: -                std::string matchStr = GetMatchString((*it));\n'}
[0.819303] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819330] (igus_rebel) StdoutLine: {'line': b'5: -                if (matchStr.compare(CriKeywords::VARIABLES_NR_VARIABLE) == 0)\n'}
[0.819358] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.819386] (igus_rebel) StdoutLine: {'line': b'5: -                    NumberVariable nv;\n'}
[0.819414] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819441] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.819468] (igus_rebel) StdoutLine: {'line': b'5: -                    nv.name = GetMatchString(*it);\n'}
[0.819495] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819522] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.819552] (igus_rebel) StdoutLine: {'line': b'5: -                    nv.value = std::stod(GetMatchString(*it));\n'}
[0.819582] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819610] (igus_rebel) StdoutLine: {'line': b'5: -                    numberVariables.push_back(nv);\n'}
[0.819638] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.819665] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819692] (igus_rebel) StdoutLine: {'line': b'5: -                if (matchStr.compare(CriKeywords::VARIABLES_POS_VARIABLE) == 0)\n'}
[0.819720] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.819751] (igus_rebel) StdoutLine: {'line': b'5: -                    PositionVariable pv;\n'}
[0.819781] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819810] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.819840] (igus_rebel) StdoutLine: {'line': b'5: -                    pv.name = GetMatchString(*it);\n'}
[0.819876] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819909] (igus_rebel) StdoutLine: {'line': b'5: -                    for (auto i = 0; i < 15; i++)\n'}
[0.819939] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.819967] (igus_rebel) StdoutLine: {'line': b'5: -                        it++;\n'}
[0.819997] (igus_rebel) StdoutLine: {'line': b'5: -                        pv.values[i] = std::stod(GetMatchString(*it));\n'}
[0.820028] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.820056] (igus_rebel) StdoutLine: {'line': b'5: -                    positionVariables.push_back(pv);\n'}
[0.820083] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.820111] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.820139] (igus_rebel) StdoutLine: {'line': b'5: -                it++;\n'}
[0.820167] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.820194] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.820220] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.820247] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Variables::GetMatchString(const std::smatch &smatch)\n'}
[0.820274] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.820302] (igus_rebel) StdoutLine: {'line': b'5: -            std::string matchStr = smatch.str();\n'}
[0.820330] (igus_rebel) StdoutLine: {'line': b"5: -            if (matchStr.length() > 0 && matchStr.back() == ',')\n"}
[0.820357] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.820386] (igus_rebel) StdoutLine: {'line': b'5: -                matchStr.pop_back();\n'}
[0.820415] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.820443] (igus_rebel) StdoutLine: {'line': b'5: -            return matchStr;\n'}
[0.820470] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.820497] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.820523] (igus_rebel) StdoutLine: {'line': b'5: -        CmdError::CmdError(const std::string &messageString) : CriMessage(MessageType::CMDERROR)\n'}
[0.820557] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.820592] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandErrorStart = messageString.find(CriKeywords::TYPE_CMDERROR) + CriKeywords::TYPE_CMDERROR.size();\n'}
[0.820621] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type countStart = messageString.find(" ", commandErrorStart) + 1;\n'}
[0.820648] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorMsgStart = messageString.find(" ", countStart) + 1;\n'}
[0.820677] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.820705] (igus_rebel) StdoutLine: {'line': b'5: -            recjectedCmd = std::stoi(messageString.substr(countStart, errorMsgStart - countStart - 1));\n'}
[0.820734] (igus_rebel) StdoutLine: {'line': b'5: -            error = messageString.substr(errorMsgStart);\n'}
[0.820764] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.820792] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.820821] (igus_rebel) StdoutLine: {'line': b'5: -        CmdAck::CmdAck(const std::string &messageString) : CriMessage(MessageType::CMDACK)\n'}
[0.820851] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.820880] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandAckStart = messageString.find(CriKeywords::TYPE_CMDACK) + CriKeywords::TYPE_CMDACK.size();\n'}
[0.820910] (igus_rebel) StdoutLine: {'line': b'5: -            acceptedCmd = std::stoi(messageString.substr(commandAckStart));\n'}
[0.820940] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.820968] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.820995] (igus_rebel) StdoutLine: {'line': b'5: -        Cyclestat::Cyclestat(const std::string &messageString) : CriMessage(MessageType::CYCLESTAT)\n'}
[0.821025] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.821053] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type cyclestatStart = messageString.find(CriKeywords::TYPE_CYCLESTAT) + CriKeywords::TYPE_CYCLESTAT.size();\n'}
[0.821082] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type cycletimeStart = messageString.find(" ", cyclestatStart) + 1;\n'}
[0.821110] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type workloadStart = messageString.find(" ", cycletimeStart) + 1;\n'}
[0.821139] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821167] (igus_rebel) StdoutLine: {'line': b'5: -            cycletime = std::stoi(messageString.substr(cycletimeStart, workloadStart - cycletimeStart));\n'}
[0.821196] (igus_rebel) StdoutLine: {'line': b'5: -            workload = std::stoi(messageString.substr(workloadStart));\n'}
[0.821225] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.821254] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821283] (igus_rebel) StdoutLine: {'line': b'5: -        ConfigType Config::GetConfigType(const std::string &msg)\n'}
[0.821313] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.821340] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeStart = msg.find(" ") + 1;\n'}
[0.821370] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.821399] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821427] (igus_rebel) StdoutLine: {'line': b'5: -            std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.821455] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821483] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString != CriKeywords::TYPE_CONFIG)\n'}
[0.821513] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.821541] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Got message to parse for config data that was not a config message.");\n'}
[0.821576] (igus_rebel) StdoutLine: {'line': b'5: -                return ConfigType::UNKNOWN;\n'}
[0.821606] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.821636] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821665] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type configTypeStart = typeEnd + 1;\n'}
[0.821694] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type configTypeEnd = msg.find(" ", configTypeStart + 1);\n'}
[0.821723] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821752] (igus_rebel) StdoutLine: {'line': b'5: -            std::string configTypeString = msg.substr(configTypeStart, configTypeEnd - configTypeStart);\n'}
[0.821781] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821807] (igus_rebel) StdoutLine: {'line': b'5: -            if (configTypeString == CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER)\n'}
[0.821835] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.821863] (igus_rebel) StdoutLine: {'line': b'5: -                return ConfigType::KINEMATICLIMITS;\n'}
[0.821893] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.821922] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821952] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config type: \\"%s\\"", configTypeString.c_str());\n'}
[0.821982] (igus_rebel) StdoutLine: {'line': b'5: -            return ConfigType::UNKNOWN;\n'}
[0.822012] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.822041] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.822069] (igus_rebel) StdoutLine: {'line': b'5: -        KinematicLimits::KinematicLimits(const std::string &messageString) : Config(ConfigType::KINEMATICLIMITS)\n'}
[0.822099] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.822128] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type answerStart = messageString.find(CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER);\n'}
[0.822158] (igus_rebel) StdoutLine: {'line': b'5: -            answerStart += CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER.size() + 1;\n'}
[0.822187] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.822215] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<float> minMax;\n'}
[0.822243] (igus_rebel) StdoutLine: {'line': b'5: -            FillVector(minMax, messageString.substr(answerStart));\n'}
[0.822275] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.822303] (igus_rebel) StdoutLine: {'line': b'5: -            if (minMax.size() % 2 != 0)\n'}
[0.822330] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.822358] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing config message of type %d", (int)configType);\n'}
[0.822386] (igus_rebel) StdoutLine: {'line': b'5: -                return;\n'}
[0.822419] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.822448] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.822478] (igus_rebel) StdoutLine: {'line': b'5: -            for (size_t i = 0; i < minMax.size(); i += 2)\n'}
[0.822508] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.822536] (igus_rebel) StdoutLine: {'line': b'5: -                minMaxPairs.push_back(std::pair<float, float>(minMax.at(i), minMax.at(i + 1)));\n'}
[0.822572] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.822601] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.822631] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.822660] (igus_rebel) StdoutLine: {'line': b'5: -        std::string KinematicLimits::ToString()\n'}
[0.822689] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.822717] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.822745] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.822775] (igus_rebel) StdoutLine: {'line': b'5: -            for (size_t i = 0; i < minMaxPairs.size() - 1; i++)\n'}
[0.822803] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.822831] (igus_rebel) StdoutLine: {'line': b'5: -                msg << "(" << minMaxPairs.at(i).first << ", " << minMaxPairs.at(i).second << ") ";\n'}
[0.822861] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.822890] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.822919] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "(" << minMaxPairs.at(minMaxPairs.size() - 1).first << ", " << minMaxPairs.at(minMaxPairs.size() - 1).second << ")";\n'}
[0.822948] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.822977] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.823005] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.823033] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.823060] (igus_rebel) StdoutLine: {'line': b'5: -        void KinematicLimits::Print()\n'}
[0.823088] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.823116] (igus_rebel) StdoutLine: {'line': b'5: -            std::cout << "Kinematic limits: " << ToString() << std::endl;\n'}
[0.823144] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.823173] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.823201] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.823229] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823257] (igus_rebel) StdoutLine: {'line': b'5: +Mode Status::GetMode(const std::string & modeString)\n'}
[0.823284] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.823312] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_JOINT) {\n'}
[0.823339] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::JOINT;\n'}
[0.823366] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.823394] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823421] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_CARTBASE) {\n'}
[0.823450] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::CARTBASE;\n'}
[0.823478] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.823506] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823533] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_CARTTOOL) {\n'}
[0.823565] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::CARTTOOL;\n'}
[0.823593] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.823621] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823649] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_PLATFORM) {\n'}
[0.823677] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::PLATFORM;\n'}
[0.823705] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.823732] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823760] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_FSM) {\n'}
[0.823787] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::FSM;\n'}
[0.823814] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.823841] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823868] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown robot mode during parsing: %s",\n'}
[0.823896] (igus_rebel) StdoutLine: {'line': b'5: +        modeString.c_str());\n'}
[0.823923] (igus_rebel) StdoutLine: {'line': b'5: +  return Mode::UNKNOWN;\n'}
[0.823951] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.823978] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824007] (igus_rebel) StdoutLine: {'line': b'5: +Kinstate Status::GetKinstate(const std::string & kinstateString)\n'}
[0.824035] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.824062] (igus_rebel) StdoutLine: {'line': b'5: +  int kinstateInt = std::stoi(kinstateString);\n'}
[0.824090] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824117] (igus_rebel) StdoutLine: {'line': b'5: +  switch (kinstateInt) {\n'}
[0.824144] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::NO_ERROR:\n'}
[0.824172] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::NO_ERROR;\n'}
[0.824203] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824231] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::JOINT_LIMIT_MIN:\n'}
[0.824260] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::JOINT_LIMIT_MIN;\n'}
[0.824288] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824316] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::JOINT_LIMIT_MAX:\n'}
[0.824343] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::JOINT_LIMIT_MAX;\n'}
[0.824371] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824399] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.824427] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_CENTER;\n'}
[0.824455] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824482] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.824510] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_REACH;\n'}
[0.824537] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824570] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.824598] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_WRIST;\n'}
[0.824625] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824653] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.824681] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1;\n'}
[0.824709] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824736] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.824763] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2;\n'}
[0.824790] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824818] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.824845] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3;\n'}
[0.824872] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824899] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.824927] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4;\n'}
[0.824955] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.824982] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.825010] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5;\n'}
[0.825038] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825065] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.825092] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6;\n'}
[0.825120] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825147] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.825175] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::MOTION_NOT_ALLOWED;\n'}
[0.825204] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825232] (igus_rebel) StdoutLine: {'line': b'5: +    default:\n'}
[0.825260] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::UNKNOWN;\n'}
[0.825287] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.825315] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.825342] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825370] (igus_rebel) StdoutLine: {'line': b'5: +Message::Message(const std::string & messageString)\n'}
[0.825398] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::MESSAGE)\n'}
[0.825425] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.825452] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type messageStart =\n'}
[0.825480] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_MESSAGE) + CriKeywords::TYPE_MESSAGE.size() + 1;\n'}
[0.825509] (igus_rebel) StdoutLine: {'line': b'5: +  message = messageString.substr(messageStart);\n'}
[0.825538] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.825576] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825605] (igus_rebel) StdoutLine: {'line': b'5: +Command::Command(const std::string & messageString)\n'}
[0.825633] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMD)\n'}
[0.825661] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.825689] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandStart =\n'}
[0.825717] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_CMD) + CriKeywords::TYPE_CMD.size() + 1;\n'}
[0.825746] (igus_rebel) StdoutLine: {'line': b'5: +  command = messageString.substr(commandStart);\n'}
[0.825776] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.825804] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.825833] (igus_rebel) StdoutLine: {'line': b'5: +Info::Info(const std::string & messageString)\n'}
[0.825862] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::INFO)\n'}
[0.825889] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.825917] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type infoStart =\n'}
[0.825945] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_INFO) + CriKeywords::TYPE_INFO.size() + 1;\n'}
[0.825972] (igus_rebel) StdoutLine: {'line': b'5: +  info = messageString.substr(infoStart);\n'}
[0.826000] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.826027] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826054] (igus_rebel) StdoutLine: {'line': b'5: +LogMsg::LogMsg(const std::string & messageString)\n'}
[0.826081] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::LOGMSG)\n'}
[0.826108] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.826136] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type logLvlStart = messageString.find(CriKeywords::TYPE_LOGMSG) +\n'}
[0.826163] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_LOGMSG.size() + 1;\n'}
[0.826191] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type timestampStart = messageString.find(" ", logLvlStart) + 1;\n'}
[0.826222] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type msgStart = messageString.find(" ", timestampStart) + 1;\n'}
[0.826250] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826278] (igus_rebel) StdoutLine: {'line': b'5: +  logLevel = GetLogLevel(messageString.substr(logLvlStart, (timestampStart - logLvlStart - 1)));\n'}
[0.826308] (igus_rebel) StdoutLine: {'line': b'5: +  timestamp = std::stol(messageString.substr(timestampStart, (msgStart - timestampStart - 1)));\n'}
[0.826335] (igus_rebel) StdoutLine: {'line': b'5: +  logMsg = messageString.substr(msgStart);\n'}
[0.826364] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.826390] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826418] (igus_rebel) StdoutLine: {'line': b'5: +LogLevel LogMsg::GetLogLevel(const std::string & logLvlString)\n'}
[0.826446] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.826475] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_DEBUG) {\n'}
[0.826507] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::DEBUG;\n'}
[0.826539] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.826574] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826605] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_APP_INFO) {\n'}
[0.826636] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::APP_INFO;\n'}
[0.826668] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.826699] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826730] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_APP_ERROR) {\n'}
[0.826760] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::APP_ERROR;\n'}
[0.826792] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.826822] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826853] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_INFO) {\n'}
[0.826887] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::INFO;\n'}
[0.826918] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.826948] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.826978] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_WARN) {\n'}
[0.827008] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::WARN;\n'}
[0.827039] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.827069] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827100] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_ERROR) {\n'}
[0.827131] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::ERROR;\n'}
[0.827161] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.827192] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827222] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_FATAL) {\n'}
[0.827253] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::FATAL;\n'}
[0.827284] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.827315] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827346] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown log level during parsing: %s",\n'}
[0.827378] (igus_rebel) StdoutLine: {'line': b'5: +        logLvlString.c_str());\n'}
[0.827409] (igus_rebel) StdoutLine: {'line': b'5: +  return LogLevel::UNKNOWN;\n'}
[0.827440] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.827470] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827501] (igus_rebel) StdoutLine: {'line': b'5: +Variables::Variables(const std::string & messageString)\n'}
[0.827532] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::VARIABLES),\n'}
[0.827569] (igus_rebel) StdoutLine: {'line': b'5: +  numberVariables(),\n'}
[0.827602] (igus_rebel) StdoutLine: {'line': b'5: +  positionVariables()\n'}
[0.827634] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.827664] (igus_rebel) StdoutLine: {'line': b'5: +  std::regex variables_regex("\\\\S+");\n'}
[0.827694] (igus_rebel) StdoutLine: {'line': b'5: +  auto variables_begin = std::sregex_iterator(messageString.begin(), messageString.end(),\n'}
[0.827725] (igus_rebel) StdoutLine: {'line': b'5: +        variables_regex);\n'}
[0.827757] (igus_rebel) StdoutLine: {'line': b'5: +  auto variables_end = std::sregex_iterator();\n'}
[0.827787] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827817] (igus_rebel) StdoutLine: {'line': b'5: +  std::sregex_iterator it = variables_begin;\n'}
[0.827847] (igus_rebel) StdoutLine: {'line': b'5: +  while (it != variables_end) {\n'}
[0.827877] (igus_rebel) StdoutLine: {'line': b'5: +    std::string matchStr = GetMatchString((*it));\n'}
[0.827907] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.827937] (igus_rebel) StdoutLine: {'line': b'5: +    if (matchStr.compare(CriKeywords::VARIABLES_NR_VARIABLE) == 0) {\n'}
[0.827968] (igus_rebel) StdoutLine: {'line': b'5: +      NumberVariable nv;\n'}
[0.828148] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828214] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.828248] (igus_rebel) StdoutLine: {'line': b'5: +      nv.name = GetMatchString(*it);\n'}
[0.828279] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828309] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.828339] (igus_rebel) StdoutLine: {'line': b'5: +      nv.value = std::stod(GetMatchString(*it));\n'}
[0.828368] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828397] (igus_rebel) StdoutLine: {'line': b'5: +      numberVariables.push_back(nv);\n'}
[0.828426] (igus_rebel) StdoutLine: {'line': b'5: @@ -694 +553,127 @@\n'}
[0.828455] (igus_rebel) StdoutLine: {'line': b'5: -}\n'}
[0.828484] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828512] (igus_rebel) StdoutLine: {'line': b'5: +    if (matchStr.compare(CriKeywords::VARIABLES_POS_VARIABLE) == 0) {\n'}
[0.828541] (igus_rebel) StdoutLine: {'line': b'5: +      PositionVariable pv;\n'}
[0.828580] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828616] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.828646] (igus_rebel) StdoutLine: {'line': b'5: +      pv.name = GetMatchString(*it);\n'}
[0.828676] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828705] (igus_rebel) StdoutLine: {'line': b'5: +      for (auto i = 0; i < 15; i++) {\n'}
[0.828734] (igus_rebel) StdoutLine: {'line': b'5: +        it++;\n'}
[0.828763] (igus_rebel) StdoutLine: {'line': b'5: +        pv.values[i] = std::stod(GetMatchString(*it));\n'}
[0.828792] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.828821] (igus_rebel) StdoutLine: {'line': b'5: +      positionVariables.push_back(pv);\n'}
[0.828851] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.828879] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.828908] (igus_rebel) StdoutLine: {'line': b'5: +    it++;\n'}
[0.828937] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.828967] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.828997] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829028] (igus_rebel) StdoutLine: {'line': b'5: +std::string Variables::GetMatchString(const std::smatch & smatch)\n'}
[0.829060] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.829092] (igus_rebel) StdoutLine: {'line': b'5: +  std::string matchStr = smatch.str();\n'}
[0.829125] (igus_rebel) StdoutLine: {'line': b"5: +  if (matchStr.length() > 0 && matchStr.back() == ',') {\n"}
[0.829157] (igus_rebel) StdoutLine: {'line': b'5: +    matchStr.pop_back();\n'}
[0.829189] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.829222] (igus_rebel) StdoutLine: {'line': b'5: +  return matchStr;\n'}
[0.829253] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.829284] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829315] (igus_rebel) StdoutLine: {'line': b'5: +CmdError::CmdError(const std::string & messageString)\n'}
[0.829344] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMDERROR)\n'}
[0.829374] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.829403] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandErrorStart = messageString.find(CriKeywords::TYPE_CMDERROR) +\n'}
[0.829433] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CMDERROR.size();\n'}
[0.829461] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type countStart = messageString.find(" ", commandErrorStart) + 1;\n'}
[0.829491] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorMsgStart = messageString.find(" ", countStart) + 1;\n'}
[0.829521] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829554] (igus_rebel) StdoutLine: {'line': b'5: +  recjectedCmd = std::stoi(messageString.substr(countStart, errorMsgStart - countStart - 1));\n'}
[0.829587] (igus_rebel) StdoutLine: {'line': b'5: +  error = messageString.substr(errorMsgStart);\n'}
[0.829617] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.829647] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829675] (igus_rebel) StdoutLine: {'line': b'5: +CmdAck::CmdAck(const std::string & messageString)\n'}
[0.829705] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMDACK)\n'}
[0.829738] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.829767] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandAckStart = messageString.find(CriKeywords::TYPE_CMDACK) +\n'}
[0.829796] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CMDACK.size();\n'}
[0.829825] (igus_rebel) StdoutLine: {'line': b'5: +  acceptedCmd = std::stoi(messageString.substr(commandAckStart));\n'}
[0.829853] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.829882] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.829911] (igus_rebel) StdoutLine: {'line': b'5: +Cyclestat::Cyclestat(const std::string & messageString)\n'}
[0.829940] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CYCLESTAT)\n'}
[0.829971] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.829999] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type cyclestatStart = messageString.find(CriKeywords::TYPE_CYCLESTAT) +\n'}
[0.830027] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CYCLESTAT.size();\n'}
[0.830058] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type cycletimeStart = messageString.find(" ", cyclestatStart) + 1;\n'}
[0.830088] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type workloadStart = messageString.find(" ", cycletimeStart) + 1;\n'}
[0.830117] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830146] (igus_rebel) StdoutLine: {'line': b'5: +  cycletime = std::stoi(messageString.substr(cycletimeStart, workloadStart - cycletimeStart));\n'}
[0.830174] (igus_rebel) StdoutLine: {'line': b'5: +  workload = std::stoi(messageString.substr(workloadStart));\n'}
[0.830204] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.830233] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830261] (igus_rebel) StdoutLine: {'line': b'5: +ConfigType Config::GetConfigType(const std::string & msg)\n'}
[0.830290] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.830318] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeStart = msg.find(" ") + 1;\n'}
[0.830346] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.830375] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830404] (igus_rebel) StdoutLine: {'line': b'5: +  std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.830432] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830461] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString != CriKeywords::TYPE_CONFIG) {\n'}
[0.830489] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.830518] (igus_rebel) StdoutLine: {'line': b'5: +          "Got message to parse for config data that was not a config message.");\n'}
[0.830546] (igus_rebel) StdoutLine: {'line': b'5: +    return ConfigType::UNKNOWN;\n'}
[0.830586] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.830614] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830642] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type configTypeStart = typeEnd + 1;\n'}
[0.830670] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type configTypeEnd = msg.find(" ", configTypeStart + 1);\n'}
[0.830699] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830730] (igus_rebel) StdoutLine: {'line': b'5: +  std::string configTypeString = msg.substr(configTypeStart, configTypeEnd - configTypeStart);\n'}
[0.830762] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830791] (igus_rebel) StdoutLine: {'line': b'5: +  if (configTypeString == CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER) {\n'}
[0.830822] (igus_rebel) StdoutLine: {'line': b'5: +    return ConfigType::KINEMATICLIMITS;\n'}
[0.830852] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.830882] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.830912] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config type: \\"%s\\"",\n'}
[0.830945] (igus_rebel) StdoutLine: {'line': b'5: +        configTypeString.c_str());\n'}
[0.830974] (igus_rebel) StdoutLine: {'line': b'5: +  return ConfigType::UNKNOWN;\n'}
[0.831004] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.831035] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831062] (igus_rebel) StdoutLine: {'line': b'5: +KinematicLimits::KinematicLimits(const std::string & messageString)\n'}
[0.831090] (igus_rebel) StdoutLine: {'line': b'5: +: Config(ConfigType::KINEMATICLIMITS)\n'}
[0.831118] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.831147] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type answerStart =\n'}
[0.831175] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER);\n'}
[0.831204] (igus_rebel) StdoutLine: {'line': b'5: +  answerStart += CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER.size() + 1;\n'}
[0.831232] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831260] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<float> minMax;\n'}
[0.831288] (igus_rebel) StdoutLine: {'line': b'5: +  FillVector(minMax, messageString.substr(answerStart));\n'}
[0.831318] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831346] (igus_rebel) StdoutLine: {'line': b'5: +  if (minMax.size() % 2 != 0) {\n'}
[0.831375] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing config message of type %d",\n'}
[0.831403] (igus_rebel) StdoutLine: {'line': b'5: +      (int)configType);\n'}
[0.831431] (igus_rebel) StdoutLine: {'line': b'5: +    return;\n'}
[0.831459] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.831487] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831516] (igus_rebel) StdoutLine: {'line': b'5: +  for (size_t i = 0; i < minMax.size(); i += 2) {\n'}
[0.831545] (igus_rebel) StdoutLine: {'line': b'5: +    minMaxPairs.push_back(std::pair<float, float>(minMax.at(i), minMax.at(i + 1)));\n'}
[0.831578] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.831607] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.831635] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831664] (igus_rebel) StdoutLine: {'line': b'5: +std::string KinematicLimits::ToString()\n'}
[0.831694] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.831723] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.831751] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831781] (igus_rebel) StdoutLine: {'line': b'5: +  for (size_t i = 0; i < minMaxPairs.size() - 1; i++) {\n'}
[0.831810] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "(" << minMaxPairs.at(i).first << ", " << minMaxPairs.at(i).second << ") ";\n'}
[0.831840] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.831868] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831897] (igus_rebel) StdoutLine: {'line': b'5: +  msg << "(" << minMaxPairs.at(minMaxPairs.size() - 1).first << ", " <<\n'}
[0.831925] (igus_rebel) StdoutLine: {'line': b'5: +    minMaxPairs.at(minMaxPairs.size() - 1).second << ")";\n'}
[0.831954] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831983] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.832012] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832040] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832068] (igus_rebel) StdoutLine: {'line': b'5: +void KinematicLimits::Print()\n'}
[0.832096] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.832124] (igus_rebel) StdoutLine: {'line': b'5: +  std::cout << "Kinematic limits: " << ToString() << std::endl;\n'}
[0.832152] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832180] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832207] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832236] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.832263] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/Rebel.cpp':\n"}
[0.832291] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.832319] (igus_rebel) StdoutLine: {'line': b'5: --- src/Rebel.cpp\n'}
[0.832346] (igus_rebel) StdoutLine: {'line': b'5: +++ src/Rebel.cpp.uncrustify\n'}
[0.832378] (igus_rebel) StdoutLine: {'line': b'5: @@ -15,8 +15,8 @@\n'}
[0.832407] (igus_rebel) StdoutLine: {'line': b'5: -    Rebel::Rebel()\n'}
[0.832438] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.832468] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.832496] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.832525] (igus_rebel) StdoutLine: {'line': b'5: -    Rebel::~Rebel()\n'}
[0.832555] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.832585] (igus_rebel) StdoutLine: {'line': b'5: -        Stop();\n'}
[0.832613] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.832641] (igus_rebel) StdoutLine: {'line': b'5: +Rebel::Rebel()\n'}
[0.832669] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.832697] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832725] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832754] (igus_rebel) StdoutLine: {'line': b'5: +Rebel::~Rebel()\n'}
[0.832783] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.832812] (igus_rebel) StdoutLine: {'line': b'5: +  Stop();\n'}
[0.832842] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832870] (igus_rebel) StdoutLine: {'line': b'5: @@ -27 +27,17 @@\n'}
[0.832898] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::AliveThreadFunction()\n'}
[0.832928] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::AliveThreadFunction()\n'}
[0.832958] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.832986] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to send ALIVEJOG");\n'}
[0.833016] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833045] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueAlive) {\n'}
[0.833074] (igus_rebel) StdoutLine: {'line': b'5: +    std::ostringstream msg;\n'}
[0.833104] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::showpoint;\n'}
[0.833132] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::fixed;\n'}
[0.833160] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::setprecision(8);\n'}
[0.833187] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "CRISTART " << Ccnt() << " ";\n'}
[0.833216] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "ALIVEJOG ";\n'}
[0.833242] (igus_rebel) StdoutLine: {'line': b'5: +    msg << j1 << " " << j2 << " " << j3 << " ";\n'}
[0.833270] (igus_rebel) StdoutLine: {'line': b'5: +    msg << j4 << " " << j5 << " " << j6 << " ";\n'}
[0.833300] (igus_rebel) StdoutLine: {'line': b'5: +    msg << 0.0f << " " << 0.0f << " " << 0.0f << " ";\n'}
[0.833328] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "CRIEND" << std::endl;\n'}
[0.833354] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833381] (igus_rebel) StdoutLine: {'line': b'5: +            // std::cout << msg.str();\n'}
[0.833409] (igus_rebel) StdoutLine: {'line': b'5: @@ -29,3 +45,272 @@\n'}
[0.833437] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to send ALIVEJOG");\n'}
[0.833465] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.833494] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueAlive)\n'}
[0.833522] (igus_rebel) StdoutLine: {'line': b'5: +      std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.833556] (igus_rebel) StdoutLine: {'line': b'5: +      rebelSocket->SendMessage(msg.str());\n'}
[0.833587] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.833615] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833643] (igus_rebel) StdoutLine: {'line': b'5: +    std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs));\n'}
[0.833672] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.833700] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833727] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to send ALIVEJOG");\n'}
[0.833756] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.833784] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833813] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::MessageThreadFunction()\n'}
[0.833841] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.833869] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to process robot messages");\n'}
[0.833897] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833924] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueMessage) {\n'}
[0.833952] (igus_rebel) StdoutLine: {'line': b'5: +    if (rebelSocket->HasMessage()) {\n'}
[0.833981] (igus_rebel) StdoutLine: {'line': b'5: +      std::string msg = rebelSocket->GetMessage();\n'}
[0.834009] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834036] (igus_rebel) StdoutLine: {'line': b'5: +      CriMessages::MessageType type = CriMessages::CriMessage::GetMessageType(msg);\n'}
[0.834065] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834093] (igus_rebel) StdoutLine: {'line': b'5: +      switch (type) {\n'}
[0.834120] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::STATUS:\n'}
[0.834148] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.834175] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Status status = CriMessages::Status(msg);\n'}
[0.834203] (igus_rebel) StdoutLine: {'line': b'5: +                    // status.Print();\n'}
[0.834231] (igus_rebel) StdoutLine: {'line': b'5: +            status.Log();\n'}
[0.834259] (igus_rebel) StdoutLine: {'line': b'5: +            currentStatus = status;\n'}
[0.834286] (igus_rebel) StdoutLine: {'line': b'5: +            ProcessStatus(currentStatus);\n'}
[0.834315] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.834342] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.834369] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834396] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::RUNSTATE:\n'}
[0.834423] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.834451] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.834478] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.834507] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834534] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::MESSAGE:\n'}
[0.834566] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.834595] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Message message = CriMessages::Message(msg);\n'}
[0.834623] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel MESSAGE: %s",\n'}
[0.834651] (igus_rebel) StdoutLine: {'line': b'5: +              message.message.c_str());\n'}
[0.834679] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.834706] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.834735] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834763] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMD:\n'}
[0.834790] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.834818] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Command command = CriMessages::Command(msg);\n'}
[0.834847] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834874] (igus_rebel) StdoutLine: {'line': b'5: +                    // Not sure if the ROS node should display these?\n'}
[0.834903] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "CMD: %s", command.command.c_str());\n'}
[0.834932] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.834961] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.834989] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835016] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CONFIG:\n'}
[0.835044] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.835073] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::ConfigType configType = CriMessages::Config::GetConfigType(msg);\n'}
[0.835102] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835131] (igus_rebel) StdoutLine: {'line': b'5: +            switch (configType) {\n'}
[0.835160] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::ConfigType::KINEMATICLIMITS:\n'}
[0.835190] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.835219] (igus_rebel) StdoutLine: {'line': b'5: +                  CriMessages::KinematicLimits kinematicLimits = CriMessages::KinematicLimits(msg);\n'}
[0.835247] (igus_rebel) StdoutLine: {'line': b'5: +                  kinematicLimits.Print();\n'}
[0.835276] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.835304] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.835332] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::ConfigType::UNKNOWN:\n'}
[0.835361] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.835388] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config message: %s",\n'}
[0.835417] (igus_rebel) StdoutLine: {'line': b'5: +                  msg.c_str());\n'}
[0.835445] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.835474] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.835502] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835529] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.835564] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835596] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.835624] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.835651] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835679] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::INFO:\n'}
[0.835707] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.835736] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Info info = CriMessages::Info(msg);\n'}
[0.835765] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "INFO: %s", info.info.c_str());\n'}
[0.835794] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.835824] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.835852] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835880] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::LOGMSG:\n'}
[0.835910] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.835938] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::LogMsg log = CriMessages::LogMsg(msg);\n'}
[0.835968] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835999] (igus_rebel) StdoutLine: {'line': b'5: +            switch (log.logLevel) {\n'}
[0.836028] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::DEBUG:\n'}
[0.836058] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.836088] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.836119] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.836147] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.836177] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.836204] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836232] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::APP_INFO:\n'}
[0.836260] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.836287] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_INFO): %s (%ld ms)",\n'}
[0.836315] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.836342] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.836368] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.836395] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836423] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::APP_ERROR:\n'}
[0.836451] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.836479] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.836510] (igus_rebel) StdoutLine: {'line': b'5: +                  "REBEL LOG (APP_ERROR): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.836538] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.836571] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.836599] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836626] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::INFO:\n'}
[0.836655] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.836682] (igus_rebel) StdoutLine: {'line': b"5: +                        // The Rebel is pretty chatty with its INFO level log messages, so I've set them to output only to the ROS DEBUG level.\n"}
[0.836711] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.836739] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.836768] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.836796] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.836824] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836851] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::WARN:\n'}
[0.836881] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.836908] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.836936] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.836964] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.836993] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.837021] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837050] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::ERROR:\n'}
[0.837077] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.837104] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.837132] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.837160] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.837187] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.837214] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837242] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::FATAL:\n'}
[0.837269] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.837296] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_FATAL(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.837324] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.837352] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.837379] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.837406] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837432] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::UNKNOWN:\n'}
[0.837459] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.837486] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.837514] (igus_rebel) StdoutLine: {'line': b'5: +                  "REBEL LOG (UNKNOWN LOG LEVEL): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.837541] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.837574] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.837602] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.837631] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837660] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.837688] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.837716] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837744] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::VARIABLES:\n'}
[0.837774] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.837801] (igus_rebel) StdoutLine: {'line': b'5: +                    // CriMessages::Variables vars = CriMessages::Variables(msg);\n'}
[0.837831] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.837858] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.837886] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837913] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMDERROR:\n'}
[0.837942] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.837970] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::CmdError error = CriMessages::CmdError(msg);\n'}
[0.837999] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838028] (igus_rebel) StdoutLine: {'line': b'5: +            try {\n'}
[0.838056] (igus_rebel) StdoutLine: {'line': b'5: +              std::string command = unacknowledgedCommands.at(error.recjectedCmd);\n'}
[0.838084] (igus_rebel) StdoutLine: {'line': b'5: +              unacknowledgedCommands.erase(error.recjectedCmd);\n'}
[0.838112] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.838145] (igus_rebel) StdoutLine: {'line': b'5: +                "Rebel did not accept command: %s. Error message: %s", command.c_str(),\n'}
[0.838175] (igus_rebel) StdoutLine: {'line': b'5: +                error.error.c_str());\n'}
[0.838203] (igus_rebel) StdoutLine: {'line': b'5: +            } catch (const std::out_of_range & e) {\n'}
[0.838231] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.838260] (igus_rebel) StdoutLine: {'line': b'5: +                "Rebel did not accept unknown command. Error message: %s (%d)", error.error.c_str(),\n'}
[0.838289] (igus_rebel) StdoutLine: {'line': b'5: +                error.recjectedCmd);\n'}
[0.838316] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.838343] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.838371] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.838399] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838426] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMDACK:\n'}
[0.838455] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.838483] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::CmdAck ack = CriMessages::CmdAck(msg);\n'}
[0.838511] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838538] (igus_rebel) StdoutLine: {'line': b'5: +            try {\n'}
[0.838572] (igus_rebel) StdoutLine: {'line': b'5: +              std::string command = unacknowledgedCommands.at(ack.acceptedCmd);\n'}
[0.838601] (igus_rebel) StdoutLine: {'line': b'5: +              unacknowledgedCommands.erase(ack.acceptedCmd);\n'}
[0.838629] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel accepted command: %s",\n'}
[0.838657] (igus_rebel) StdoutLine: {'line': b'5: +                command.c_str());\n'}
[0.838686] (igus_rebel) StdoutLine: {'line': b'5: +              break;\n'}
[0.838715] (igus_rebel) StdoutLine: {'line': b'5: +            } catch (const std::out_of_range & e) {\n'}
[0.838747] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Rebel accepted unknown command: %d",\n'}
[0.838777] (igus_rebel) StdoutLine: {'line': b'5: +                ack.acceptedCmd);\n'}
[0.838807] (igus_rebel) StdoutLine: {'line': b'5: +              break;\n'}
[0.838838] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.838869] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.838900] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.838931] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838961] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CYCLESTAT:\n'}
[0.838991] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.839020] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Cyclestat cyclestat = CriMessages::Cyclestat(msg);\n'}
[0.839049] (igus_rebel) StdoutLine: {'line': b'5: +                    // Will only output this once every 2 minutes, because this is sent every 0.5 seconds.\n'}
[0.839078] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *node_->get_clock(), 120,\n'}
[0.839107] (igus_rebel) StdoutLine: {'line': b'5: +              "Rebel cycle statistics -- Cycletime: %d -- Workload: %d%%", cyclestat.cycletime,\n'}
[0.839139] (igus_rebel) StdoutLine: {'line': b'5: +              cyclestat.workload);\n'}
[0.839168] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.839197] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.839225] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839255] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::UNKNOWN:\n'}
[0.839284] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.839313] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "UNKNOW MESSAGE: %s", msg.c_str());\n'}
[0.839342] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.839372] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.839400] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839428] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::OPINFO:\n'}
[0.839457] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.839485] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.839514] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.839542] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839582] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::GSIG:\n'}
[0.839613] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.839641] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.839671] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.839700] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::GRIPPERSTATE:\n'}
[0.839729] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.839759] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.839790] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.839820] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.839851] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.839880] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.839909] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839939] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to process robot messages");\n'}
[0.839968] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.839996] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.840025] (igus_rebel) StdoutLine: {'line': b'5: +int Rebel::Ccnt()\n'}
[0.840054] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.840083] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(cntLock);\n'}
[0.840112] (igus_rebel) StdoutLine: {'line': b'5: +  int current = current_ccnt;\n'}
[0.840142] (igus_rebel) StdoutLine: {'line': b'5: +  current_ccnt = (current_ccnt % 9999) + 1;\n'}
[0.840170] (igus_rebel) StdoutLine: {'line': b'5: +  return current;\n'}
[0.840199] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.840228] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.840256] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetDigitalOut(const int & output, const bool & is_on)\n'}
[0.840285] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.840314] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream cmd;\n'}
[0.840342] (igus_rebel) StdoutLine: {'line': b'5: +  cmd << CriKeywords::COMMAND_DOUT << " " << output << " " << (is_on ? "true" : "false");\n'}
[0.840371] (igus_rebel) StdoutLine: {'line': b'5: +  Command(cmd.str());\n'}
[0.840399] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.840428] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.840456] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Command(const std::string & command)\n'}
[0.840485] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.840513] (igus_rebel) StdoutLine: {'line': b'5: +  int commandCount = Ccnt();\n'}
[0.840542] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.840576] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::START << " " << commandCount << " ";\n'}
[0.840605] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::TYPE_CMD << " ";\n'}
[0.840634] (igus_rebel) StdoutLine: {'line': b'5: +  msg << command << " ";\n'}
[0.840663] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::END << std::endl;\n'}
[0.840690] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.840719] (igus_rebel) StdoutLine: {'line': b'5: +  unacknowledgedCommands[commandCount] = command;\n'}
[0.840748] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.840776] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->SendMessage(msg.str());\n'}
[0.840803] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.840831] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.840859] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetConfig(const std::string & config)\n'}
[0.840888] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.840918] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.840948] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::START << " " << Ccnt() << " ";\n'}
[0.840977] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::TYPE_CONFIG << " ";\n'}
[0.841005] (igus_rebel) StdoutLine: {'line': b'5: +  msg << config << " ";\n'}
[0.841034] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::END << std::endl;\n'}
[0.841062] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841090] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->SendMessage(msg.str());\n'}
[0.841120] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.841148] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841176] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetControlMode(const ControlMode & mode)\n'}
[0.841205] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.841233] (igus_rebel) StdoutLine: {'line': b'5: +  switch (mode) {\n'}
[0.841262] (igus_rebel) StdoutLine: {'line': b'5: +    case Rebel::ControlMode::POSITION:\n'}
[0.841292] (igus_rebel) StdoutLine: {'line': b'5: +      {\n'}
[0.841321] (igus_rebel) StdoutLine: {'line': b'5: @@ -33,21 +318,36 @@\n'}
[0.841351] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.841379] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.841409] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.841437] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(8);\n'}
[0.841466] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "CRISTART " << Ccnt() << " ";\n'}
[0.841496] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "ALIVEJOG ";\n'}
[0.841526] (igus_rebel) StdoutLine: {'line': b'5: -            msg << j1 << " " << j2 << " " << j3 << " ";\n'}
[0.841560] (igus_rebel) StdoutLine: {'line': b'5: -            msg << j4 << " " << j5 << " " << j6 << " ";\n'}
[0.841592] (igus_rebel) StdoutLine: {'line': b'5: -            msg << 0.0f << " " << 0.0f << " " << 0.0f << " ";\n'}
[0.841623] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "CRIEND" << std::endl;\n'}
[0.841653] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.841682] (igus_rebel) StdoutLine: {'line': b'5: -            // std::cout << msg.str();\n'}
[0.841711] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.841739] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.841769] (igus_rebel) StdoutLine: {'line': b'5: -                rebelSocket->SendMessage(msg.str());\n'}
[0.841798] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.841828] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.841857] (igus_rebel) StdoutLine: {'line': b'5: -            std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs));\n'}
[0.841885] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.841914] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.841942] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to send ALIVEJOG");\n'}
[0.841971] (igus_rebel) StdoutLine: {'line': b'5: +          std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.842000] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842029] (igus_rebel) StdoutLine: {'line': b'5: +          j1 = currentStatus.posJointCurrent.at(0);\n'}
[0.842057] (igus_rebel) StdoutLine: {'line': b'5: +          j2 = currentStatus.posJointCurrent.at(1);\n'}
[0.842086] (igus_rebel) StdoutLine: {'line': b'5: +          j3 = currentStatus.posJointCurrent.at(2);\n'}
[0.842115] (igus_rebel) StdoutLine: {'line': b'5: +          j4 = currentStatus.posJointCurrent.at(3);\n'}
[0.842144] (igus_rebel) StdoutLine: {'line': b'5: +          j5 = currentStatus.posJointCurrent.at(4);\n'}
[0.842173] (igus_rebel) StdoutLine: {'line': b'5: +          j6 = currentStatus.posJointCurrent.at(5);\n'}
[0.842201] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842230] (igus_rebel) StdoutLine: {'line': b'5: +          Command(CriKeywords::COMMAND_MOTIONTYPECARTBASE);\n'}
[0.842260] (igus_rebel) StdoutLine: {'line': b'5: +          controlMode = mode;\n'}
[0.842289] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.842319] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by position control.");\n'}
[0.842347] (igus_rebel) StdoutLine: {'line': b'5: +        break;\n'}
[0.842376] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.842406] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842434] (igus_rebel) StdoutLine: {'line': b'5: +    case Rebel::ControlMode::VELOCITY:\n'}
[0.842464] (igus_rebel) StdoutLine: {'line': b'5: +      {\n'}
[0.842493] (igus_rebel) StdoutLine: {'line': b'5: +        Command(CriKeywords::COMMAND_MOTIONTYPEJOINT);\n'}
[0.842522] (igus_rebel) StdoutLine: {'line': b'5: +        controlMode = mode;\n'}
[0.842554] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by velocity control.");\n'}
[0.842585] (igus_rebel) StdoutLine: {'line': b'5: +        break;\n'}
[0.842613] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.842643] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.842672] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.842700] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842730] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::ProcessStatus(const CriMessages::Status & status)\n'}
[0.842759] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.842788] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Kinstate currentKinstate = status.kinstate;\n'}
[0.842818] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> currentErrorJoints = status.errorJoints;\n'}
[0.842850] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842878] (igus_rebel) StdoutLine: {'line': b'5: +  if (lastKinstate != currentKinstate) {\n'}
[0.842906] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842935] (igus_rebel) StdoutLine: {'line': b'5: +    if (lastKinstate != CriMessages::Kinstate::NO_ERROR) {\n'}
[0.842964] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Kinematics error resolved [%s]",\n'}
[0.842991] (igus_rebel) StdoutLine: {'line': b'5: +          kinstateMessage.c_str());\n'}
[0.843020] (igus_rebel) StdoutLine: {'line': b'5: @@ -56,208 +356,90 @@\n'}
[0.843048] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::MessageThreadFunction()\n'}
[0.843077] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.843104] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to process robot messages");\n'}
[0.843133] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.843162] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueMessage)\n'}
[0.843190] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.843218] (igus_rebel) StdoutLine: {'line': b'5: -            if (rebelSocket->HasMessage())\n'}
[0.843247] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.843275] (igus_rebel) StdoutLine: {'line': b'5: -                std::string msg = rebelSocket->GetMessage();\n'}
[0.843303] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.843331] (igus_rebel) StdoutLine: {'line': b'5: -                CriMessages::MessageType type = CriMessages::CriMessage::GetMessageType(msg);\n'}
[0.843360] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.843388] (igus_rebel) StdoutLine: {'line': b'5: -                switch (type)\n'}
[0.843417] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.843444] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::STATUS:\n'}
[0.843473] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.843502] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Status status = CriMessages::Status(msg);\n'}
[0.843530] (igus_rebel) StdoutLine: {'line': b'5: -                    // status.Print();\n'}
[0.843569] (igus_rebel) StdoutLine: {'line': b'5: -                    status.Log();\n'}
[0.843602] (igus_rebel) StdoutLine: {'line': b'5: -                    currentStatus = status;\n'}
[0.843631] (igus_rebel) StdoutLine: {'line': b'5: -                    ProcessStatus(currentStatus);\n'}
[0.843660] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.843688] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.843716] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.843745] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::RUNSTATE:\n'}
[0.843773] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.843801] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.843830] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.843857] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.843885] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::MESSAGE:\n'}
[0.843914] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.843941] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Message message = CriMessages::Message(msg);\n'}
[0.843971] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel MESSAGE: %s", message.message.c_str());\n'}
[0.844000] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.844029] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.844058] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.844086] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMD:\n'}
[0.844116] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.844146] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Command command = CriMessages::Command(msg);\n'}
[0.844175] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.844204] (igus_rebel) StdoutLine: {'line': b'5: -                    // Not sure if the ROS node should display these?\n'}
[0.844234] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "CMD: %s", command.command.c_str());\n'}
[0.844263] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.844292] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.844321] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.844349] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CONFIG:\n'}
[0.844377] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.844406] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::ConfigType configType = CriMessages::Config::GetConfigType(msg);\n'}
[0.844435] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.844463] (igus_rebel) StdoutLine: {'line': b'5: -                    switch (configType)\n'}
[0.844492] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.844521] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::ConfigType::KINEMATICLIMITS:\n'}
[0.844553] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.844585] (igus_rebel) StdoutLine: {'line': b'5: -                        CriMessages::KinematicLimits kinematicLimits = CriMessages::KinematicLimits(msg);\n'}
[0.844614] (igus_rebel) StdoutLine: {'line': b'5: -                        kinematicLimits.Print();\n'}
[0.844643] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.844672] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.844700] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::ConfigType::UNKNOWN:\n'}
[0.844729] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.844758] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config message: %s", msg.c_str());\n'}
[0.844787] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.844816] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.844847] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.844876] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.844904] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.844933] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.844961] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.844990] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845017] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::INFO:\n'}
[0.845047] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.845075] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Info info = CriMessages::Info(msg);\n'}
[0.845103] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "INFO: %s", info.info.c_str());\n'}
[0.845132] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.845161] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.845188] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845216] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::LOGMSG:\n'}
[0.845244] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.845273] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::LogMsg log = CriMessages::LogMsg(msg);\n'}
[0.845301] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845328] (igus_rebel) StdoutLine: {'line': b'5: -                    switch (log.logLevel)\n'}
[0.845356] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.845384] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::DEBUG:\n'}
[0.845413] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.845441] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.845471] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.845500] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.845528] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845560] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::APP_INFO:\n'}
[0.845590] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.845618] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_INFO): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.845654] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.845683] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.845711] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845740] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::APP_ERROR:\n'}
[0.845769] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.845798] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_ERROR): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.845828] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.845857] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.845887] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.845916] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::INFO:\n'}
[0.845944] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.845973] (igus_rebel) StdoutLine: {'line': b"5: -                        // The Rebel is pretty chatty with its INFO level log messages, so I've set them to output only to the ROS DEBUG level.\n"}
[0.846002] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.846032] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.846063] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.846092] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846120] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::WARN:\n'}
[0.846150] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.846179] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.846208] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.846239] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.846269] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846298] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::ERROR:\n'}
[0.846328] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.846356] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.846387] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.846415] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.846444] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846473] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::FATAL:\n'}
[0.846501] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.846529] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_FATAL(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.846562] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.846592] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.846620] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846647] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::UNKNOWN:\n'}
[0.846675] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.846704] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG (UNKNOWN LOG LEVEL): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.846732] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.846760] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.846789] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.846818] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846846] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.846874] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.846901] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.846930] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::VARIABLES:\n'}
[0.846958] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.846986] (igus_rebel) StdoutLine: {'line': b'5: -                    // CriMessages::Variables vars = CriMessages::Variables(msg);\n'}
[0.847015] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.847044] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.847071] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847099] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMDERROR:\n'}
[0.847128] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.847156] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::CmdError error = CriMessages::CmdError(msg);\n'}
[0.847184] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847212] (igus_rebel) StdoutLine: {'line': b'5: -                    try\n'}
[0.847241] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.847269] (igus_rebel) StdoutLine: {'line': b'5: -                        std::string command = unacknowledgedCommands.at(error.recjectedCmd);\n'}
[0.847298] (igus_rebel) StdoutLine: {'line': b'5: -                        unacknowledgedCommands.erase(error.recjectedCmd);\n'}
[0.847329] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Rebel did not accept command: %s. Error message: %s", command.c_str(), error.error.c_str());\n'}
[0.847358] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.847387] (igus_rebel) StdoutLine: {'line': b'5: -                    catch (const std::out_of_range& e)\n'}
[0.847415] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.847445] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Rebel did not accept unknown command. Error message: %s (%d)", error.error.c_str(), error.recjectedCmd);\n'}
[0.847478] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.847507] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.847536] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.847575] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847606] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMDACK:\n'}
[0.847636] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.847665] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::CmdAck ack = CriMessages::CmdAck(msg);\n'}
[0.847694] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.847723] (igus_rebel) StdoutLine: {'line': b'5: -                    try\n'}
[0.847752] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.847781] (igus_rebel) StdoutLine: {'line': b'5: -                        std::string command = unacknowledgedCommands.at(ack.acceptedCmd);\n'}
[0.847810] (igus_rebel) StdoutLine: {'line': b'5: -                        unacknowledgedCommands.erase(ack.acceptedCmd);\n'}
[0.847838] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel accepted command: %s", command.c_str());\n'}
[0.847867] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.847897] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.847925] (igus_rebel) StdoutLine: {'line': b'5: -                    catch (const std::out_of_range& e)\n'}
[0.847954] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.847983] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Rebel accepted unknown command: %d", ack.acceptedCmd);\n'}
[0.848012] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.848041] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.848072] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848100] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848129] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848157] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CYCLESTAT:\n'}
[0.848186] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848214] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Cyclestat cyclestat = CriMessages::Cyclestat(msg);\n'}
[0.848243] (igus_rebel) StdoutLine: {'line': b'5: -                    // Will only output this once every 2 minutes, because this is sent every 0.5 seconds.\n'}
[0.848272] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *node_->get_clock(), 120, "Rebel cycle statistics -- Cycletime: %d -- Workload: %d%%", cyclestat.cycletime, cyclestat.workload);\n'}
[0.848303] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848331] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848360] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848388] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::UNKNOWN:\n'}
[0.848417] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848446] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "UNKNOW MESSAGE: %s", msg.c_str());\n'}
[0.848476] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848503] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848531] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848565] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::OPINFO:\n'}
[0.848595] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848624] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848653] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848682] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848711] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::GSIG:\n'}
[0.848740] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848768] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848796] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848824] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::GRIPPERSTATE:\n'}
[0.848853] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.848881] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.848909] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848937] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.848965] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.848993] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.849021] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849048] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to process robot messages");\n'}
[0.849077] (igus_rebel) StdoutLine: {'line': b'5: +    if (currentKinstate != CriMessages::Kinstate::NO_ERROR) {\n'}
[0.849105] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849134] (igus_rebel) StdoutLine: {'line': b'5: +      switch (status.kinstate) {\n'}
[0.849162] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::JOINT_LIMIT_MIN:\n'}
[0.849190] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.849218] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "joint at minimum limit";\n'}
[0.849246] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.849274] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.849303] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849331] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::JOINT_LIMIT_MAX:\n'}
[0.849358] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.849386] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "joint at maximum limit";\n'}
[0.849414] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.849441] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.849469] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849497] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.849525] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.849558] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (center)";\n'}
[0.849587] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.849617] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.849645] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849674] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.849703] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.849731] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (reach)";\n'}
[0.849759] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.849787] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.849816] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849845] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.849875] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.849903] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (wrist)";\n'}
[0.849932] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.849961] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.849991] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.850021] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.850051] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.850080] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 1";\n'}
[0.850108] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.850135] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.850163] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.850191] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.850219] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.850247] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 2";\n'}
[0.850275] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.850303] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.850332] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.850359] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.850388] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.850416] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 3";\n'}
[0.850444] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.850472] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.850500] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.850529] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.850563] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.850592] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 4";\n'}
[0.850620] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.850648] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.850675] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.850703] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.850732] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.850760] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 5";\n'}
[0.850788] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.850816] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.850845] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.850872] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.850900] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.850929] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 6";\n'}
[0.850958] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.850985] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.851013] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.851041] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.851071] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.851099] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "motion not allowed";\n'}
[0.851127] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.851154] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.851182] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.851211] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::UNKNOWN:\n'}
[0.851239] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.851269] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "unknown error";\n'}
[0.851297] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.851325] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.851352] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.851380] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::NO_ERROR:\n'}
[0.851408] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.851436] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "no error";\n'}
[0.851468] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.851497] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.851525] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.851566] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.851599] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Kinematics error [%s]",\n'}
[0.851628] (igus_rebel) StdoutLine: {'line': b'5: +          kinstateMessage.c_str());\n'}
[0.851657] (igus_rebel) StdoutLine: {'line': b'5: @@ -265,7 +447,56 @@\n'}
[0.851685] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851713] (igus_rebel) StdoutLine: {'line': b'5: -    int Rebel::Ccnt()\n'}
[0.851742] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.851769] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(cntLock);\n'}
[0.851797] (igus_rebel) StdoutLine: {'line': b'5: -        int current = current_ccnt;\n'}
[0.851824] (igus_rebel) StdoutLine: {'line': b'5: -        current_ccnt = (current_ccnt % 9999) + 1;\n'}
[0.851853] (igus_rebel) StdoutLine: {'line': b'5: -        return current;\n'}
[0.851881] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.851910] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.851938] (igus_rebel) StdoutLine: {'line': b'5: +  if (currentErrorJoints != lastErrorJoints) {\n'}
[0.851966] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.851995] (igus_rebel) StdoutLine: {'line': b'5: +            // loop throught the 6 joint errors\n'}
[0.852024] (igus_rebel) StdoutLine: {'line': b'5: +    for (unsigned int i = 0; i < 6; i++) {\n'}
[0.852051] (igus_rebel) StdoutLine: {'line': b'5: +      int errorJoint = currentErrorJoints.at(i);\n'}
[0.852080] (igus_rebel) StdoutLine: {'line': b'5: +      std::array<int, 8> errorJointBit;\n'}
[0.852108] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852136] (igus_rebel) StdoutLine: {'line': b'5: +      if (errorJoint != lastErrorJoints.at(i)) {\n'}
[0.852165] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852194] (igus_rebel) StdoutLine: {'line': b'5: +                    // extract bits from the error to analyze it\n'}
[0.852222] (igus_rebel) StdoutLine: {'line': b'5: +        for (unsigned j = 0; j < 8; j++) {\n'}
[0.852251] (igus_rebel) StdoutLine: {'line': b'5: +          errorJointBit[j] = errorJoint & (int)exp2(j);\n'}
[0.852279] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.852308] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852337] (igus_rebel) StdoutLine: {'line': b'5: +        std::string errorMsg = "";\n'}
[0.852366] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(0) == static_cast<int>(CriMessages::ErrorJoint::TEMP)) {\n'}
[0.852394] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Overtemperature\' ";\n'}
[0.852422] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.852450] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852477] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(1) == static_cast<int>(CriMessages::ErrorJoint::ESTOP_LOWV)) {\n'}
[0.852506] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Supply too low: Is emergency button pressed?\' ";\n'}
[0.852533] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.852568] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852597] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(2) == static_cast<int>(CriMessages::ErrorJoint::MNE)) {\n'}
[0.852626] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Motor not enabled\' ";\n'}
[0.852657] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.852686] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852714] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(3) == static_cast<int>(CriMessages::ErrorJoint::COM)) {\n'}
[0.852742] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Communication watch dog\' ";\n'}
[0.852771] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.852800] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852828] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(4) == static_cast<int>(CriMessages::ErrorJoint::POS)) {\n'}
[0.852855] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Position lag\' ";\n'}
[0.852884] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.852913] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.852941] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(5) == static_cast<int>(CriMessages::ErrorJoint::ENC)) {\n'}
[0.852970] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Encoder Error\' ";\n'}
[0.852998] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.853027] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.853055] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(6) == static_cast<int>(CriMessages::ErrorJoint::OC)) {\n'}
[0.853083] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Overcurrent\' ";\n'}
[0.853113] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.853141] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.853169] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(7) == static_cast<int>(CriMessages::ErrorJoint::DRV)) {\n'}
[0.853198] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'DriveError/SVM\' ";\n'}
[0.853225] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.853254] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.853281] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorMsg != "") {\n'}
[0.853309] (igus_rebel) StdoutLine: {'line': b'5: +          RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Joint %i Error: [%s]", i,\n'}
[0.853337] (igus_rebel) StdoutLine: {'line': b'5: +              errorMsg.c_str());\n'}
[0.853365] (igus_rebel) StdoutLine: {'line': b'5: +        } else {\n'}
[0.853394] (igus_rebel) StdoutLine: {'line': b'5: +          RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Joint %i Error: Cleared", i);\n'}
[0.853423] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.853452] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.853480] (igus_rebel) StdoutLine: {'line': b'5: @@ -273,247 +504,5 @@\n'}
[0.853509] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853540] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetDigitalOut(const int &output, const bool &is_on)\n'}
[0.853575] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.853604] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream cmd;\n'}
[0.853633] (igus_rebel) StdoutLine: {'line': b'5: -        cmd << CriKeywords::COMMAND_DOUT << " " << output << " " << (is_on ? "true" : "false");\n'}
[0.853664] (igus_rebel) StdoutLine: {'line': b'5: -        Command(cmd.str());\n'}
[0.853695] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.853724] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853753] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Command(const std::string &command)\n'}
[0.853783] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.853811] (igus_rebel) StdoutLine: {'line': b'5: -        int commandCount = Ccnt();\n'}
[0.853840] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream msg;\n'}
[0.853868] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::START << " " << commandCount << " ";\n'}
[0.853897] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::TYPE_CMD << " ";\n'}
[0.853925] (igus_rebel) StdoutLine: {'line': b'5: -        msg << command << " ";\n'}
[0.853952] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::END << std::endl;\n'}
[0.853983] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854010] (igus_rebel) StdoutLine: {'line': b'5: -        unacknowledgedCommands[commandCount] = command;\n'}
[0.854038] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854066] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->SendMessage(msg.str());\n'}
[0.854094] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.854123] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854152] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetConfig(const std::string &config)\n'}
[0.854180] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.854209] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream msg;\n'}
[0.854238] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::START << " " << Ccnt() << " ";\n'}
[0.854267] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::TYPE_CONFIG << " ";\n'}
[0.854296] (igus_rebel) StdoutLine: {'line': b'5: -        msg << config << " ";\n'}
[0.854324] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::END << std::endl;\n'}
[0.854351] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854379] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->SendMessage(msg.str());\n'}
[0.854408] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.854437] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854467] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetControlMode(const ControlMode &mode)\n'}
[0.854495] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.854524] (igus_rebel) StdoutLine: {'line': b'5: -        switch (mode)\n'}
[0.854557] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.854587] (igus_rebel) StdoutLine: {'line': b'5: -        case Rebel::ControlMode::POSITION:\n'}
[0.854616] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.854645] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.854674] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.854703] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854731] (igus_rebel) StdoutLine: {'line': b'5: -                j1 = currentStatus.posJointCurrent.at(0);\n'}
[0.854759] (igus_rebel) StdoutLine: {'line': b'5: -                j2 = currentStatus.posJointCurrent.at(1);\n'}
[0.854793] (igus_rebel) StdoutLine: {'line': b'5: -                j3 = currentStatus.posJointCurrent.at(2);\n'}
[0.854822] (igus_rebel) StdoutLine: {'line': b'5: -                j4 = currentStatus.posJointCurrent.at(3);\n'}
[0.854850] (igus_rebel) StdoutLine: {'line': b'5: -                j5 = currentStatus.posJointCurrent.at(4);\n'}
[0.854878] (igus_rebel) StdoutLine: {'line': b'5: -                j6 = currentStatus.posJointCurrent.at(5);\n'}
[0.854906] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854934] (igus_rebel) StdoutLine: {'line': b'5: -                Command(CriKeywords::COMMAND_MOTIONTYPECARTBASE);\n'}
[0.854962] (igus_rebel) StdoutLine: {'line': b'5: -                controlMode = mode;\n'}
[0.854990] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.855019] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by position control.");\n'}
[0.855049] (igus_rebel) StdoutLine: {'line': b'5: -            break;\n'}
[0.855078] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.855107] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855135] (igus_rebel) StdoutLine: {'line': b'5: -        case Rebel::ControlMode::VELOCITY:\n'}
[0.855164] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.855192] (igus_rebel) StdoutLine: {'line': b'5: -            Command(CriKeywords::COMMAND_MOTIONTYPEJOINT);\n'}
[0.855221] (igus_rebel) StdoutLine: {'line': b'5: -            controlMode = mode;\n'}
[0.855250] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by velocity control.");\n'}
[0.855280] (igus_rebel) StdoutLine: {'line': b'5: -            break;\n'}
[0.855311] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.855339] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.855368] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.855396] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855424] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::ProcessStatus(const CriMessages::Status &status)\n'}
[0.855453] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.855482] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Kinstate currentKinstate = status.kinstate;\n'}
[0.855511] (igus_rebel) StdoutLine: {'line': b'5: -        std::array<int, 16> currentErrorJoints = status.errorJoints;\n'}
[0.855541] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855581] (igus_rebel) StdoutLine: {'line': b'5: -        if (lastKinstate != currentKinstate)\n'}
[0.855611] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.855640] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855669] (igus_rebel) StdoutLine: {'line': b'5: -            if (lastKinstate != CriMessages::Kinstate::NO_ERROR)\n'}
[0.855697] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.855725] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Kinematics error resolved [%s]", kinstateMessage.c_str());\n'}
[0.855755] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.855784] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855812] (igus_rebel) StdoutLine: {'line': b'5: -            if (currentKinstate != CriMessages::Kinstate::NO_ERROR)\n'}
[0.855841] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.855870] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855898] (igus_rebel) StdoutLine: {'line': b'5: -                switch (status.kinstate)\n'}
[0.855927] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.855955] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::JOINT_LIMIT_MIN:\n'}
[0.855983] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.856012] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "joint at minimum limit";\n'}
[0.856040] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.856067] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.856095] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856123] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::JOINT_LIMIT_MAX:\n'}
[0.856151] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.856179] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "joint at maximum limit";\n'}
[0.856206] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.856235] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.856263] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856291] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.856322] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.856350] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (center)";\n'}
[0.856379] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.856407] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.856436] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856464] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.856492] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.856520] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (reach)";\n'}
[0.856552] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.856582] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.856610] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856639] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.856669] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.856697] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (wrist)";\n'}
[0.856725] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.856753] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.856781] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856809] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.856838] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.856867] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 1";\n'}
[0.856895] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.856923] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.856951] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.856979] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.857008] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.857035] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 2";\n'}
[0.857064] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.857093] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.857121] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.857149] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.857177] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.857205] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 3";\n'}
[0.857233] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.857261] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.857289] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.857316] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.857344] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.857372] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 4";\n'}
[0.857401] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.857429] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.857457] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.857485] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.857513] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.857540] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 5";\n'}
[0.857573] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.857603] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.857631] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.857658] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.857686] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.857713] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 6";\n'}
[0.857740] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.857767] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.857795] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.857822] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.857853] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.857881] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "motion not allowed";\n'}
[0.857909] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.857937] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.857966] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.857995] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::UNKNOWN:\n'}
[0.858024] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.858051] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "unknown error";\n'}
[0.858079] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.858107] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.858136] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858164] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::NO_ERROR:\n'}
[0.858193] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.858222] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "no error";\n'}
[0.858251] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.858280] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.858308] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.858336] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858365] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Kinematics error [%s]", kinstateMessage.c_str());\n'}
[0.858393] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.858422] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.858452] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858480] (igus_rebel) StdoutLine: {'line': b'5: -        if (currentErrorJoints != lastErrorJoints)\n'}
[0.858510] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.858540] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858574] (igus_rebel) StdoutLine: {'line': b'5: -            // loop throught the 6 joint errors\n'}
[0.858604] (igus_rebel) StdoutLine: {'line': b'5: -            for (unsigned int i = 0; i < 6; i++)\n'}
[0.858632] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.858660] (igus_rebel) StdoutLine: {'line': b'5: -                int errorJoint = currentErrorJoints.at(i);\n'}
[0.858688] (igus_rebel) StdoutLine: {'line': b'5: -                std::array<int, 8> errorJointBit;\n'}
[0.858716] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858742] (igus_rebel) StdoutLine: {'line': b'5: -                if (errorJoint != lastErrorJoints.at(i))\n'}
[0.858770] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.858798] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858826] (igus_rebel) StdoutLine: {'line': b'5: -                    // extract bits from the error to analyze it\n'}
[0.858857] (igus_rebel) StdoutLine: {'line': b'5: -                    for (unsigned j = 0; j < 8; j++)\n'}
[0.858886] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.858913] (igus_rebel) StdoutLine: {'line': b'5: -                        errorJointBit[j] = errorJoint & (int)exp2(j);\n'}
[0.858941] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.858970] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858999] (igus_rebel) StdoutLine: {'line': b'5: -                    std::string errorMsg = "";\n'}
[0.859027] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(0) == static_cast<int>(CriMessages::ErrorJoint::TEMP))\n'}
[0.859057] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.859085] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Overtemperature\' ";\n'}
[0.859113] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.859141] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859168] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(1) == static_cast<int>(CriMessages::ErrorJoint::ESTOP_LOWV))\n'}
[0.859196] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.859224] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Supply too low: Is emergency button pressed?\' ";\n'}
[0.859253] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.859282] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859310] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(2) == static_cast<int>(CriMessages::ErrorJoint::MNE))\n'}
[0.859337] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.859366] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Motor not enabled\' ";\n'}
[0.859394] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.859422] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859450] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(3) == static_cast<int>(CriMessages::ErrorJoint::COM))\n'}
[0.859479] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.859507] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Communication watch dog\' ";\n'}
[0.859535] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.859574] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859605] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(4) == static_cast<int>(CriMessages::ErrorJoint::POS))\n'}
[0.859634] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.859664] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Position lag\' ";\n'}
[0.859692] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.859722] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859751] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(5) == static_cast<int>(CriMessages::ErrorJoint::ENC))\n'}
[0.859782] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.859812] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Encoder Error\' ";\n'}
[0.859840] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.859868] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.859896] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(6) == static_cast<int>(CriMessages::ErrorJoint::OC))\n'}
[0.859923] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.859952] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Overcurrent\' ";\n'}
[0.859980] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.860009] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860035] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(7) == static_cast<int>(CriMessages::ErrorJoint::DRV))\n'}
[0.860063] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.860091] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'DriveError/SVM\' ";\n'}
[0.860120] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.860148] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860176] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorMsg != "")\n'}
[0.860205] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.860233] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Joint %i Error: [%s]", i, errorMsg.c_str());\n'}
[0.860262] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.860290] (igus_rebel) StdoutLine: {'line': b'5: -                    else\n'}
[0.860317] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.860345] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Joint %i Error: Cleared", i);\n'}
[0.860375] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.860405] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.860436] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.860466] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.860496] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860526] (igus_rebel) StdoutLine: {'line': b'5: -        lastKinstate = currentKinstate;\n'}
[0.860563] (igus_rebel) StdoutLine: {'line': b'5: -        lastErrorJoints = currentErrorJoints;\n'}
[0.860592] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.860620] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.860647] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.860676] (igus_rebel) StdoutLine: {'line': b'5: +  lastKinstate = currentKinstate;\n'}
[0.860704] (igus_rebel) StdoutLine: {'line': b'5: +  lastErrorJoints = currentErrorJoints;\n'}
[0.860733] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.860761] (igus_rebel) StdoutLine: {'line': b'5: @@ -524,52 +513,54 @@\n'}
[0.860789] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetJog(const float &joint1, const float &joint2, const float &joint3,\n'}
[0.860818] (igus_rebel) StdoutLine: {'line': b'5: -                       const float &joint4, const float &joint5, const float &joint6)\n'}
[0.860850] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.860879] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = joint1;\n'}
[0.860908] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = joint2;\n'}
[0.860936] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = joint3;\n'}
[0.860964] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = joint4;\n'}
[0.860992] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = joint5;\n'}
[0.861020] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = joint6;\n'}
[0.861047] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.861075] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861103] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetJoints(float &joint1, float &joint2, float &joint3,\n'}
[0.861132] (igus_rebel) StdoutLine: {'line': b'5: -                          float &joint4, float &joint5, float &joint6)\n'}
[0.861159] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.861187] (igus_rebel) StdoutLine: {'line': b'5: -        joint1 = currentStatus.posJointCurrent.at(0);\n'}
[0.861214] (igus_rebel) StdoutLine: {'line': b'5: -        joint2 = currentStatus.posJointCurrent.at(1);\n'}
[0.861244] (igus_rebel) StdoutLine: {'line': b'5: -        joint3 = currentStatus.posJointCurrent.at(2);\n'}
[0.861271] (igus_rebel) StdoutLine: {'line': b'5: -        joint4 = currentStatus.posJointCurrent.at(3);\n'}
[0.861299] (igus_rebel) StdoutLine: {'line': b'5: -        joint5 = currentStatus.posJointCurrent.at(4);\n'}
[0.861327] (igus_rebel) StdoutLine: {'line': b'5: -        joint6 = currentStatus.posJointCurrent.at(5);\n'}
[0.861354] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.861381] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861409] (igus_rebel) StdoutLine: {'line': b'5: -    CallbackReturn Rebel::on_init(const HardwareInfo&)\n'}
[0.861437] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.861465] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket = std::make_shared<RebelSocket>(ip, port, 200),\n'}
[0.861494] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = 0.0f;\n'}
[0.861522] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = 0.0f;\n'}
[0.861552] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = 0.0f;\n'}
[0.861583] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = 0.0f;\n'}
[0.861611] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = 0.0f;\n'}
[0.861639] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = 0.0f;\n'}
[0.861668] (igus_rebel) StdoutLine: {'line': b'5: -        controlMode = Rebel::ControlMode::VELOCITY;\n'}
[0.861696] (igus_rebel) StdoutLine: {'line': b'5: -        current_ccnt = 1;\n'}
[0.861726] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = false;\n'}
[0.861755] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = false;\n'}
[0.861783] (igus_rebel) StdoutLine: {'line': b'5: -        aliveWaitMs = 100;\n'}
[0.861811] (igus_rebel) StdoutLine: {'line': b'5: -        lastKinstate = CriMessages::Kinstate::NO_ERROR;\n'}
[0.861839] (igus_rebel) StdoutLine: {'line': b'5: -        kinstateMessage = "";\n'}
[0.861867] (igus_rebel) StdoutLine: {'line': b'5: -        node_ = std::make_shared<rclcpp::Node>("igus_rebel");\n'}
[0.861896] (igus_rebel) StdoutLine: {'line': b'5: -        digital_output_srv_ = node_->create_service<igus_rebel_msgs::srv::SetDigitalOutput>(\n'}
[0.861925] (igus_rebel) StdoutLine: {'line': b'5: -            "set_digital_output", std::bind(&Rebel::dio_callback, this, std::placeholders::_1, std::placeholders::_2));\n'}
[0.861954] (igus_rebel) StdoutLine: {'line': b'5: -        Start();\n'}
[0.861981] (igus_rebel) StdoutLine: {'line': b'5: -        return CallbackReturn::SUCCESS;\n'}
[0.862010] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.862037] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862066] (igus_rebel) StdoutLine: {'line': b'5: -    std::vector<StateInterface> Rebel::export_state_interfaces()\n'}
[0.862094] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.862121] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<StateInterface> state_interfaces;\n'}
[0.862149] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862177] (igus_rebel) StdoutLine: {'line': b'5: -        for (int i = 0; i < 6; ++i)\n'}
[0.862205] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.862232] (igus_rebel) StdoutLine: {'line': b'5: -            state_interfaces.emplace_back(StateInterface(\n'}
[0.862261] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetJog(\n'}
[0.862288] (igus_rebel) StdoutLine: {'line': b'5: +  const float & joint1, const float & joint2, const float & joint3,\n'}
[0.862316] (igus_rebel) StdoutLine: {'line': b'5: +  const float & joint4, const float & joint5, const float & joint6)\n'}
[0.862344] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.862372] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = joint1;\n'}
[0.862400] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = joint2;\n'}
[0.862427] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = joint3;\n'}
[0.862455] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = joint4;\n'}
[0.862484] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = joint5;\n'}
[0.862511] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = joint6;\n'}
[0.862539] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.862572] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.862600] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetJoints(\n'}
[0.862628] (igus_rebel) StdoutLine: {'line': b'5: +  float & joint1, float & joint2, float & joint3,\n'}
[0.862656] (igus_rebel) StdoutLine: {'line': b'5: +  float & joint4, float & joint5, float & joint6)\n'}
[0.862684] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.862711] (igus_rebel) StdoutLine: {'line': b'5: +  joint1 = currentStatus.posJointCurrent.at(0);\n'}
[0.862739] (igus_rebel) StdoutLine: {'line': b'5: +  joint2 = currentStatus.posJointCurrent.at(1);\n'}
[0.862766] (igus_rebel) StdoutLine: {'line': b'5: +  joint3 = currentStatus.posJointCurrent.at(2);\n'}
[0.862794] (igus_rebel) StdoutLine: {'line': b'5: +  joint4 = currentStatus.posJointCurrent.at(3);\n'}
[0.862822] (igus_rebel) StdoutLine: {'line': b'5: +  joint5 = currentStatus.posJointCurrent.at(4);\n'}
[0.862851] (igus_rebel) StdoutLine: {'line': b'5: +  joint6 = currentStatus.posJointCurrent.at(5);\n'}
[0.862878] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.862907] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.862935] (igus_rebel) StdoutLine: {'line': b'5: +CallbackReturn Rebel::on_init(const HardwareInfo &)\n'}
[0.862963] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.862991] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket = std::make_shared<RebelSocket>(ip, port, 200),\n'}
[0.863019] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = 0.0f;\n'}
[0.863048] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = 0.0f;\n'}
[0.863076] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = 0.0f;\n'}
[0.863103] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = 0.0f;\n'}
[0.863130] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = 0.0f;\n'}
[0.863158] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = 0.0f;\n'}
[0.863186] (igus_rebel) StdoutLine: {'line': b'5: +  controlMode = Rebel::ControlMode::VELOCITY;\n'}
[0.863214] (igus_rebel) StdoutLine: {'line': b'5: +  current_ccnt = 1;\n'}
[0.863243] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = false;\n'}
[0.863274] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = false;\n'}
[0.863303] (igus_rebel) StdoutLine: {'line': b'5: +  aliveWaitMs = 100;\n'}
[0.863330] (igus_rebel) StdoutLine: {'line': b'5: +  lastKinstate = CriMessages::Kinstate::NO_ERROR;\n'}
[0.863359] (igus_rebel) StdoutLine: {'line': b'5: +  kinstateMessage = "";\n'}
[0.863388] (igus_rebel) StdoutLine: {'line': b'5: +  node_ = std::make_shared<rclcpp::Node>("igus_rebel");\n'}
[0.863415] (igus_rebel) StdoutLine: {'line': b'5: +  digital_output_srv_ = node_->create_service<igus_rebel_msgs::srv::SetDigitalOutput>(\n'}
[0.863444] (igus_rebel) StdoutLine: {'line': b'5: +            "set_digital_output",\n'}
[0.863472] (igus_rebel) StdoutLine: {'line': b'5: +      std::bind(&Rebel::dio_callback, this, std::placeholders::_1, std::placeholders::_2));\n'}
[0.863500] (igus_rebel) StdoutLine: {'line': b'5: +  Start();\n'}
[0.863528] (igus_rebel) StdoutLine: {'line': b'5: +  return CallbackReturn::SUCCESS;\n'}
[0.863567] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.863602] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.863634] (igus_rebel) StdoutLine: {'line': b'5: +std::vector<StateInterface> Rebel::export_state_interfaces()\n'}
[0.863664] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.863692] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<StateInterface> state_interfaces;\n'}
[0.863721] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.863749] (igus_rebel) StdoutLine: {'line': b'5: +  for (int i = 0; i < 6; ++i) {\n'}
[0.863777] (igus_rebel) StdoutLine: {'line': b'5: +    state_interfaces.emplace_back(StateInterface(\n'}
[0.863806] (igus_rebel) StdoutLine: {'line': b'5: @@ -577 +568 @@\n'}
[0.863834] (igus_rebel) StdoutLine: {'line': b'5: -            state_interfaces.emplace_back(StateInterface(\n'}
[0.863866] (igus_rebel) StdoutLine: {'line': b'5: +    state_interfaces.emplace_back(StateInterface(\n'}
[0.863895] (igus_rebel) StdoutLine: {'line': b'5: @@ -579,12 +570,11 @@\n'}
[0.863923] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.863952] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863981] (igus_rebel) StdoutLine: {'line': b'5: -        return state_interfaces;\n'}
[0.864010] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.864039] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864068] (igus_rebel) StdoutLine: {'line': b'5: -    std::vector<CommandInterface> Rebel::export_command_interfaces()\n'}
[0.864098] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.864127] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<CommandInterface> command_interfaces;\n'}
[0.864156] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864185] (igus_rebel) StdoutLine: {'line': b'5: -        for (int i = 0; i < 6; ++i)\n'}
[0.864218] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.864245] (igus_rebel) StdoutLine: {'line': b'5: -            command_interfaces.emplace_back(CommandInterface(\n'}
[0.864274] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.864302] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.864331] (igus_rebel) StdoutLine: {'line': b'5: +  return state_interfaces;\n'}
[0.864359] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.864386] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.864415] (igus_rebel) StdoutLine: {'line': b'5: +std::vector<CommandInterface> Rebel::export_command_interfaces()\n'}
[0.864443] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.864471] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<CommandInterface> command_interfaces;\n'}
[0.864499] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.864528] (igus_rebel) StdoutLine: {'line': b'5: +  for (int i = 0; i < 6; ++i) {\n'}
[0.864562] (igus_rebel) StdoutLine: {'line': b'5: +    command_interfaces.emplace_back(CommandInterface(\n'}
[0.864593] (igus_rebel) StdoutLine: {'line': b'5: @@ -592,37 +582,37 @@\n'}
[0.864622] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.864651] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864679] (igus_rebel) StdoutLine: {'line': b'5: -        return command_interfaces;\n'}
[0.864710] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.864739] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864766] (igus_rebel) StdoutLine: {'line': b'5: -    return_type Rebel::read(const rclcpp::Time&, const rclcpp::Duration &period)\n'}
[0.864794] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.864823] (igus_rebel) StdoutLine: {'line': b'5: -        read();\n'}
[0.864851] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864880] (igus_rebel) StdoutLine: {'line': b'5: -        vel[0] = (pos[0] - last_pos[0]) / period.seconds();\n'}
[0.864908] (igus_rebel) StdoutLine: {'line': b'5: -        vel[1] = (pos[1] - last_pos[1]) / period.seconds();\n'}
[0.864936] (igus_rebel) StdoutLine: {'line': b'5: -        vel[2] = (pos[2] - last_pos[2]) / period.seconds();\n'}
[0.864964] (igus_rebel) StdoutLine: {'line': b'5: -        vel[3] = (pos[3] - last_pos[3]) / period.seconds();\n'}
[0.864992] (igus_rebel) StdoutLine: {'line': b'5: -        vel[4] = (pos[4] - last_pos[4]) / period.seconds();\n'}
[0.865020] (igus_rebel) StdoutLine: {'line': b'5: -        vel[5] = (pos[5] - last_pos[5]) / period.seconds();\n'}
[0.865049] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865078] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[0] = pos[0];\n'}
[0.865105] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[1] = pos[1];\n'}
[0.865133] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[2] = pos[2];\n'}
[0.865161] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[3] = pos[3];\n'}
[0.865195] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[4] = pos[4];\n'}
[0.865223] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[5] = pos[5];\n'}
[0.865251] (igus_rebel) StdoutLine: {'line': b'5: -        return return_type::OK;\n'}
[0.865279] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.865307] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865335] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::read()\n'}
[0.865363] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.865390] (igus_rebel) StdoutLine: {'line': b'5: -        pos[0] = currentStatus.posJointCurrent.at(0) * degToRad;\n'}
[0.865419] (igus_rebel) StdoutLine: {'line': b'5: -        pos[1] = currentStatus.posJointCurrent.at(1) * degToRad;\n'}
[0.865448] (igus_rebel) StdoutLine: {'line': b'5: -        pos[2] = currentStatus.posJointCurrent.at(2) * degToRad;\n'}
[0.865476] (igus_rebel) StdoutLine: {'line': b'5: -        pos[3] = currentStatus.posJointCurrent.at(3) * degToRad;\n'}
[0.865504] (igus_rebel) StdoutLine: {'line': b'5: -        pos[4] = currentStatus.posJointCurrent.at(4) * degToRad;\n'}
[0.865531] (igus_rebel) StdoutLine: {'line': b'5: -        pos[5] = currentStatus.posJointCurrent.at(5) * degToRad;\n'}
[0.865564] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.865593] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865622] (igus_rebel) StdoutLine: {'line': b'5: -    return_type Rebel::write(const rclcpp::Time&, const rclcpp::Duration&)\n'}
[0.865651] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.865679] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.865708] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865736] (igus_rebel) StdoutLine: {'line': b'5: +  return command_interfaces;\n'}
[0.865764] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.865792] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865820] (igus_rebel) StdoutLine: {'line': b'5: +return_type Rebel::read(const rclcpp::Time &, const rclcpp::Duration & period)\n'}
[0.865848] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.865875] (igus_rebel) StdoutLine: {'line': b'5: +  read();\n'}
[0.865904] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.865931] (igus_rebel) StdoutLine: {'line': b'5: +  vel[0] = (pos[0] - last_pos[0]) / period.seconds();\n'}
[0.865959] (igus_rebel) StdoutLine: {'line': b'5: +  vel[1] = (pos[1] - last_pos[1]) / period.seconds();\n'}
[0.865987] (igus_rebel) StdoutLine: {'line': b'5: +  vel[2] = (pos[2] - last_pos[2]) / period.seconds();\n'}
[0.866015] (igus_rebel) StdoutLine: {'line': b'5: +  vel[3] = (pos[3] - last_pos[3]) / period.seconds();\n'}
[0.866045] (igus_rebel) StdoutLine: {'line': b'5: +  vel[4] = (pos[4] - last_pos[4]) / period.seconds();\n'}
[0.866074] (igus_rebel) StdoutLine: {'line': b'5: +  vel[5] = (pos[5] - last_pos[5]) / period.seconds();\n'}
[0.866101] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.866129] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[0] = pos[0];\n'}
[0.866157] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[1] = pos[1];\n'}
[0.866186] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[2] = pos[2];\n'}
[0.866214] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[3] = pos[3];\n'}
[0.866243] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[4] = pos[4];\n'}
[0.866271] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[5] = pos[5];\n'}
[0.866299] (igus_rebel) StdoutLine: {'line': b'5: +  return return_type::OK;\n'}
[0.866326] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.866354] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.866382] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::read()\n'}
[0.866410] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.866438] (igus_rebel) StdoutLine: {'line': b'5: +  pos[0] = currentStatus.posJointCurrent.at(0) * degToRad;\n'}
[0.866467] (igus_rebel) StdoutLine: {'line': b'5: +  pos[1] = currentStatus.posJointCurrent.at(1) * degToRad;\n'}
[0.866495] (igus_rebel) StdoutLine: {'line': b'5: +  pos[2] = currentStatus.posJointCurrent.at(2) * degToRad;\n'}
[0.866524] (igus_rebel) StdoutLine: {'line': b'5: +  pos[3] = currentStatus.posJointCurrent.at(3) * degToRad;\n'}
[0.866556] (igus_rebel) StdoutLine: {'line': b'5: +  pos[4] = currentStatus.posJointCurrent.at(4) * degToRad;\n'}
[0.866587] (igus_rebel) StdoutLine: {'line': b'5: +  pos[5] = currentStatus.posJointCurrent.at(5) * degToRad;\n'}
[0.866615] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.866643] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.866671] (igus_rebel) StdoutLine: {'line': b'5: +return_type Rebel::write(const rclcpp::Time &, const rclcpp::Duration &)\n'}
[0.866699] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.866727] (igus_rebel) StdoutLine: {'line': b'5: @@ -630,6 +620,6 @@\n'}
[0.866754] (igus_rebel) StdoutLine: {'line': b'5: -        write();\n'}
[0.866781] (igus_rebel) StdoutLine: {'line': b'5: -        return return_type::OK;\n'}
[0.866810] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.866837] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866866] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::write()\n'}
[0.866894] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.866922] (igus_rebel) StdoutLine: {'line': b'5: +  write();\n'}
[0.866950] (igus_rebel) StdoutLine: {'line': b'5: +  return return_type::OK;\n'}
[0.866978] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.867006] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.867034] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::write()\n'}
[0.867063] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.867091] (igus_rebel) StdoutLine: {'line': b'5: @@ -637,32 +627,31 @@\n'}
[0.867119] (igus_rebel) StdoutLine: {'line': b'5: -        if (rclcpp::ok())\n'}
[0.867147] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.867174] (igus_rebel) StdoutLine: {'line': b'5: -            rclcpp::spin_some(node_);\n'}
[0.867202] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.867230] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.867258] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = (float)vel_cmd[0];\n'}
[0.867287] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = (float)vel_cmd[1];\n'}
[0.867315] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = (float)vel_cmd[2];\n'}
[0.867342] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = (float)vel_cmd[3];\n'}
[0.867370] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = (float)vel_cmd[4];\n'}
[0.867398] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = (float)vel_cmd[5];\n'}
[0.867426] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.867454] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.867482] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::dio_callback(\n'}
[0.867511] (igus_rebel) StdoutLine: {'line': b'5: -        const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.867539] (igus_rebel) StdoutLine: {'line': b'5: -        std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response)\n'}
[0.867578] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.867607] (igus_rebel) StdoutLine: {'line': b'5: -        SetDigitalOut(request->output.output, request->output.is_on);\n'}
[0.867636] (igus_rebel) StdoutLine: {'line': b'5: -        response->success = true;\n'}
[0.867664] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.867692] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.867720] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetReferenceInfo()\n'}
[0.867748] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.867775] (igus_rebel) StdoutLine: {'line': b'5: -        Command(std::string("GetReferencingInfo"));\n'}
[0.867804] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.867832] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.867865] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Start()\n'}
[0.867894] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.867924] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = true;\n'}
[0.867952] (igus_rebel) StdoutLine: {'line': b'5: -        messageThread = std::thread(&Rebel::MessageThreadFunction, this);\n'}
[0.867981] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.868009] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->Start();\n'}
[0.868037] (igus_rebel) StdoutLine: {'line': b'5: +  if (rclcpp::ok()) {\n'}
[0.868065] (igus_rebel) StdoutLine: {'line': b'5: +    rclcpp::spin_some(node_);\n'}
[0.868094] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.868122] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.868150] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = (float)vel_cmd[0];\n'}
[0.868178] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = (float)vel_cmd[1];\n'}
[0.868206] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = (float)vel_cmd[2];\n'}
[0.868235] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = (float)vel_cmd[3];\n'}
[0.868262] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = (float)vel_cmd[4];\n'}
[0.868290] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = (float)vel_cmd[5];\n'}
[0.868318] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.868345] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.868373] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::dio_callback(\n'}
[0.868402] (igus_rebel) StdoutLine: {'line': b'5: +  const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.868431] (igus_rebel) StdoutLine: {'line': b'5: +  std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response)\n'}
[0.868460] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.868488] (igus_rebel) StdoutLine: {'line': b'5: +  SetDigitalOut(request->output.output, request->output.is_on);\n'}
[0.868516] (igus_rebel) StdoutLine: {'line': b'5: +  response->success = true;\n'}
[0.868545] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.868579] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.868608] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetReferenceInfo()\n'}
[0.868636] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.868664] (igus_rebel) StdoutLine: {'line': b'5: +  Command(std::string("GetReferencingInfo"));\n'}
[0.868695] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.868726] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.868756] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Start()\n'}
[0.868785] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.868815] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = true;\n'}
[0.868845] (igus_rebel) StdoutLine: {'line': b'5: +  messageThread = std::thread(&Rebel::MessageThreadFunction, this);\n'}
[0.868873] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.868901] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->Start();\n'}
[0.868930] (igus_rebel) StdoutLine: {'line': b'5: @@ -673,30 +662,29 @@\n'}
[0.868959] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_SETACTIVE + " true");\n'}
[0.868988] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_RESET);\n'}
[0.869017] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_ENABLE);\n'}
[0.869046] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869074] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = true;\n'}
[0.869103] (igus_rebel) StdoutLine: {'line': b'5: -        aliveThread = std::thread(&Rebel::AliveThreadFunction, this);\n'}
[0.869131] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869160] (igus_rebel) StdoutLine: {'line': b'5: -        GetConfig(CriKeywords::CONFIG_GETKINEMATICLIMITS);\n'}
[0.869188] (igus_rebel) StdoutLine: {'line': b'5: -        SetControlMode(ControlMode::VELOCITY);\n'}
[0.869216] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.869245] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869273] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Stop()\n'}
[0.869302] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.869330] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = 0.0f;\n'}
[0.869358] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = 0.0f;\n'}
[0.869386] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = 0.0f;\n'}
[0.869414] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = 0.0f;\n'}
[0.869442] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = 0.0f;\n'}
[0.869470] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = 0.0f;\n'}
[0.869498] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869525] (igus_rebel) StdoutLine: {'line': b'5: -        std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs + 10));\n'}
[0.869557] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869586] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = false;\n'}
[0.869615] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869644] (igus_rebel) StdoutLine: {'line': b'5: -        if (aliveThread.joinable())\n'}
[0.869672] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.869701] (igus_rebel) StdoutLine: {'line': b'5: -            aliveThread.join();\n'}
[0.869729] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.869757] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.869787] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_DISABLE);\n'}
[0.869815] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_SETACTIVE + " true");\n'}
[0.869843] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_RESET);\n'}
[0.869871] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_ENABLE);\n'}
[0.869898] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.869926] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = true;\n'}
[0.869956] (igus_rebel) StdoutLine: {'line': b'5: +  aliveThread = std::thread(&Rebel::AliveThreadFunction, this);\n'}
[0.869985] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870014] (igus_rebel) StdoutLine: {'line': b'5: +  GetConfig(CriKeywords::CONFIG_GETKINEMATICLIMITS);\n'}
[0.870043] (igus_rebel) StdoutLine: {'line': b'5: +  SetControlMode(ControlMode::VELOCITY);\n'}
[0.870070] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.870098] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870126] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Stop()\n'}
[0.870152] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.870179] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = 0.0f;\n'}
[0.870207] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = 0.0f;\n'}
[0.870234] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = 0.0f;\n'}
[0.870261] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = 0.0f;\n'}
[0.870289] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = 0.0f;\n'}
[0.870317] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = 0.0f;\n'}
[0.870344] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870372] (igus_rebel) StdoutLine: {'line': b'5: +  std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs + 10));\n'}
[0.870401] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870430] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = false;\n'}
[0.870457] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870485] (igus_rebel) StdoutLine: {'line': b'5: +  if (aliveThread.joinable()) {\n'}
[0.870512] (igus_rebel) StdoutLine: {'line': b'5: +    aliveThread.join();\n'}
[0.870539] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.870573] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870602] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_DISABLE);\n'}
[0.870630] (igus_rebel) StdoutLine: {'line': b'5: @@ -704,11 +692,10 @@\n'}
[0.870658] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_QUIT);\n'}
[0.870686] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870713] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->Stop();\n'}
[0.870741] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870769] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = false;\n'}
[0.870796] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870824] (igus_rebel) StdoutLine: {'line': b'5: -        if (messageThread.joinable())\n'}
[0.870853] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.870882] (igus_rebel) StdoutLine: {'line': b'5: -            messageThread.join();\n'}
[0.870910] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.870938] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.870966] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_QUIT);\n'}
[0.870994] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871022] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->Stop();\n'}
[0.871050] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871078] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = false;\n'}
[0.871105] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871132] (igus_rebel) StdoutLine: {'line': b'5: +  if (messageThread.joinable()) {\n'}
[0.871160] (igus_rebel) StdoutLine: {'line': b'5: +    messageThread.join();\n'}
[0.871187] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.871215] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.871243] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.871269] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/RebelSocket.cpp':\n"}
[0.871298] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.871326] (igus_rebel) StdoutLine: {'line': b'5: --- src/RebelSocket.cpp\n'}
[0.871353] (igus_rebel) StdoutLine: {'line': b'5: +++ src/RebelSocket.cpp.uncrustify\n'}
[0.871382] (igus_rebel) StdoutLine: {'line': b'5: @@ -15,14 +15,14 @@\n'}
[0.871410] (igus_rebel) StdoutLine: {'line': b'5: -    RebelSocket::RebelSocket(const std::string &ip, const int &port, const int &timeout)\n'}
[0.871439] (igus_rebel) StdoutLine: {'line': b'5: -        : sock(0),\n'}
[0.871466] (igus_rebel) StdoutLine: {'line': b'5: -          ip(ip),\n'}
[0.871494] (igus_rebel) StdoutLine: {'line': b'5: -          port(port),\n'}
[0.871521] (igus_rebel) StdoutLine: {'line': b'5: -          timeout(timeout),\n'}
[0.871552] (igus_rebel) StdoutLine: {'line': b'5: -          unprocessedMessages(),\n'}
[0.871588] (igus_rebel) StdoutLine: {'line': b'5: -          fragmentBuffer{0}\n'}
[0.871616] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.871645] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.871672] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.871701] (igus_rebel) StdoutLine: {'line': b'5: -    RebelSocket::~RebelSocket()\n'}
[0.871729] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.871756] (igus_rebel) StdoutLine: {'line': b'5: -        Stop();\n'}
[0.871782] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.871811] (igus_rebel) StdoutLine: {'line': b'5: +RebelSocket::RebelSocket(const std::string & ip, const int & port, const int & timeout)\n'}
[0.871840] (igus_rebel) StdoutLine: {'line': b'5: +: sock(0),\n'}
[0.871868] (igus_rebel) StdoutLine: {'line': b'5: +  ip(ip),\n'}
[0.871896] (igus_rebel) StdoutLine: {'line': b'5: +  port(port),\n'}
[0.871926] (igus_rebel) StdoutLine: {'line': b'5: +  timeout(timeout),\n'}
[0.871959] (igus_rebel) StdoutLine: {'line': b'5: +  unprocessedMessages(),\n'}
[0.871987] (igus_rebel) StdoutLine: {'line': b'5: +  fragmentBuffer{0}\n'}
[0.872015] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.872044] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.872071] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.872099] (igus_rebel) StdoutLine: {'line': b'5: +RebelSocket::~RebelSocket()\n'}
[0.872127] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.872155] (igus_rebel) StdoutLine: {'line': b'5: +  Stop();\n'}
[0.872183] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.872211] (igus_rebel) StdoutLine: {'line': b'5: @@ -33,2 +33,2 @@\n'}
[0.872240] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::MakeConnection()\n'}
[0.872268] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.872295] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::MakeConnection()\n'}
[0.872323] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.872352] (igus_rebel) StdoutLine: {'line': b'5: @@ -37,16 +37,14 @@\n'}
[0.872383] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(connectionLock);\n'}
[0.872411] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872439] (igus_rebel) StdoutLine: {'line': b'5: -        while (connectionNeeded)\n'}
[0.872468] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.872496] (igus_rebel) StdoutLine: {'line': b'5: -            sock = 0;\n'}
[0.872523] (igus_rebel) StdoutLine: {'line': b'5: -            struct sockaddr_in serv_addr;\n'}
[0.872554] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872588] (igus_rebel) StdoutLine: {'line': b'5: -            if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0)\n'}
[0.872616] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.872643] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket creation error.");\n'}
[0.872672] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.872700] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.872728] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.872755] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872783] (igus_rebel) StdoutLine: {'line': b'5: -            serv_addr.sin_family = AF_INET;\n'}
[0.872812] (igus_rebel) StdoutLine: {'line': b'5: -            serv_addr.sin_port = htons(port);\n'}
[0.872840] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(connectionLock);\n'}
[0.872868] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.872895] (igus_rebel) StdoutLine: {'line': b'5: +  while (connectionNeeded) {\n'}
[0.872924] (igus_rebel) StdoutLine: {'line': b'5: +    sock = 0;\n'}
[0.872951] (igus_rebel) StdoutLine: {'line': b'5: +    struct sockaddr_in serv_addr;\n'}
[0.872979] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.873006] (igus_rebel) StdoutLine: {'line': b'5: +    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {\n'}
[0.873034] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket creation error.");\n'}
[0.873063] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.873091] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.873119] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.873147] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.873175] (igus_rebel) StdoutLine: {'line': b'5: +    serv_addr.sin_family = AF_INET;\n'}
[0.873203] (igus_rebel) StdoutLine: {'line': b'5: +    serv_addr.sin_port = htons(port);\n'}
[0.873231] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,16 +53,42 @@\n'}
[0.873259] (igus_rebel) StdoutLine: {'line': b'5: -            if (inet_pton(AF_INET, ip.c_str(), &serv_addr.sin_addr) <= 0)\n'}
[0.873287] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.873314] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Invalid robot IP address / Address not supported.");\n'}
[0.873347] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.873375] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.873403] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.873431] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873458] (igus_rebel) StdoutLine: {'line': b'5: -            if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0)\n'}
[0.873487] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.873514] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Connection Failed.");\n'}
[0.873542] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.873576] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.873605] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.873634] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873662] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = false;\n'}
[0.873689] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Connected to ReBeL at %s:%d", ip.c_str(), port);\n'}
[0.873717] (igus_rebel) StdoutLine: {'line': b'5: +    if (inet_pton(AF_INET, ip.c_str(), &serv_addr.sin_addr) <= 0) {\n'}
[0.873746] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.873774] (igus_rebel) StdoutLine: {'line': b'5: +          "Invalid robot IP address / Address not supported.");\n'}
[0.873802] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.873829] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.873856] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.873884] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.873912] (igus_rebel) StdoutLine: {'line': b'5: +    if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0) {\n'}
[0.873940] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Connection Failed.");\n'}
[0.873968] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.873995] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.874023] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.874051] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874078] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = false;\n'}
[0.874107] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Connected to ReBeL at %s:%d", ip.c_str(), port);\n'}
[0.874135] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.874163] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.874191] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874219] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::SeparateMessages(const char *msg)\n'}
[0.874248] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.874282] (igus_rebel) StdoutLine: {'line': b'5: +  const char *start;\n'}
[0.874310] (igus_rebel) StdoutLine: {'line': b'5: +  const char *end = msg;\n'}
[0.874339] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874367] (igus_rebel) StdoutLine: {'line': b'5: +  while (true) {\n'}
[0.874400] (igus_rebel) StdoutLine: {'line': b'5: +    start = std::strstr(end, CriKeywords::START.c_str());\n'}
[0.874432] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874462] (igus_rebel) StdoutLine: {'line': b'5: +    if (start == nullptr) {\n'}
[0.874492] (igus_rebel) StdoutLine: {'line': b'5: +      break;\n'}
[0.874522] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.874553] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874584] (igus_rebel) StdoutLine: {'line': b'5: +    end = std::strstr(start, CriKeywords::END.c_str());\n'}
[0.874613] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874642] (igus_rebel) StdoutLine: {'line': b'5: +    if (end == nullptr) {\n'}
[0.874671] (igus_rebel) StdoutLine: {'line': b'5: +                // Found a start without end.\n'}
[0.874701] (igus_rebel) StdoutLine: {'line': b'5: +      const char *remainingStart = start + CriKeywords::START.size();\n'}
[0.874730] (igus_rebel) StdoutLine: {'line': b"5: +      const char *remainingEnd = std::strchr(remainingStart, '\\0');\n"}
[0.874759] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874787] (igus_rebel) StdoutLine: {'line': b'5: +      if (remainingEnd != nullptr) {\n'}
[0.874815] (igus_rebel) StdoutLine: {'line': b'5: +        fragmentLength = remainingEnd - remainingStart;\n'}
[0.874843] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874871] (igus_rebel) StdoutLine: {'line': b'5: +        for (int i = 0; i < fragmentLength; i++) {\n'}
[0.874899] (igus_rebel) StdoutLine: {'line': b'5: +          fragmentBuffer[i] = *(remainingStart + i);\n'}
[0.874928] (igus_rebel) StdoutLine: {'line': b'5: @@ -72,3 +96,8 @@\n'}
[0.874956] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.874984] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875012] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::SeparateMessages(const char *msg)\n'}
[0.875040] (igus_rebel) StdoutLine: {'line': b'5: +      } else {\n'}
[0.875068] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.875096] (igus_rebel) StdoutLine: {'line': b'5: +            "Socket read was not null-terminated, somehow.");\n'}
[0.875124] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.875152] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.875180] (igus_rebel) StdoutLine: {'line': b'5: +      break;\n'}
[0.875208] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.875237] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.875264] (igus_rebel) StdoutLine: {'line': b'5: @@ -76,40 +105,2 @@\n'}
[0.875297] (igus_rebel) StdoutLine: {'line': b'5: -        const char *start;\n'}
[0.875325] (igus_rebel) StdoutLine: {'line': b'5: -        const char *end = msg;\n'}
[0.875353] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875382] (igus_rebel) StdoutLine: {'line': b'5: -        while (true)\n'}
[0.875409] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.875437] (igus_rebel) StdoutLine: {'line': b'5: -            start = std::strstr(end, CriKeywords::START.c_str());\n'}
[0.875464] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875491] (igus_rebel) StdoutLine: {'line': b'5: -            if (start == nullptr)\n'}
[0.875520] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.875552] (igus_rebel) StdoutLine: {'line': b'5: -                break;\n'}
[0.875588] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.875617] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875645] (igus_rebel) StdoutLine: {'line': b'5: -            end = std::strstr(start, CriKeywords::END.c_str());\n'}
[0.875679] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875707] (igus_rebel) StdoutLine: {'line': b'5: -            if (end == nullptr)\n'}
[0.875737] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.875765] (igus_rebel) StdoutLine: {'line': b'5: -                // Found a start without end.\n'}
[0.875794] (igus_rebel) StdoutLine: {'line': b'5: -                const char *remainingStart = start + CriKeywords::START.size();\n'}
[0.875822] (igus_rebel) StdoutLine: {'line': b"5: -                const char *remainingEnd = std::strchr(remainingStart, '\\0');\n"}
[0.875850] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875877] (igus_rebel) StdoutLine: {'line': b'5: -                if (remainingEnd != nullptr)\n'}
[0.875905] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.875933] (igus_rebel) StdoutLine: {'line': b'5: -                    fragmentLength = remainingEnd - remainingStart;\n'}
[0.875963] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875990] (igus_rebel) StdoutLine: {'line': b'5: -                    for (int i = 0; i < fragmentLength; i++)\n'}
[0.876019] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.876047] (igus_rebel) StdoutLine: {'line': b'5: -                        fragmentBuffer[i] = *(remainingStart + i);\n'}
[0.876078] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.876105] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.876133] (igus_rebel) StdoutLine: {'line': b'5: -                else\n'}
[0.876161] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.876189] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket read was not null-terminated, somehow.");\n'}
[0.876217] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.876245] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.876273] (igus_rebel) StdoutLine: {'line': b'5: -                break;\n'}
[0.876301] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.876329] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.876357] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.876385] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.876412] (igus_rebel) StdoutLine: {'line': b'5: -                unprocessedMessages.push_front(\n'}
[0.876440] (igus_rebel) StdoutLine: {'line': b'5: +      std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.876467] (igus_rebel) StdoutLine: {'line': b'5: +      unprocessedMessages.push_front(\n'}
[0.876495] (igus_rebel) StdoutLine: {'line': b'5: @@ -119 +110,29 @@\n'}
[0.876522] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.876553] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.876583] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.876610] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.876638] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876665] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::ReceiveThreadFunction()\n'}
[0.876693] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.876720] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to receive messages from robot.");\n'}
[0.876749] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876777] (igus_rebel) StdoutLine: {'line': b'5: +  char buffer[bufferSize * 2] = {0};\n'}
[0.876804] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876831] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueReceive) {\n'}
[0.876858] (igus_rebel) StdoutLine: {'line': b'5: +    if (connectionNeeded) {\n'}
[0.876885] (igus_rebel) StdoutLine: {'line': b'5: +      MakeConnection();\n'}
[0.876912] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.876938] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876966] (igus_rebel) StdoutLine: {'line': b'5: +    int valread = read(sock, buffer + fragmentLength, bufferSize);\n'}
[0.876994] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.877022] (igus_rebel) StdoutLine: {'line': b'5: +    if (!IsSocketOk()) {\n'}
[0.877050] (igus_rebel) StdoutLine: {'line': b'5: +      connectionNeeded = true;\n'}
[0.877077] (igus_rebel) StdoutLine: {'line': b'5: +    } else {\n'}
[0.877104] (igus_rebel) StdoutLine: {'line': b'5: +      if (valread == 0) {\n'}
[0.877132] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Empty message received");\n'}
[0.877159] (igus_rebel) StdoutLine: {'line': b'5: +        connectionNeeded = true;\n'}
[0.877187] (igus_rebel) StdoutLine: {'line': b'5: +      } else {\n'}
[0.877215] (igus_rebel) StdoutLine: {'line': b'5: +        if (fragmentLength > 0) {\n'}
[0.877242] (igus_rebel) StdoutLine: {'line': b'5: +          for (int i = 0; i < fragmentLength; i++) {\n'}
[0.877270] (igus_rebel) StdoutLine: {'line': b'5: +            buffer[i] = fragmentBuffer[i];\n'}
[0.877297] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.877324] (igus_rebel) StdoutLine: {'line': b'5: +          fragmentLength = 0;\n'}
[0.877357] (igus_rebel) StdoutLine: {'line': b'5: @@ -121,46 +140,4 @@\n'}
[0.877385] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.877412] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.877440] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::ReceiveThreadFunction()\n'}
[0.877470] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.877498] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to receive messages from robot.");\n'}
[0.877526] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.877558] (igus_rebel) StdoutLine: {'line': b'5: -        char buffer[bufferSize * 2] = {0};\n'}
[0.877588] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.877616] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueReceive)\n'}
[0.877644] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.877671] (igus_rebel) StdoutLine: {'line': b'5: -            if (connectionNeeded)\n'}
[0.877699] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.877727] (igus_rebel) StdoutLine: {'line': b'5: -                MakeConnection();\n'}
[0.877755] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.877782] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.877810] (igus_rebel) StdoutLine: {'line': b'5: -            int valread = read(sock, buffer + fragmentLength, bufferSize);\n'}
[0.877838] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.877868] (igus_rebel) StdoutLine: {'line': b'5: -            if (!IsSocketOk())\n'}
[0.877898] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.877926] (igus_rebel) StdoutLine: {'line': b'5: -                connectionNeeded = true;\n'}
[0.877955] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.877983] (igus_rebel) StdoutLine: {'line': b'5: -            else\n'}
[0.878011] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.878039] (igus_rebel) StdoutLine: {'line': b'5: -                if (valread == 0)\n'}
[0.878068] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.878097] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Empty message received");\n'}
[0.878126] (igus_rebel) StdoutLine: {'line': b'5: -                    connectionNeeded = true;\n'}
[0.878154] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.878182] (igus_rebel) StdoutLine: {'line': b'5: -                else\n'}
[0.878211] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.878239] (igus_rebel) StdoutLine: {'line': b'5: -                    if (fragmentLength > 0)\n'}
[0.878268] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.878296] (igus_rebel) StdoutLine: {'line': b'5: -                        for (int i = 0; i < fragmentLength; i++)\n'}
[0.878326] (igus_rebel) StdoutLine: {'line': b'5: -                        {\n'}
[0.878355] (igus_rebel) StdoutLine: {'line': b'5: -                            buffer[i] = fragmentBuffer[i];\n'}
[0.878385] (igus_rebel) StdoutLine: {'line': b'5: -                        }\n'}
[0.878415] (igus_rebel) StdoutLine: {'line': b'5: -                        fragmentLength = 0;\n'}
[0.878444] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.878472] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.878500] (igus_rebel) StdoutLine: {'line': b'5: -                    SeparateMessages(buffer);\n'}
[0.878529] (igus_rebel) StdoutLine: {'line': b'5: -                    for (int i = 0; i < bufferSize * 2; i++)\n'}
[0.878562] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.878592] (igus_rebel) StdoutLine: {'line': b'5: -                        buffer[i] = 0;\n'}
[0.878621] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.878649] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.878678] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.878705] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.878733] (igus_rebel) StdoutLine: {'line': b'5: +        SeparateMessages(buffer);\n'}
[0.878761] (igus_rebel) StdoutLine: {'line': b'5: +        for (int i = 0; i < bufferSize * 2; i++) {\n'}
[0.878788] (igus_rebel) StdoutLine: {'line': b'5: +          buffer[i] = 0;\n'}
[0.878816] (igus_rebel) StdoutLine: {'line': b'5: @@ -168,3 +145,6 @@\n'}
[0.878846] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.878874] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to receive messages from robot.");\n'}
[0.878902] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.878931] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.878959] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.878987] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.879015] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.879044] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to receive messages from robot.");\n'}
[0.879072] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.879099] (igus_rebel) StdoutLine: {'line': b'5: @@ -175,42 +155,41 @@\n'}
[0.879128] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::ListCheckThreadFunction()\n'}
[0.879158] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.879186] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to check if the message list is being processed.");\n'}
[0.879215] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.879242] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueReceive)\n'}
[0.879269] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.879297] (igus_rebel) StdoutLine: {'line': b'5: -            if (unprocessedMessages.size() > maxUnprocessedMessages)\n'}
[0.879324] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.879352] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Robot messages are not processed fast enough. Discarding messages.");\n'}
[0.879382] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.879410] (igus_rebel) StdoutLine: {'line': b'5: -                while (unprocessedMessages.size() > (maxUnprocessedMessages * 0.9))\n'}
[0.879439] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.879467] (igus_rebel) StdoutLine: {'line': b'5: -                    unprocessedMessages.pop_back();\n'}
[0.879495] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.879522] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.879554] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.879590] (igus_rebel) StdoutLine: {'line': b'5: -            std::this_thread::sleep_for(std::chrono::milliseconds(listCheckWaitMs));\n'}
[0.879618] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.879647] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.879676] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to check if the message list is being processed.");\n'}
[0.879704] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.879733] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.879761] (igus_rebel) StdoutLine: {'line': b'5: -    bool RebelSocket::IsSocketOk()\n'}
[0.879790] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.879819] (igus_rebel) StdoutLine: {'line': b'5: -        int error = 0;\n'}
[0.879848] (igus_rebel) StdoutLine: {'line': b'5: -        socklen_t len = sizeof(error);\n'}
[0.879876] (igus_rebel) StdoutLine: {'line': b'5: -        int retval = getsockopt(sock, SOL_SOCKET, SO_ERROR, &error, &len);\n'}
[0.879904] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.879932] (igus_rebel) StdoutLine: {'line': b'5: -        if (retval != 0)\n'}
[0.879960] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.879988] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error getting socket error code: %s", strerror(retval));\n'}
[0.880017] (igus_rebel) StdoutLine: {'line': b'5: -            return false;\n'}
[0.880044] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.880072] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.880099] (igus_rebel) StdoutLine: {'line': b'5: -        if (error != 0)\n'}
[0.880128] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.880156] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket error: %s", strerror(error));\n'}
[0.880187] (igus_rebel) StdoutLine: {'line': b'5: -            return false;\n'}
[0.880214] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.880243] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.880270] (igus_rebel) StdoutLine: {'line': b'5: -        return true;\n'}
[0.880298] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.880326] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::ListCheckThreadFunction()\n'}
[0.880352] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.880380] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"),\n'}
[0.880409] (igus_rebel) StdoutLine: {'line': b'5: +      "Starting to check if the message list is being processed.");\n'}
[0.880437] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880464] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueReceive) {\n'}
[0.880491] (igus_rebel) StdoutLine: {'line': b'5: +    if (unprocessedMessages.size() > maxUnprocessedMessages) {\n'}
[0.880519] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_WARN(rclcpp::get_logger("igus_rebel"),\n'}
[0.880551] (igus_rebel) StdoutLine: {'line': b'5: +          "Robot messages are not processed fast enough. Discarding messages.");\n'}
[0.880583] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880611] (igus_rebel) StdoutLine: {'line': b'5: +      while (unprocessedMessages.size() > (maxUnprocessedMessages * 0.9)) {\n'}
[0.880639] (igus_rebel) StdoutLine: {'line': b'5: +        unprocessedMessages.pop_back();\n'}
[0.880667] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.880695] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.880723] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880751] (igus_rebel) StdoutLine: {'line': b'5: +    std::this_thread::sleep_for(std::chrono::milliseconds(listCheckWaitMs));\n'}
[0.880778] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.880806] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880834] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"),\n'}
[0.880862] (igus_rebel) StdoutLine: {'line': b'5: +      "Stopped to check if the message list is being processed.");\n'}
[0.880890] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.880918] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880946] (igus_rebel) StdoutLine: {'line': b'5: +bool RebelSocket::IsSocketOk()\n'}
[0.880973] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.881000] (igus_rebel) StdoutLine: {'line': b'5: +  int error = 0;\n'}
[0.881028] (igus_rebel) StdoutLine: {'line': b'5: +  socklen_t len = sizeof(error);\n'}
[0.881057] (igus_rebel) StdoutLine: {'line': b'5: +  int retval = getsockopt(sock, SOL_SOCKET, SO_ERROR, &error, &len);\n'}
[0.881085] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.881114] (igus_rebel) StdoutLine: {'line': b'5: +  if (retval != 0) {\n'}
[0.881142] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error getting socket error code: %s",\n'}
[0.881170] (igus_rebel) StdoutLine: {'line': b'5: +        strerror(retval));\n'}
[0.881197] (igus_rebel) StdoutLine: {'line': b'5: +    return false;\n'}
[0.881224] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.881251] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.881278] (igus_rebel) StdoutLine: {'line': b'5: +  if (error != 0) {\n'}
[0.881305] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket error: %s", strerror(error));\n'}
[0.881332] (igus_rebel) StdoutLine: {'line': b'5: +    return false;\n'}
[0.881359] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.881387] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.881414] (igus_rebel) StdoutLine: {'line': b'5: +  return true;\n'}
[0.881442] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.881476] (igus_rebel) StdoutLine: {'line': b'5: @@ -221,67 +200,61 @@\n'}
[0.881504] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::Start()\n'}
[0.881531] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.881567] (igus_rebel) StdoutLine: {'line': b'5: -        connectionNeeded = true;\n'}
[0.881599] (igus_rebel) StdoutLine: {'line': b'5: -        continueReceive = true;\n'}
[0.881628] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.881657] (igus_rebel) StdoutLine: {'line': b'5: -        listCheckThread = std::thread(&RebelSocket::ListCheckThreadFunction, this);\n'}
[0.881686] (igus_rebel) StdoutLine: {'line': b'5: -        receiveThread = std::thread(&RebelSocket::ReceiveThreadFunction, this);\n'}
[0.881714] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.881743] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.881770] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::Stop()\n'}
[0.881799] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.881828] (igus_rebel) StdoutLine: {'line': b'5: -        connectionNeeded = false;\n'}
[0.881856] (igus_rebel) StdoutLine: {'line': b'5: -        continueReceive = false;\n'}
[0.881886] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.881914] (igus_rebel) StdoutLine: {'line': b'5: -        if (receiveThread.joinable())\n'}
[0.881943] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.881971] (igus_rebel) StdoutLine: {'line': b'5: -            receiveThread.join();\n'}
[0.881999] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.882028] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882057] (igus_rebel) StdoutLine: {'line': b'5: -        if (listCheckThread.joinable())\n'}
[0.882085] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.882113] (igus_rebel) StdoutLine: {'line': b'5: -            listCheckThread.join();\n'}
[0.882142] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.882170] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.882199] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882227] (igus_rebel) StdoutLine: {'line': b'5: -    bool RebelSocket::HasMessage()\n'}
[0.882256] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.882284] (igus_rebel) StdoutLine: {'line': b'5: -        return unprocessedMessages.size() > 0;\n'}
[0.882312] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.882340] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882367] (igus_rebel) StdoutLine: {'line': b'5: -    std::string RebelSocket::GetMessage()\n'}
[0.882395] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.882423] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.882451] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882478] (igus_rebel) StdoutLine: {'line': b'5: -        if (!HasMessage())\n'}
[0.882505] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.882533] (igus_rebel) StdoutLine: {'line': b'5: -            return "";\n'}
[0.882565] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.882594] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882622] (igus_rebel) StdoutLine: {'line': b'5: -        std::string msg = unprocessedMessages.back();\n'}
[0.882651] (igus_rebel) StdoutLine: {'line': b'5: -        unprocessedMessages.pop_back();\n'}
[0.882678] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882707] (igus_rebel) StdoutLine: {'line': b'5: -        return msg;\n'}
[0.882735] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.882763] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882790] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::SendMessage(const std::string &msg)\n'}
[0.882821] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.882849] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(socketWriteLock);\n'}
[0.882878] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882905] (igus_rebel) StdoutLine: {'line': b'5: -        if (connectionNeeded)\n'}
[0.882933] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.882960] (igus_rebel) StdoutLine: {'line': b'5: -            MakeConnection();\n'}
[0.882988] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.883016] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.883044] (igus_rebel) StdoutLine: {'line': b'5: -        int sent = send(sock, msg.c_str(), msg.length(), 0);\n'}
[0.883072] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.883102] (igus_rebel) StdoutLine: {'line': b'5: -        if (!IsSocketOk())\n'}
[0.883130] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.883158] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = true;\n'}
[0.883186] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.883214] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.883242] (igus_rebel) StdoutLine: {'line': b'5: -        if (sent < 0)\n'}
[0.883271] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.883299] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = true;\n'}
[0.883328] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.883356] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.883384] (igus_rebel) StdoutLine: {'line': b'5: -}\n'}
[0.883412] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::Start()\n'}
[0.883441] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.883468] (igus_rebel) StdoutLine: {'line': b'5: +  connectionNeeded = true;\n'}
[0.883497] (igus_rebel) StdoutLine: {'line': b'5: +  continueReceive = true;\n'}
[0.883525] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883556] (igus_rebel) StdoutLine: {'line': b'5: +  listCheckThread = std::thread(&RebelSocket::ListCheckThreadFunction, this);\n'}
[0.883590] (igus_rebel) StdoutLine: {'line': b'5: +  receiveThread = std::thread(&RebelSocket::ReceiveThreadFunction, this);\n'}
[0.883618] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.883646] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883673] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::Stop()\n'}
[0.883702] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.883730] (igus_rebel) StdoutLine: {'line': b'5: +  connectionNeeded = false;\n'}
[0.883758] (igus_rebel) StdoutLine: {'line': b'5: +  continueReceive = false;\n'}
[0.883786] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883813] (igus_rebel) StdoutLine: {'line': b'5: +  if (receiveThread.joinable()) {\n'}
[0.883842] (igus_rebel) StdoutLine: {'line': b'5: +    receiveThread.join();\n'}
[0.883870] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.883897] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883926] (igus_rebel) StdoutLine: {'line': b'5: +  if (listCheckThread.joinable()) {\n'}
[0.883953] (igus_rebel) StdoutLine: {'line': b'5: +    listCheckThread.join();\n'}
[0.883981] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.884008] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.884036] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884063] (igus_rebel) StdoutLine: {'line': b'5: +bool RebelSocket::HasMessage()\n'}
[0.884092] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.884120] (igus_rebel) StdoutLine: {'line': b'5: +  return unprocessedMessages.size() > 0;\n'}
[0.884148] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.884177] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884205] (igus_rebel) StdoutLine: {'line': b'5: +std::string RebelSocket::GetMessage()\n'}
[0.884233] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.884261] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.884288] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884316] (igus_rebel) StdoutLine: {'line': b'5: +  if (!HasMessage()) {\n'}
[0.884344] (igus_rebel) StdoutLine: {'line': b'5: +    return "";\n'}
[0.884372] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.884400] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884430] (igus_rebel) StdoutLine: {'line': b'5: +  std::string msg = unprocessedMessages.back();\n'}
[0.884460] (igus_rebel) StdoutLine: {'line': b'5: +  unprocessedMessages.pop_back();\n'}
[0.884488] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884515] (igus_rebel) StdoutLine: {'line': b'5: +  return msg;\n'}
[0.884543] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.884575] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884604] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::SendMessage(const std::string & msg)\n'}
[0.884633] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.884660] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(socketWriteLock);\n'}
[0.884690] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884718] (igus_rebel) StdoutLine: {'line': b'5: +  if (connectionNeeded) {\n'}
[0.884747] (igus_rebel) StdoutLine: {'line': b'5: +    MakeConnection();\n'}
[0.884775] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.884803] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884831] (igus_rebel) StdoutLine: {'line': b'5: +  int sent = send(sock, msg.c_str(), msg.length(), 0);\n'}
[0.884859] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884886] (igus_rebel) StdoutLine: {'line': b'5: +  if (!IsSocketOk()) {\n'}
[0.884914] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = true;\n'}
[0.884942] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.884969] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.884997] (igus_rebel) StdoutLine: {'line': b'5: +  if (sent < 0) {\n'}
[0.885026] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = true;\n'}
[0.885054] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.885082] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.885109] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.885136] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.885163] (igus_rebel) StdoutLine: {'line': b'5: 7 files with code style divergence\n'}
[0.885191] (igus_rebel) StdoutLine: {'line': b'5: -- run_test.py: return code 1\n'}
[0.885218] (igus_rebel) StdoutLine: {'line': b"5: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml'\n"}
[0.885246] (igus_rebel) StdoutLine: {'line': b'5/6 Test #5: uncrustify .......................***Failed    0.24 sec\n'}
[0.885276] (igus_rebel) StdoutLine: {'line': b'test 6\n'}
[0.885304] (igus_rebel) StdoutLine: {'line': b'    Start 6: xmllint\n'}
[0.885332] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.885362] (igus_rebel) StdoutLine: {'line': b'6: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_xmllint/xmllint.txt" "--command" "/opt/ros/jazzy/bin/ament_xmllint" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml"\n'}
[0.885394] (igus_rebel) StdoutLine: {'line': b'6: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.885423] (igus_rebel) StdoutLine: {'line': b'6: Test timeout computed to be: 60\n'}
[0.885451] (igus_rebel) StdoutLine: {'line': b"6: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.885479] (igus_rebel) StdoutLine: {'line': b'6:  - /opt/ros/jazzy/bin/ament_xmllint --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml\n'}
[0.900823] (-) TimerEvent: {}
[1.001016] (-) TimerEvent: {}
[1.101299] (-) TimerEvent: {}
[1.201782] (-) TimerEvent: {}
[1.253200] (igus_rebel) StdoutLine: {'line': b"6: File 'package.xml' is valid\n"}
[1.253393] (igus_rebel) StdoutLine: {'line': b'6: \n'}
[1.253448] (igus_rebel) StdoutLine: {'line': b"6: File 'rebel.xml' is valid\n"}
[1.253497] (igus_rebel) StdoutLine: {'line': b'6: \n'}
[1.253545] (igus_rebel) StdoutLine: {'line': b'6: No problems found\n'}
[1.261379] (igus_rebel) StdoutLine: {'line': b'6: -- run_test.py: return code 0\n'}
[1.261541] (igus_rebel) StdoutLine: {'line': b"6: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml'\n"}
[1.269277] (igus_rebel) StdoutLine: {'line': b'6/6 Test #6: xmllint ..........................   Passed    0.48 sec\n'}
[1.269834] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.269997] (igus_rebel) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m3 tests failed\x1b[0;0m out of 6\n'}
[1.270125] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.270252] (igus_rebel) StdoutLine: {'line': b'Label Time Summary:\n'}
[1.270388] (igus_rebel) StdoutLine: {'line': b'cppcheck      =   0.11 sec*proc (1 test)\n'}
[1.270500] (igus_rebel) StdoutLine: {'line': b'flake8        =   0.17 sec*proc (1 test)\n'}
[1.270622] (igus_rebel) StdoutLine: {'line': b'lint_cmake    =   0.09 sec*proc (1 test)\n'}
[1.270735] (igus_rebel) StdoutLine: {'line': b'linter        =   1.22 sec*proc (6 tests)\n'}
[1.270845] (igus_rebel) StdoutLine: {'line': b'pep257        =   0.12 sec*proc (1 test)\n'}
[1.270954] (igus_rebel) StdoutLine: {'line': b'uncrustify    =   0.24 sec*proc (1 test)\n'}
[1.271058] (igus_rebel) StdoutLine: {'line': b'xmllint       =   0.48 sec*proc (1 test)\n'}
[1.271153] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.271252] (igus_rebel) StdoutLine: {'line': b'Total Test time (real) =   1.22 sec\n'}
[1.271354] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.271447] (igus_rebel) StdoutLine: {'line': b'The following tests FAILED:\n'}
[1.271513] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  2 - flake8 (Failed)\x1b[0;0m\n'}
[1.271588] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  3 - lint_cmake (Failed)\x1b[0;0m\n'}
[1.271653] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  5 - uncrustify (Failed)\x1b[0;0m\n'}
[1.275281] (igus_rebel) StderrLine: {'line': b'Errors while running CTest\n'}
[1.275371] (igus_rebel) StderrLine: {'line': b'Output from these tests are in: /home/amrl-linux24-04/ros2_ben/build/igus_rebel/Testing/Temporary/LastTest.log\n'}
[1.275417] (igus_rebel) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[1.276665] (igus_rebel) CommandEnded: {'returncode': 8}
[1.276924] (igus_rebel) TestFailure: {'identifier': 'igus_rebel'}
[1.276936] (igus_rebel) JobEnded: {'identifier': 'igus_rebel', 'rc': 0}
[1.278339] (-) EventReactorShutdown: {}
