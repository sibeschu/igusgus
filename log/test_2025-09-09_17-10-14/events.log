[0.000000] (-) TimerEvent: {}
[0.000416] (igus_rebel_description) JobQueued: {'identifier': 'igus_rebel_description', 'dependencies': OrderedDict({'igus_rebel_description': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description'})}
[0.000545] (igus_rebel_msgs) JobQueued: {'identifier': 'igus_rebel_msgs', 'dependencies': OrderedDict({'igus_rebel_msgs': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs'})}
[0.000575] (igus_rebel) JobQueued: {'identifier': 'igus_rebel', 'dependencies': OrderedDict({'igus_rebel_msgs': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs', 'igus_rebel': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel'})}
[0.000596] (igus_rebel_moveit_config) JobQueued: {'identifier': 'igus_rebel_moveit_config', 'dependencies': OrderedDict({'igus_rebel_description': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description', 'igus_rebel_moveit_config': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_moveit_config'})}
[0.000622] (igus_rebel_description) JobStarted: {'identifier': 'igus_rebel_description'}
[0.004930] (igus_rebel_msgs) JobStarted: {'identifier': 'igus_rebel_msgs'}
[0.019768] (igus_rebel_description) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'amrl-linux24-04', 'XDG_SESSION_TYPE': 'wayland', 'ROS_APT_SOURCE_VERSION': '1.1.0', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/amrl-linux24-04', 'OLDPWD': '/home/amrl-linux24-04', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '2178', 'SYSTEMD_EXEC_PID': '2614', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3989', 'GNOME_KEYRING_CONTROL': '/run/user/1000/keyring', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'amrl-linux24-04', 'JOURNAL_STREAM': '9:27789', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.SettingsDaemon.MediaKeys.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'amrl-linux24-04', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/amrl-linux24-04-ThinkPad-E16-Gen-2:@/tmp/.ICE-unix/2401,unix/amrl-linux24-04-ThinkPad-E16-Gen-2:/tmp/.ICE-unix/2401', 'INVOCATION_ID': 'a8c54b4195194d3a83d59bc6c61c007c', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.UJD3C3', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:5a724dbf-67e5-4a1e-9f78-8a4d2b7bcf90', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_description:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[0.023480] (igus_rebel_msgs) JobEnded: {'identifier': 'igus_rebel_msgs', 'rc': 0}
[0.023666] (igus_rebel) JobStarted: {'identifier': 'igus_rebel'}
[0.026314] (igus_rebel_description) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.026451] (igus_rebel_description) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.026964] (igus_rebel_description) StdoutLine: {'line': b'   Site: amrl-linux24-04-ThinkPad-E16-Gen-2\n'}
[0.028400] (igus_rebel_description) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.028751] (igus_rebel_description) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.028840] (igus_rebel_description) StdoutLine: {'line': b'Create new tag: 20250909-1510 - Experimental\n'}
[0.028916] (igus_rebel_description) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.028959] (igus_rebel_description) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/CTestConfiguration.ini\n'}
[0.029002] (igus_rebel_description) StdoutLine: {'line': b'Test project /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description\n'}
[0.029043] (igus_rebel_description) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.029084] (igus_rebel_description) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.029125] (igus_rebel_description) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.029162] (igus_rebel_description) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.029200] (igus_rebel_description) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.029303] (igus_rebel_description) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.029342] (igus_rebel_description) StdoutLine: {'line': b'test 1\n'}
[0.029380] (igus_rebel_description) StdoutLine: {'line': b'    Start 1: lint_cmake\n'}
[0.029424] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.029464] (igus_rebel_description) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml" "--package-name" "igus_rebel_description" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/jazzy/bin/ament_lint_cmake" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml"\n'}
[0.029506] (igus_rebel_description) StdoutLine: {'line': b'1: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description\n'}
[0.029545] (igus_rebel_description) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.044446] (igus_rebel) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'amrl-linux24-04', 'XDG_SESSION_TYPE': 'wayland', 'ROS_APT_SOURCE_VERSION': '1.1.0', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel/lib:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/amrl-linux24-04', 'OLDPWD': '/home/amrl-linux24-04', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'MANAGERPID': '2178', 'SYSTEMD_EXEC_PID': '2614', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3989', 'GNOME_KEYRING_CONTROL': '/run/user/1000/keyring', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'amrl-linux24-04', 'JOURNAL_STREAM': '9:27789', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.SettingsDaemon.MediaKeys.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'amrl-linux24-04', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/amrl-linux24-04-ThinkPad-E16-Gen-2:@/tmp/.ICE-unix/2401,unix/amrl-linux24-04-ThinkPad-E16-Gen-2:/tmp/.ICE-unix/2401', 'INVOCATION_ID': 'a8c54b4195194d3a83d59bc6c61c007c', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.UJD3C3', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:5a724dbf-67e5-4a1e-9f78-8a4d2b7bcf90', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/amrl-linux24-04/ros2_ben/build/igus_rebel', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs/lib/python3.12/site-packages:/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/amrl-linux24-04/ros2_ben/install/igus_rebel:/home/amrl-linux24-04/ros2_ben/install/igus_rebel_msgs:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[0.048855] (igus_rebel) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.049033] (igus_rebel) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.049112] (igus_rebel) StdoutLine: {'line': b'   Site: amrl-linux24-04-ThinkPad-E16-Gen-2\n'}
[0.049178] (igus_rebel) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.049242] (igus_rebel) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.049328] (igus_rebel) StdoutLine: {'line': b'Create new tag: 20250909-1510 - Experimental\n'}
[0.049384] (igus_rebel) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.049437] (igus_rebel) StdoutLine: {'line': b'Parse Config file:/home/amrl-linux24-04/ros2_ben/build/igus_rebel/CTestConfiguration.ini\n'}
[0.049495] (igus_rebel) StdoutLine: {'line': b'Test project /home/amrl-linux24-04/ros2_ben/build/igus_rebel\n'}
[0.049549] (igus_rebel) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.049646] (igus_rebel) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.049724] (igus_rebel) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.049786] (igus_rebel) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.049840] (igus_rebel) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.049890] (igus_rebel) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.049941] (igus_rebel) StdoutLine: {'line': b'test 1\n'}
[0.049989] (igus_rebel) StdoutLine: {'line': b'    Start 1: cppcheck\n'}
[0.050034] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.050082] (igus_rebel) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_cppcheck/cppcheck.txt" "--command" "/opt/ros/jazzy/bin/ament_cppcheck" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml" "--include_dirs" "/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel/include"\n'}
[0.050135] (igus_rebel) StdoutLine: {'line': b'1: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.050190] (igus_rebel) StdoutLine: {'line': b'1: Test timeout computed to be: 300\n'}
[0.065380] (igus_rebel_description) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description':\n"}
[0.065491] (igus_rebel_description) StdoutLine: {'line': b'1:  - /opt/ros/jazzy/bin/ament_lint_cmake --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml\n'}
[0.089266] (igus_rebel) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.089404] (igus_rebel) StdoutLine: {'line': b'1:  - /opt/ros/jazzy/bin/ament_cppcheck --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml --include_dirs /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel/include\n'}
[0.099697] (-) TimerEvent: {}
[0.111449] (igus_rebel_description) StdoutLine: {'line': b'1: \n'}
[0.111606] (igus_rebel_description) StdoutLine: {'line': b'1: No problems found\n'}
[0.118410] (igus_rebel_description) StdoutLine: {'line': b'1: -- run_test.py: return code 0\n'}
[0.118505] (igus_rebel_description) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/lint_cmake.xunit.xml'\n"}
[0.124944] (igus_rebel_description) StdoutLine: {'line': b'1/2 Test #1: lint_cmake .......................   Passed    0.10 sec\n'}
[0.125037] (igus_rebel_description) StdoutLine: {'line': b'test 2\n'}
[0.125073] (igus_rebel_description) StdoutLine: {'line': b'    Start 2: xmllint\n'}
[0.125105] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.125138] (igus_rebel_description) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml" "--package-name" "igus_rebel_description" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/ament_xmllint/xmllint.txt" "--command" "/opt/ros/jazzy/bin/ament_xmllint" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml"\n'}
[0.125174] (igus_rebel_description) StdoutLine: {'line': b'2: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description\n'}
[0.125207] (igus_rebel_description) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.138371] (igus_rebel) StdoutLine: {'line': b'1: cppcheck 2.13.0 has known performance issues and therefore will not be used, set the AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS environment variable to override this.\n'}
[0.146217] (igus_rebel) StdoutLine: {'line': b'1: -- run_test.py: return code 0\n'}
[0.146343] (igus_rebel) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/cppcheck.xunit.xml'\n"}
[0.156802] (igus_rebel) StdoutLine: {'line': b'1/6 Test #1: cppcheck .........................   Passed    0.11 sec\n'}
[0.156886] (igus_rebel) StdoutLine: {'line': b'test 2\n'}
[0.156945] (igus_rebel) StdoutLine: {'line': b'    Start 2: flake8\n'}
[0.157009] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.157046] (igus_rebel) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_flake8/flake8.txt" "--command" "/opt/ros/jazzy/bin/ament_flake8" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml"\n'}
[0.157084] (igus_rebel) StdoutLine: {'line': b'2: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.157116] (igus_rebel) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.162282] (igus_rebel_description) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel_description':\n"}
[0.162401] (igus_rebel_description) StdoutLine: {'line': b'2:  - /opt/ros/jazzy/bin/ament_xmllint --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml\n'}
[0.191563] (igus_rebel) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.191686] (igus_rebel) StdoutLine: {'line': b'2:  - /opt/ros/jazzy/bin/ament_flake8 --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml\n'}
[0.199789] (-) TimerEvent: {}
[0.300039] (-) TimerEvent: {}
[0.318920] (igus_rebel) StdoutLine: {'line': b'2: from launch.substitutions import Command, FindExecutable, LaunchConfiguration\n'}
[0.319117] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.319210] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.319290] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.319360] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.319437] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.319506] (igus_rebel) StdoutLine: {'line': b'2: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[0.319574] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.319640] (igus_rebel) StdoutLine: {'line': b'2: from launch.launch_description_sources import PythonLaunchDescriptionSource\n'}
[0.319717] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.319783] (igus_rebel) StdoutLine: {'line': b'2: from ament_index_python.packages import get_package_share_directory\n'}
[0.319848] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.319916] (igus_rebel) StdoutLine: {'line': b'2: import os\n'}
[0.319981] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.320047] (igus_rebel) StdoutLine: {'line': b'2: import os\n'}
[0.320115] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.320183] (igus_rebel) StdoutLine: {'line': b'2:     env = {\n'}
[0.320251] (igus_rebel) StdoutLine: {'line': b'2:     ^\n'}
[0.320317] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.320384] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.320449] (igus_rebel) StdoutLine: {'line': b'2:         "hardware_protocol",\n'}
[0.320519] (igus_rebel) StdoutLine: {'line': b'2:         ^\n'}
[0.320589] (igus_rebel) StdoutLine: {'line': b'2:         default_value="rebel",\n'}
[0.320658] (igus_rebel) StdoutLine: {'line': b'2:                       ^\n'}
[0.320738] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.320813] (igus_rebel) StdoutLine: {'line': b'2:                  ^\n'}
[0.320883] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.320951] (igus_rebel) StdoutLine: {'line': b'2:                                   ^\n'}
[0.321269] (igus_rebel) StdoutLine: {'line': b'2:         choices=["mock_hardware", "gazebo", "rebel"],\n'}
[0.321343] (igus_rebel) StdoutLine: {'line': b'2:                                             ^\n'}
[0.321407] (igus_rebel) StdoutLine: {'line': b'2:         description="Which hardware protocol or mock hardware should be used",\n'}
[0.321548] (igus_rebel) StdoutLine: {'line': b'2:                     ^\n'}
[0.321599] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.321649] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321707] (igus_rebel) StdoutLine: {'line': b'2:     igus_rebel_pkg = get_package_share_directory("igus_rebel")\n'}
[0.321757] (igus_rebel) StdoutLine: {'line': b'2:                                                  ^\n'}
[0.321806] (igus_rebel) StdoutLine: {'line': b'2:     igus_rebel_desc_pkg = get_package_share_directory("igus_rebel_description")\n'}
[0.321856] (igus_rebel) StdoutLine: {'line': b'2:                                                       ^\n'}
[0.321900] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.321946] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.321991] (igus_rebel) StdoutLine: {'line': b'2:     controller_config_path = os.path.join(igus_rebel_pkg, "config", "controller.yaml")\n'}
[0.322038] (igus_rebel) StdoutLine: {'line': b'2:                                                           ^\n'}
[0.322082] (igus_rebel) StdoutLine: {'line': b'2:     controller_config_path = os.path.join(igus_rebel_pkg, "config", "controller.yaml")\n'}
[0.322127] (igus_rebel) StdoutLine: {'line': b'2:                                                                     ^\n'}
[0.322172] (igus_rebel) StdoutLine: {'line': b'2:     robot_description = {"robot_description" : Command(\n'}
[0.322218] (igus_rebel) StdoutLine: {'line': b'2:                          ^\n'}
[0.322264] (igus_rebel) StdoutLine: {'line': b'2:     robot_description = {"robot_description" : Command(\n'}
[0.322309] (igus_rebel) StdoutLine: {'line': b'2:                                             ^\n'}
[0.322355] (igus_rebel) StdoutLine: {'line': b'2:             FindExecutable(name="xacro"),\n'}
[0.322401] (igus_rebel) StdoutLine: {'line': b'2:                                 ^\n'}
[0.322436] (igus_rebel) StdoutLine: {'line': b'2:             " ",\n'}
[0.322465] (igus_rebel) StdoutLine: {'line': b'2:             ^\n'}
[0.322494] (igus_rebel) StdoutLine: {'line': b'2:             " hardware_protocol:=",\n'}
[0.322523] (igus_rebel) StdoutLine: {'line': b'2:             ^\n'}
[0.322551] (igus_rebel) StdoutLine: {'line': b'2:             LaunchConfiguration("hardware_protocol"),\n'}
[0.322581] (igus_rebel) StdoutLine: {'line': b'2:                                 ^\n'}
[0.322610] (igus_rebel) StdoutLine: {'line': b'2:         \n'}
[0.322640] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.322669] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.322702] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.322732] (igus_rebel) StdoutLine: {'line': b'2:         executable="ros2_control_node",\n'}
[0.322761] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.322790] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.322820] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.322849] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.322879] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.322907] (igus_rebel) StdoutLine: {'line': b'2:         package="robot_state_publisher",\n'}
[0.322941] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.322970] (igus_rebel) StdoutLine: {'line': b'2:         executable="robot_state_publisher",\n'}
[0.322999] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.323028] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.323057] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.323085] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.323114] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.323142] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.323174] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.323205] (igus_rebel) StdoutLine: {'line': b'2:         executable="spawner",\n'}
[0.323234] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.323262] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.323292] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.323320] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.323349] (igus_rebel) StdoutLine: {'line': b'2:                                               ^\n'}
[0.323378] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["joint_state_broadcaster", "--controller-manager", "/controller_manager"],\n'}
[0.323408] (igus_rebel) StdoutLine: {'line': b'2:                                                                       ^\n'}
[0.323437] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.323465] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.323523] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.323555] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.323586] (igus_rebel) StdoutLine: {'line': b'2:         package="controller_manager",\n'}
[0.323616] (igus_rebel) StdoutLine: {'line': b'2:                 ^\n'}
[0.323648] (igus_rebel) StdoutLine: {'line': b'2:         executable="spawner",\n'}
[0.323684] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.323716] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.323745] (igus_rebel) StdoutLine: {'line': b'2:                    ^\n'}
[0.323775] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.323803] (igus_rebel) StdoutLine: {'line': b'2:                                            ^\n'}
[0.323833] (igus_rebel) StdoutLine: {'line': b'2:         arguments=["rebel_arm_controller", "--controller-manager", "/controller_manager"],\n'}
[0.323862] (igus_rebel) StdoutLine: {'line': b'2:                                                                    ^\n'}
[0.323891] (igus_rebel) StdoutLine: {'line': b'2:         output="both",\n'}
[0.323919] (igus_rebel) StdoutLine: {'line': b'2:                ^\n'}
[0.323950] (igus_rebel) StdoutLine: {'line': b'2:     \n'}
[0.323979] (igus_rebel) StdoutLine: {'line': b'2: ^\n'}
[0.324009] (igus_rebel) StdoutLine: {'line': b'2:     ^\n'}
[0.324039] (igus_rebel) StdoutLine: {'line': b'2:         ^\n'}
[0.324068] (igus_rebel) StdoutLine: {'line': b"2: 1     E203 whitespace before ':'\n"}
[0.324098] (igus_rebel) StdoutLine: {'line': b"2: 2     F401 'launch.actions.IncludeLaunchDescription' imported but unused\n"}
[0.324128] (igus_rebel) StdoutLine: {'line': b"2: 1     F841 local variable 'env' is assigned to but never used\n"}
[0.324158] (igus_rebel) StdoutLine: {'line': b"2: 4     I100 Import statements are in the wrong order. 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration' should be before 'from launch_ros.actions import Node'\n"}
[0.324189] (igus_rebel) StdoutLine: {'line': b'2: 1     I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.324219] (igus_rebel) StdoutLine: {'line': b"2: 1     I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from ament_index_python.packages import get_package_share_directory' is identified as Third Party.\n"}
[0.324249] (igus_rebel) StdoutLine: {'line': b'2: 33    Q000 Double quotes found but single quotes preferred\n'}
[0.324279] (igus_rebel) StdoutLine: {'line': b'2: 1     W292 no newline at end of file\n'}
[0.324308] (igus_rebel) StdoutLine: {'line': b'2: 9     W293 blank line contains whitespace\n'}
[0.324338] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324370] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:3:1: I100 Import statements are in the wrong order. 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration' should be before 'from launch_ros.actions import Node'\n"}
[0.324401] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324431] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:4:1: I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[0.324462] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324490] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:4:1: I100 Import statements are in the wrong order. 'from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument' should be before 'from launch.substitutions import Command, FindExecutable, LaunchConfiguration'\n"}
[0.324523] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324550] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:4:1: F401 'launch.actions.IncludeLaunchDescription' imported but unused\n"}
[0.324579] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324607] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:5:1: F401 'launch.launch_description_sources.PythonLaunchDescriptionSource' imported but unused\n"}
[0.324635] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324663] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:6:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch.launch_description_sources import PythonLaunchDescriptionSource'\n"}
[0.324699] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324728] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:7:1: I100 Import statements are in the wrong order. 'import os' should be before 'from ament_index_python.packages import get_package_share_directory' and in a different group.\n"}
[0.324760] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324789] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:7:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from ament_index_python.packages import get_package_share_directory' is identified as Third Party.\n"}
[0.324819] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324848] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:11:5: F841 local variable 'env' is assigned to but never used\n"}
[0.324878] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324908] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:17:1: W293 blank line contains whitespace\n'}
[0.324937] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.324968] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:19:9: Q000 Double quotes found but single quotes preferred\n'}
[0.325000] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325028] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:20:23: Q000 Double quotes found but single quotes preferred\n'}
[0.325057] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325086] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:18: Q000 Double quotes found but single quotes preferred\n'}
[0.325114] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325141] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:35: Q000 Double quotes found but single quotes preferred\n'}
[0.325168] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325196] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:21:45: Q000 Double quotes found but single quotes preferred\n'}
[0.325223] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325251] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:22:21: Q000 Double quotes found but single quotes preferred\n'}
[0.325282] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325310] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:24:1: W293 blank line contains whitespace\n'}
[0.325338] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325365] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:25:50: Q000 Double quotes found but single quotes preferred\n'}
[0.325394] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325422] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:26:55: Q000 Double quotes found but single quotes preferred\n'}
[0.325450] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325478] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:27:1: W293 blank line contains whitespace\n'}
[0.325506] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325534] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:28:59: Q000 Double quotes found but single quotes preferred\n'}
[0.325562] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325590] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:28:69: Q000 Double quotes found but single quotes preferred\n'}
[0.325617] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325645] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:36:26: Q000 Double quotes found but single quotes preferred\n'}
[0.325676] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325707] (igus_rebel) StdoutLine: {'line': b"2: ./launch/rebel.launch.py:36:45: E203 whitespace before ':'\n"}
[0.325736] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325767] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:38:33: Q000 Double quotes found but single quotes preferred\n'}
[0.325795] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325822] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:39:13: Q000 Double quotes found but single quotes preferred\n'}
[0.325850] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325877] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:41:13: Q000 Double quotes found but single quotes preferred\n'}
[0.325905] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325934] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:42:33: Q000 Double quotes found but single quotes preferred\n'}
[0.325962] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.325990] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:45:1: W293 blank line contains whitespace\n'}
[0.326019] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326046] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:47:17: Q000 Double quotes found but single quotes preferred\n'}
[0.326073] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326102] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:48:20: Q000 Double quotes found but single quotes preferred\n'}
[0.326130] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326158] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:54:16: Q000 Double quotes found but single quotes preferred\n'}
[0.326187] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326214] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:56:1: W293 blank line contains whitespace\n'}
[0.326243] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326270] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:58:17: Q000 Double quotes found but single quotes preferred\n'}
[0.326298] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326326] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:59:20: Q000 Double quotes found but single quotes preferred\n'}
[0.326354] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326383] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:62:16: Q000 Double quotes found but single quotes preferred\n'}
[0.326410] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326436] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:64:1: W293 blank line contains whitespace\n'}
[0.326464] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326492] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:66:17: Q000 Double quotes found but single quotes preferred\n'}
[0.326519] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326546] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:67:20: Q000 Double quotes found but single quotes preferred\n'}
[0.326574] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326604] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:20: Q000 Double quotes found but single quotes preferred\n'}
[0.326633] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326661] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:47: Q000 Double quotes found but single quotes preferred\n'}
[0.326696] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326725] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:68:71: Q000 Double quotes found but single quotes preferred\n'}
[0.326755] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326783] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:69:16: Q000 Double quotes found but single quotes preferred\n'}
[0.326814] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326841] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:71:1: W293 blank line contains whitespace\n'}
[0.326868] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326895] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:73:17: Q000 Double quotes found but single quotes preferred\n'}
[0.326922] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.326949] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:74:20: Q000 Double quotes found but single quotes preferred\n'}
[0.326977] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327004] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:20: Q000 Double quotes found but single quotes preferred\n'}
[0.327034] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327061] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:44: Q000 Double quotes found but single quotes preferred\n'}
[0.327089] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327117] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:75:68: Q000 Double quotes found but single quotes preferred\n'}
[0.327144] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327171] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:76:16: Q000 Double quotes found but single quotes preferred\n'}
[0.327199] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327227] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:78:1: W293 blank line contains whitespace\n'}
[0.327254] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327282] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:86:1: W293 blank line contains whitespace\n'}
[0.327310] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327337] (igus_rebel) StdoutLine: {'line': b'2: ./launch/rebel.launch.py:86:5: W292 no newline at end of file\n'}
[0.327366] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327394] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327423] (igus_rebel) StdoutLine: {'line': b'2: 1 files checked\n'}
[0.327453] (igus_rebel) StdoutLine: {'line': b'2: 53 errors\n'}
[0.327481] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327509] (igus_rebel) StdoutLine: {'line': b"2: 'E'-type errors: 1\n"}
[0.327537] (igus_rebel) StdoutLine: {'line': b"2: 'F'-type errors: 3\n"}
[0.327564] (igus_rebel) StdoutLine: {'line': b"2: 'I'-type errors: 6\n"}
[0.327593] (igus_rebel) StdoutLine: {'line': b"2: 'Q'-type errors: 33\n"}
[0.327622] (igus_rebel) StdoutLine: {'line': b"2: 'W'-type errors: 10\n"}
[0.327650] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327684] (igus_rebel) StdoutLine: {'line': b'2: Checked files:\n'}
[0.327713] (igus_rebel) StdoutLine: {'line': b'2: \n'}
[0.327742] (igus_rebel) StdoutLine: {'line': b'2: * ./launch/rebel.launch.py\n'}
[0.332296] (igus_rebel) StdoutLine: {'line': b'2: -- run_test.py: return code 1\n'}
[0.332380] (igus_rebel) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/flake8.xunit.xml'\n"}
[0.338927] (igus_rebel) StdoutLine: {'line': b'2/6 Test #2: flake8 ...........................***Failed    0.18 sec\n'}
[0.338993] (igus_rebel) StdoutLine: {'line': b'test 3\n'}
[0.339024] (igus_rebel) StdoutLine: {'line': b'    Start 3: lint_cmake\n'}
[0.339054] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.339092] (igus_rebel) StdoutLine: {'line': b'3: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/jazzy/bin/ament_lint_cmake" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml"\n'}
[0.339126] (igus_rebel) StdoutLine: {'line': b'3: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.339158] (igus_rebel) StdoutLine: {'line': b'3: Test timeout computed to be: 60\n'}
[0.379324] (igus_rebel) StdoutLine: {'line': b"3: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.379491] (igus_rebel) StdoutLine: {'line': b'3:  - /opt/ros/jazzy/bin/ament_lint_cmake --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml\n'}
[0.400139] (-) TimerEvent: {}
[0.419934] (igus_rebel) StdoutLine: {'line': b'3: CMakeLists.txt:6: Line ends in whitespace [whitespace/eol]\n'}
[0.420128] (igus_rebel) StdoutLine: {'line': b'3: \n'}
[0.420209] (igus_rebel) StdoutLine: {'line': b'3: \n'}
[0.420280] (igus_rebel) StdoutLine: {'line': b'3: 1 errors\n'}
[0.426054] (igus_rebel) StdoutLine: {'line': b'3: -- run_test.py: return code 1\n'}
[0.426220] (igus_rebel) StdoutLine: {'line': b"3: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/lint_cmake.xunit.xml'\n"}
[0.443345] (igus_rebel) StdoutLine: {'line': b'3/6 Test #3: lint_cmake .......................***Failed    0.10 sec\n'}
[0.443485] (igus_rebel) StdoutLine: {'line': b'test 4\n'}
[0.443554] (igus_rebel) StdoutLine: {'line': b'    Start 4: pep257\n'}
[0.443609] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.443650] (igus_rebel) StdoutLine: {'line': b'4: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_pep257/pep257.txt" "--command" "/opt/ros/jazzy/bin/ament_pep257" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml"\n'}
[0.443704] (igus_rebel) StdoutLine: {'line': b'4: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.443745] (igus_rebel) StdoutLine: {'line': b'4: Test timeout computed to be: 60\n'}
[0.483966] (igus_rebel) StdoutLine: {'line': b"4: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.484046] (igus_rebel) StdoutLine: {'line': b'4:  - /opt/ros/jazzy/bin/ament_pep257 --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml\n'}
[0.500204] (-) TimerEvent: {}
[0.546070] (igus_rebel) StdoutLine: {'line': b'4: checking ./launch/rebel.launch.py\n'}
[0.546313] (igus_rebel) StdoutLine: {'line': b'4: No problems found\n'}
[0.555748] (igus_rebel) StdoutLine: {'line': b'4: -- run_test.py: return code 0\n'}
[0.555918] (igus_rebel) StdoutLine: {'line': b"4: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/pep257.xunit.xml'\n"}
[0.561787] (igus_rebel) StdoutLine: {'line': b'4/6 Test #4: pep257 ...........................   Passed    0.12 sec\n'}
[0.562139] (igus_rebel) StdoutLine: {'line': b'test 5\n'}
[0.562225] (igus_rebel) StdoutLine: {'line': b'    Start 5: uncrustify\n'}
[0.562298] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.562376] (igus_rebel) StdoutLine: {'line': b'5: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_uncrustify/uncrustify.txt" "--command" "/opt/ros/jazzy/bin/ament_uncrustify" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml"\n'}
[0.562474] (igus_rebel) StdoutLine: {'line': b'5: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.562543] (igus_rebel) StdoutLine: {'line': b'5: Test timeout computed to be: 60\n'}
[0.599839] (igus_rebel) StdoutLine: {'line': b"5: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.600004] (igus_rebel) StdoutLine: {'line': b'5:  - /opt/ros/jazzy/bin/ament_uncrustify --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml\n'}
[0.600277] (-) TimerEvent: {}
[0.700499] (-) TimerEvent: {}
[0.759760] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/CriKeywords.hpp':\n"}
[0.760807] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.760921] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/CriKeywords.hpp\n'}
[0.761165] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/CriKeywords.hpp.uncrustify\n'}
[0.761240] (igus_rebel) StdoutLine: {'line': b'5: @@ -8,4 +8,4 @@\n'}
[0.761313] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriKeywords\n'}
[0.761389] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.761463] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string START = "CRISTART";\n'}
[0.761537] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string END = "CRIEND";\n'}
[0.761610] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriKeywords\n'}
[0.761693] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.761770] (igus_rebel) StdoutLine: {'line': b'5: +const std::string START = "CRISTART";\n'}
[0.761841] (igus_rebel) StdoutLine: {'line': b'5: +const std::string END = "CRIEND";\n'}
[0.761912] (igus_rebel) StdoutLine: {'line': b'5: @@ -13,14 +13,14 @@\n'}
[0.761982] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_STATUS = "STATUS";\n'}
[0.762051] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_OPINFO = "OPINFO";\n'}
[0.762123] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_GSIG = "GSIG";\n'}
[0.762191] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_GRIPPERSTATE = "GRIPPERSTATE";\n'}
[0.762261] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_RUNSTATE = "RUNSTATE";\n'}
[0.762329] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_MESSAGE = "MESSAGE";\n'}
[0.762396] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMD = "CMD";\n'}
[0.762464] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CONFIG = "CONFIG";\n'}
[0.762533] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_INFO = "INFO";\n'}
[0.762603] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_LOGMSG = "LOGMSG";\n'}
[0.762668] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_VARIABLES = "VARIABLES";\n'}
[0.762748] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMDERROR = "CMDERROR";\n'}
[0.762817] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CMDACK = "CMDACK";\n'}
[0.762885] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string TYPE_CYCLESTAT = "CYCLESTAT";\n'}
[0.762956] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_STATUS = "STATUS";\n'}
[0.763023] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_OPINFO = "OPINFO";\n'}
[0.763091] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_GSIG = "GSIG";\n'}
[0.763158] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_GRIPPERSTATE = "GRIPPERSTATE";\n'}
[0.763224] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_RUNSTATE = "RUNSTATE";\n'}
[0.763578] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_MESSAGE = "MESSAGE";\n'}
[0.763649] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMD = "CMD";\n'}
[0.763730] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CONFIG = "CONFIG";\n'}
[0.763804] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_INFO = "INFO";\n'}
[0.763873] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_LOGMSG = "LOGMSG";\n'}
[0.763942] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_VARIABLES = "VARIABLES";\n'}
[0.764010] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMDERROR = "CMDERROR";\n'}
[0.764082] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CMDACK = "CMDACK";\n'}
[0.764151] (igus_rebel) StdoutLine: {'line': b'5: +const std::string TYPE_CYCLESTAT = "CYCLESTAT";\n'}
[0.764220] (igus_rebel) StdoutLine: {'line': b'5: @@ -28,15 +28,15 @@\n'}
[0.764289] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_MODE = "MODE";\n'}
[0.764361] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSJOINTSETPOINT = "POSJOINTSETPOINT";\n'}
[0.764431] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSJOINTCURRENT = "POSJOINTCURRENT";\n'}
[0.764502] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSCARTROBOT = "POSCARTROBOT";\n'}
[0.764570] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_POSCARTPLATTFORM = "POSCARTPLATTFORM";\n'}
[0.764640] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_OVERRIDE = "OVERRIDE";\n'}
[0.764676] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_DIN = "DIN";\n'}
[0.764713] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_DOUT = "DOUT";\n'}
[0.764746] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_ESTOP = "ESTOP";\n'}
[0.764780] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_SUPPLY = "SUPPLY";\n'}
[0.764812] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_CURRENTALL = "CURRENTALL";\n'}
[0.764846] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_CURRENTJOINTS = "CURRENTJOINTS";\n'}
[0.764880] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_ERROR = "ERROR";\n'}
[0.764913] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_KINSTATE = "KINSTATE";\n'}
[0.764946] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string STATUS_FRAMEROBOT = "FRAMEROBOT";\n'}
[0.764980] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_MODE = "MODE";\n'}
[0.765013] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSJOINTSETPOINT = "POSJOINTSETPOINT";\n'}
[0.765047] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSJOINTCURRENT = "POSJOINTCURRENT";\n'}
[0.765080] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSCARTROBOT = "POSCARTROBOT";\n'}
[0.765113] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_POSCARTPLATTFORM = "POSCARTPLATTFORM";\n'}
[0.765145] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_OVERRIDE = "OVERRIDE";\n'}
[0.765179] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_DIN = "DIN";\n'}
[0.765211] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_DOUT = "DOUT";\n'}
[0.765244] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_ESTOP = "ESTOP";\n'}
[0.765277] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_SUPPLY = "SUPPLY";\n'}
[0.765310] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_CURRENTALL = "CURRENTALL";\n'}
[0.765343] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_CURRENTJOINTS = "CURRENTJOINTS";\n'}
[0.765375] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_ERROR = "ERROR";\n'}
[0.765411] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_KINSTATE = "KINSTATE";\n'}
[0.765447] (igus_rebel) StdoutLine: {'line': b'5: +const std::string STATUS_FRAMEROBOT = "FRAMEROBOT";\n'}
[0.765483] (igus_rebel) StdoutLine: {'line': b'5: @@ -44,10 +44,10 @@\n'}
[0.765517] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_CONNECT = "Connect";\n'}
[0.765552] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_RESET = "Reset";\n'}
[0.765586] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_ENABLE = "Enable";\n'}
[0.765619] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DISABLE = "Disable";\n'}
[0.765653] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DISCONNECT = "Disconnect";\n'}
[0.765690] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_MOTIONTYPEJOINT = "MotionTypeJoint";\n'}
[0.765725] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_MOTIONTYPECARTBASE = "MotionTypeCartBase";\n'}
[0.765759] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_QUIT = "QUIT";\n'}
[0.765793] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_SETACTIVE = "SetActive";\n'}
[0.765826] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string COMMAND_DOUT = "DOUT";\n'}
[0.765859] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_CONNECT = "Connect";\n'}
[0.765893] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_RESET = "Reset";\n'}
[0.765926] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_ENABLE = "Enable";\n'}
[0.765959] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DISABLE = "Disable";\n'}
[0.765992] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DISCONNECT = "Disconnect";\n'}
[0.766025] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_MOTIONTYPEJOINT = "MotionTypeJoint";\n'}
[0.766059] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_MOTIONTYPECARTBASE = "MotionTypeCartBase";\n'}
[0.766091] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_QUIT = "QUIT";\n'}
[0.766125] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_SETACTIVE = "SetActive";\n'}
[0.766159] (igus_rebel) StdoutLine: {'line': b'5: +const std::string COMMAND_DOUT = "DOUT";\n'}
[0.766193] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,2 +55,2 @@\n'}
[0.766226] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string CONFIG_GETKINEMATICLIMITS = "GetKinematicLimits";\n'}
[0.766261] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string CONFIG_GETKINEMATICLIMITS_ANSWER = "KinematicLimits";\n'}
[0.766295] (igus_rebel) StdoutLine: {'line': b'5: +const std::string CONFIG_GETKINEMATICLIMITS = "GetKinematicLimits";\n'}
[0.766329] (igus_rebel) StdoutLine: {'line': b'5: +const std::string CONFIG_GETKINEMATICLIMITS_ANSWER = "KinematicLimits";\n'}
[0.766363] (igus_rebel) StdoutLine: {'line': b'5: @@ -58,5 +58,5 @@\n'}
[0.766396] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_JOINT = "joint";\n'}
[0.766429] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_CARTBASE = "cartbase";\n'}
[0.766463] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_CARTTOOL = "carttool";\n'}
[0.766496] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_PLATFORM = "platform";\n'}
[0.766529] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string MODE_FSM = "fsm";\n'}
[0.766561] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_JOINT = "joint";\n'}
[0.766595] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_CARTBASE = "cartbase";\n'}
[0.766628] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_CARTTOOL = "carttool";\n'}
[0.766661] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_PLATFORM = "platform";\n'}
[0.766699] (igus_rebel) StdoutLine: {'line': b'5: +const std::string MODE_FSM = "fsm";\n'}
[0.766733] (igus_rebel) StdoutLine: {'line': b'5: @@ -64,7 +64,7 @@\n'}
[0.766768] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_DEBUG = "DEBUG";\n'}
[0.766802] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_APP_INFO = "APP_INFO";\n'}
[0.766835] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_APP_ERROR = "APP_ERROR";\n'}
[0.766868] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_INFO = "INFO";\n'}
[0.766900] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_WARN = "WARN";\n'}
[0.766934] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_ERROR = "ERROR";\n'}
[0.766966] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string LOG_LEVEL_FATAL = "FATAL";\n'}
[0.766999] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_DEBUG = "DEBUG";\n'}
[0.767031] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_APP_INFO = "APP_INFO";\n'}
[0.767063] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_APP_ERROR = "APP_ERROR";\n'}
[0.767096] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_INFO = "INFO";\n'}
[0.767127] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_WARN = "WARN";\n'}
[0.767159] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_ERROR = "ERROR";\n'}
[0.767189] (igus_rebel) StdoutLine: {'line': b'5: +const std::string LOG_LEVEL_FATAL = "FATAL";\n'}
[0.767218] (igus_rebel) StdoutLine: {'line': b'5: @@ -72,3 +72,3 @@\n'}
[0.767249] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string VARIABLES_NR_VARIABLE = "ValueNrVariable";\n'}
[0.767280] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string VARIABLES_POS_VARIABLE = "ValuePosVariable";\n'}
[0.767310] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.767341] (igus_rebel) StdoutLine: {'line': b'5: +const std::string VARIABLES_NR_VARIABLE = "ValueNrVariable";\n'}
[0.767372] (igus_rebel) StdoutLine: {'line': b'5: +const std::string VARIABLES_POS_VARIABLE = "ValuePosVariable";\n'}
[0.767402] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.767433] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.767463] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/CriMessages.hpp':\n"}
[0.767493] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.767523] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/CriMessages.hpp\n'}
[0.767553] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/CriMessages.hpp.uncrustify\n'}
[0.767583] (igus_rebel) StdoutLine: {'line': b'5: @@ -21,238 +21,241 @@\n'}
[0.767613] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriMessages\n'}
[0.767647] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.767684] (igus_rebel) StdoutLine: {'line': b'5: -        enum class MessageType\n'}
[0.767718] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.767751] (igus_rebel) StdoutLine: {'line': b'5: -            STATUS,\n'}
[0.767783] (igus_rebel) StdoutLine: {'line': b'5: -            OPINFO,\n'}
[0.767815] (igus_rebel) StdoutLine: {'line': b'5: -            GSIG,\n'}
[0.767847] (igus_rebel) StdoutLine: {'line': b'5: -            GRIPPERSTATE,\n'}
[0.767878] (igus_rebel) StdoutLine: {'line': b'5: -            RUNSTATE,\n'}
[0.767909] (igus_rebel) StdoutLine: {'line': b'5: -            MESSAGE,\n'}
[0.767944] (igus_rebel) StdoutLine: {'line': b'5: -            CMD,\n'}
[0.767980] (igus_rebel) StdoutLine: {'line': b'5: -            CONFIG,\n'}
[0.768010] (igus_rebel) StdoutLine: {'line': b'5: -            INFO,\n'}
[0.768040] (igus_rebel) StdoutLine: {'line': b'5: -            LOGMSG,\n'}
[0.768070] (igus_rebel) StdoutLine: {'line': b'5: -            VARIABLES,\n'}
[0.768101] (igus_rebel) StdoutLine: {'line': b'5: -            CMDERROR,\n'}
[0.768131] (igus_rebel) StdoutLine: {'line': b'5: -            CMDACK,\n'}
[0.768160] (igus_rebel) StdoutLine: {'line': b'5: -            CYCLESTAT,\n'}
[0.768190] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.768222] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.768252] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.768282] (igus_rebel) StdoutLine: {'line': b'5: -        enum class Mode\n'}
[0.768314] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.768344] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT,\n'}
[0.768375] (igus_rebel) StdoutLine: {'line': b'5: -            CARTBASE,\n'}
[0.768405] (igus_rebel) StdoutLine: {'line': b'5: -            CARTTOOL,\n'}
[0.768435] (igus_rebel) StdoutLine: {'line': b'5: -            PLATFORM,\n'}
[0.768465] (igus_rebel) StdoutLine: {'line': b'5: -            FSM,\n'}
[0.768497] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.768530] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.768562] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.768593] (igus_rebel) StdoutLine: {'line': b'5: -        enum class Kinstate\n'}
[0.769316] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.769385] (igus_rebel) StdoutLine: {'line': b'5: -            NO_ERROR = 0,\n'}
[0.769441] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT_LIMIT_MIN = 13,\n'}
[0.769496] (igus_rebel) StdoutLine: {'line': b'5: -            JOINT_LIMIT_MAX = 14,\n'}
[0.769546] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_CENTER = 21,\n'}
[0.769596] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_REACH = 23,\n'}
[0.769647] (igus_rebel) StdoutLine: {'line': b'5: -            CARTESIAN_SINGULARITY_WRIST = 24,\n'}
[0.770042] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_1 = 30,\n'}
[0.770101] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_2 = 31,\n'}
[0.770157] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_3 = 32,\n'}
[0.770211] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_4 = 33,\n'}
[0.770265] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_5 = 34,\n'}
[0.770317] (igus_rebel) StdoutLine: {'line': b'5: -            TOOL_AT_VIRTUAL_BOX_LIMIT_6 = 35,\n'}
[0.770369] (igus_rebel) StdoutLine: {'line': b'5: -            MOTION_NOT_ALLOWED = 99,\n'}
[0.770420] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.770471] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.770525] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.770578] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ErrorJoint\n'}
[0.770629] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.770688] (igus_rebel) StdoutLine: {'line': b'5: -            TEMP = 1,       // OverTemperature\n'}
[0.770743] (igus_rebel) StdoutLine: {'line': b'5: -            ESTOP_LOWV = 2, // Energy supply too low\n'}
[0.770796] (igus_rebel) StdoutLine: {'line': b'5: -            MNE = 4,        // Motor not enabled\n'}
[0.770849] (igus_rebel) StdoutLine: {'line': b'5: -            COM = 8,        // Communication watch dog\n'}
[0.770902] (igus_rebel) StdoutLine: {'line': b'5: -            POS = 16,       // Position lag\n'}
[0.770953] (igus_rebel) StdoutLine: {'line': b'5: -            ENC = 32,       // Encoder Error\n'}
[0.771004] (igus_rebel) StdoutLine: {'line': b'5: -            OC = 64,        // Overcurrent\n'}
[0.771054] (igus_rebel) StdoutLine: {'line': b'5: -            DRV = 128       // Driver Error\n'}
[0.771105] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.771158] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.771210] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ConfigType\n'}
[0.771261] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.771312] (igus_rebel) StdoutLine: {'line': b'5: -            KINEMATICLIMITS,\n'}
[0.771364] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.771416] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.771470] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.771522] (igus_rebel) StdoutLine: {'line': b'5: -        enum class LogLevel\n'}
[0.771651] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.771693] (igus_rebel) StdoutLine: {'line': b'5: -            DEBUG,\n'}
[0.771727] (igus_rebel) StdoutLine: {'line': b'5: -            APP_INFO,\n'}
[0.771760] (igus_rebel) StdoutLine: {'line': b'5: -            APP_ERROR,\n'}
[0.771792] (igus_rebel) StdoutLine: {'line': b'5: -            INFO,\n'}
[0.771824] (igus_rebel) StdoutLine: {'line': b'5: -            WARN,\n'}
[0.771855] (igus_rebel) StdoutLine: {'line': b'5: -            ERROR,\n'}
[0.771887] (igus_rebel) StdoutLine: {'line': b'5: -            FATAL,\n'}
[0.771918] (igus_rebel) StdoutLine: {'line': b'5: -            UNKNOWN = 1000\n'}
[0.771951] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.771982] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.772013] (igus_rebel) StdoutLine: {'line': b'5: -        class CriMessage\n'}
[0.772046] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.772076] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.772106] (igus_rebel) StdoutLine: {'line': b'5: -            MessageType GetType()\n'}
[0.772137] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.772168] (igus_rebel) StdoutLine: {'line': b'5: -                return type;\n'}
[0.772198] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.772227] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.772257] (igus_rebel) StdoutLine: {'line': b'5: -            static MessageType GetMessageType(const std::string &);\n'}
[0.772286] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.772314] (igus_rebel) StdoutLine: {'line': b'5: -        protected:\n'}
[0.772343] (igus_rebel) StdoutLine: {'line': b'5: -            MessageType type;\n'}
[0.772372] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CriMessage(const MessageType &_type) : type(_type) {}\n'}
[0.772401] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.772431] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ParseMessageString(const std::string &, const std::string::size_type &,\n'}
[0.772460] (igus_rebel) StdoutLine: {'line': b'5: -                                                  const std::string::size_type &, const std::string::size_type &);\n'}
[0.772490] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.772518] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T, std::size_t N>\n'}
[0.772548] (igus_rebel) StdoutLine: {'line': b'5: -            static void FillArray(std::array<T, N> &, const std::string &);\n'}
[0.772577] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.772606] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T>\n'}
[0.772636] (igus_rebel) StdoutLine: {'line': b'5: -            void FillVector(std::vector<T> &, const std::string &);\n'}
[0.772665] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.772705] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T, std::size_t N>\n'}
[0.772735] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ArrayToString(std::array<T, N> &);\n'}
[0.784572] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.784840] (igus_rebel) StdoutLine: {'line': b'5: -            template <class T>\n'}
[0.784880] (igus_rebel) StdoutLine: {'line': b'5: -            std::string VectorToString(std::vector<T> &vector);\n'}
[0.784915] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.784947] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.784979] (igus_rebel) StdoutLine: {'line': b'5: -        class Status : public CriMessage\n'}
[0.785011] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.785042] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.785073] (igus_rebel) StdoutLine: {'line': b'5: -            Mode mode;\n'}
[0.785105] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 16> posJointSetPoint;\n'}
[0.785135] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 16> posJointCurrent;\n'}
[0.785168] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 6> posCartRobot;\n'}
[0.785198] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<float, 3> posCartPlattform;\n'}
[0.785334] (igus_rebel) StdoutLine: {'line': b'5: -            float overrideValue;\n'}
[0.785366] (igus_rebel) StdoutLine: {'line': b'5: -            int din;\n'}
[0.785397] (igus_rebel) StdoutLine: {'line': b'5: -            int dout;\n'}
[0.785431] (igus_rebel) StdoutLine: {'line': b'5: -            int eStop;\n'}
[0.785461] (igus_rebel) StdoutLine: {'line': b'5: -            int supply;\n'}
[0.785492] (igus_rebel) StdoutLine: {'line': b'5: -            int currentall;\n'}
[0.785522] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<int, 16> currentjoints;\n'}
[0.785552] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorSummary;\n'}
[0.785582] (igus_rebel) StdoutLine: {'line': b'5: -            std::array<int, 16> errorJoints;\n'}
[0.785613] (igus_rebel) StdoutLine: {'line': b'5: -            Kinstate kinstate;\n'}
[0.785643] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.785680] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Status(const std::string &);\n'}
[0.785961] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Status();\n'}
[0.785993] (igus_rebel) StdoutLine: {'line': b'5: -            static std::string ModeToString(const Mode &);\n'}
[0.786024] (igus_rebel) StdoutLine: {'line': b'5: -            void Print();\n'}
[0.786057] (igus_rebel) StdoutLine: {'line': b'5: -            void Log();\n'}
[0.786087] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.786119] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.786150] (igus_rebel) StdoutLine: {'line': b'5: -            std::string ToString();\n'}
[0.786179] (igus_rebel) StdoutLine: {'line': b'5: -            Mode GetMode(const std::string &);\n'}
[0.786209] (igus_rebel) StdoutLine: {'line': b'5: -            Kinstate GetKinstate(const std::string &);\n'}
[0.786240] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.786270] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.786300] (igus_rebel) StdoutLine: {'line': b'5: -        class Message : public CriMessage\n'}
[0.786329] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.786360] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.786390] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Message(const std::string &);\n'}
[0.786421] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.786451] (igus_rebel) StdoutLine: {'line': b'5: -            std::string message;\n'}
[0.786481] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.786510] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.786539] (igus_rebel) StdoutLine: {'line': b'5: -        class Command : public CriMessage\n'}
[0.786568] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.786598] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.786628] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Command(const std::string &);\n'}
[0.786858] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.786893] (igus_rebel) StdoutLine: {'line': b'5: -            std::string command;\n'}
[0.786925] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.786957] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.786987] (igus_rebel) StdoutLine: {'line': b'5: -        class Info : public CriMessage\n'}
[0.787018] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.787049] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.787080] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Info(const std::string &);\n'}
[0.787111] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.787142] (igus_rebel) StdoutLine: {'line': b'5: -            std::string info;\n'}
[0.787172] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.787203] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.787233] (igus_rebel) StdoutLine: {'line': b'5: -        class LogMsg : public CriMessage\n'}
[0.787263] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.787292] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.787322] (igus_rebel) StdoutLine: {'line': b'5: -            explicit LogMsg(const std::string &);\n'}
[0.787471] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.787504] (igus_rebel) StdoutLine: {'line': b'5: -            LogLevel logLevel;\n'}
[0.787536] (igus_rebel) StdoutLine: {'line': b'5: -            long timestamp;\n'}
[0.787567] (igus_rebel) StdoutLine: {'line': b'5: -            std::string logMsg;\n'}
[0.787597] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.787628] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.787657] (igus_rebel) StdoutLine: {'line': b'5: -            LogLevel GetLogLevel(const std::string &);\n'}
[0.787694] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.787726] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.787758] (igus_rebel) StdoutLine: {'line': b'5: -        class Variables : public CriMessage\n'}
[0.787788] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.787818] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.787849] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Variables(const std::string &);\n'}
[0.787880] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.787911] (igus_rebel) StdoutLine: {'line': b'5: -            struct NumberVariable\n'}
[0.787941] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.787971] (igus_rebel) StdoutLine: {'line': b'5: -                std::string name;\n'}
[0.788002] (igus_rebel) StdoutLine: {'line': b'5: -                double value;\n'}
[0.788031] (igus_rebel) StdoutLine: {'line': b'5: -            };\n'}
[0.788060] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788091] (igus_rebel) StdoutLine: {'line': b'5: -            struct PositionVariable\n'}
[0.788121] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.788152] (igus_rebel) StdoutLine: {'line': b'5: -                std::string name;\n'}
[0.788183] (igus_rebel) StdoutLine: {'line': b'5: -                std::array<double, 15> values;\n'}
[0.788213] (igus_rebel) StdoutLine: {'line': b'5: -            };\n'}
[0.788243] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788273] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<NumberVariable> numberVariables;\n'}
[0.788303] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<PositionVariable> positionVariables;\n'}
[0.788334] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788364] (igus_rebel) StdoutLine: {'line': b'5: -        private:\n'}
[0.788394] (igus_rebel) StdoutLine: {'line': b'5: -            std::string GetMatchString(const std::smatch &);\n'}
[0.788425] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.788457] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788487] (igus_rebel) StdoutLine: {'line': b'5: -        class CmdError : public CriMessage\n'}
[0.788616] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.788649] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.788685] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CmdError(const std::string &);\n'}
[0.788719] (igus_rebel) StdoutLine: {'line': b'5: -            int recjectedCmd;\n'}
[0.788751] (igus_rebel) StdoutLine: {'line': b'5: -            std::string error;\n'}
[0.788782] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.788813] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.788842] (igus_rebel) StdoutLine: {'line': b'5: -        class CmdAck : public CriMessage\n'}
[0.789115] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.789148] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.789179] (igus_rebel) StdoutLine: {'line': b'5: -            explicit CmdAck(const std::string &);\n'}
[0.789209] (igus_rebel) StdoutLine: {'line': b'5: -            int acceptedCmd;\n'}
[0.789239] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.789270] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789300] (igus_rebel) StdoutLine: {'line': b'5: -        class Cyclestat : public CriMessage\n'}
[0.789330] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.789360] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.789390] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Cyclestat(const std::string &);\n'}
[0.789422] (igus_rebel) StdoutLine: {'line': b'5: -            int cycletime;\n'}
[0.789453] (igus_rebel) StdoutLine: {'line': b'5: -            int workload;\n'}
[0.789483] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.789512] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789543] (igus_rebel) StdoutLine: {'line': b'5: -        class Config : public CriMessage\n'}
[0.789573] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.789602] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.789631] (igus_rebel) StdoutLine: {'line': b'5: -            ConfigType configType;\n'}
[0.789662] (igus_rebel) StdoutLine: {'line': b'5: -            static ConfigType GetConfigType(const std::string &);\n'}
[0.789699] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789730] (igus_rebel) StdoutLine: {'line': b'5: -        protected:\n'}
[0.789759] (igus_rebel) StdoutLine: {'line': b'5: -            explicit Config(const ConfigType &_configType) : CriMessage(MessageType::CONFIG), configType(_configType) {}\n'}
[0.789790] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.789819] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.789847] (igus_rebel) StdoutLine: {'line': b'5: -        class KinematicLimits : public Config\n'}
[0.789877] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.789906] (igus_rebel) StdoutLine: {'line': b'5: -        public:\n'}
[0.789935] (igus_rebel) StdoutLine: {'line': b'5: -            explicit KinematicLimits(const std::string &);\n'}
[0.789964] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriMessages\n'}
[0.789995] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.790025] (igus_rebel) StdoutLine: {'line': b'5: +enum class MessageType\n'}
[0.790055] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.790083] (igus_rebel) StdoutLine: {'line': b'5: +  STATUS,\n'}
[0.790112] (igus_rebel) StdoutLine: {'line': b'5: +  OPINFO,\n'}
[0.790142] (igus_rebel) StdoutLine: {'line': b'5: +  GSIG,\n'}
[0.790171] (igus_rebel) StdoutLine: {'line': b'5: +  GRIPPERSTATE,\n'}
[0.790201] (igus_rebel) StdoutLine: {'line': b'5: +  RUNSTATE,\n'}
[0.790230] (igus_rebel) StdoutLine: {'line': b'5: +  MESSAGE,\n'}
[0.790259] (igus_rebel) StdoutLine: {'line': b'5: +  CMD,\n'}
[0.790288] (igus_rebel) StdoutLine: {'line': b'5: +  CONFIG,\n'}
[0.790317] (igus_rebel) StdoutLine: {'line': b'5: +  INFO,\n'}
[0.790345] (igus_rebel) StdoutLine: {'line': b'5: +  LOGMSG,\n'}
[0.790374] (igus_rebel) StdoutLine: {'line': b'5: +  VARIABLES,\n'}
[0.790404] (igus_rebel) StdoutLine: {'line': b'5: +  CMDERROR,\n'}
[0.790433] (igus_rebel) StdoutLine: {'line': b'5: +  CMDACK,\n'}
[0.790461] (igus_rebel) StdoutLine: {'line': b'5: +  CYCLESTAT,\n'}
[0.790490] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.790518] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.790547] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.790576] (igus_rebel) StdoutLine: {'line': b'5: +enum class Mode\n'}
[0.790605] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.790633] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT,\n'}
[0.790661] (igus_rebel) StdoutLine: {'line': b'5: +  CARTBASE,\n'}
[0.790698] (igus_rebel) StdoutLine: {'line': b'5: +  CARTTOOL,\n'}
[0.790729] (igus_rebel) StdoutLine: {'line': b'5: +  PLATFORM,\n'}
[0.790759] (igus_rebel) StdoutLine: {'line': b'5: +  FSM,\n'}
[0.790788] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.790818] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.790846] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.790875] (igus_rebel) StdoutLine: {'line': b'5: +enum class Kinstate\n'}
[0.790904] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.790933] (igus_rebel) StdoutLine: {'line': b'5: +  NO_ERROR = 0,\n'}
[0.790962] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT_LIMIT_MIN = 13,\n'}
[0.790990] (igus_rebel) StdoutLine: {'line': b'5: +  JOINT_LIMIT_MAX = 14,\n'}
[0.791020] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_CENTER = 21,\n'}
[0.791049] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_REACH = 23,\n'}
[0.791436] (igus_rebel) StdoutLine: {'line': b'5: +  CARTESIAN_SINGULARITY_WRIST = 24,\n'}
[0.791468] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_1 = 30,\n'}
[0.791497] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_2 = 31,\n'}
[0.791527] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_3 = 32,\n'}
[0.791557] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_4 = 33,\n'}
[0.791585] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_5 = 34,\n'}
[0.791616] (igus_rebel) StdoutLine: {'line': b'5: +  TOOL_AT_VIRTUAL_BOX_LIMIT_6 = 35,\n'}
[0.791644] (igus_rebel) StdoutLine: {'line': b'5: +  MOTION_NOT_ALLOWED = 99,\n'}
[0.791676] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.791711] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.791741] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.791771] (igus_rebel) StdoutLine: {'line': b'5: +enum class ErrorJoint\n'}
[0.791801] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.791831] (igus_rebel) StdoutLine: {'line': b'5: +  TEMP = 1,                 // OverTemperature\n'}
[0.791861] (igus_rebel) StdoutLine: {'line': b'5: +  ESTOP_LOWV = 2,           // Energy supply too low\n'}
[0.791891] (igus_rebel) StdoutLine: {'line': b'5: +  MNE = 4,                  // Motor not enabled\n'}
[0.791920] (igus_rebel) StdoutLine: {'line': b'5: +  COM = 8,                  // Communication watch dog\n'}
[0.791949] (igus_rebel) StdoutLine: {'line': b'5: +  POS = 16,                 // Position lag\n'}
[0.791979] (igus_rebel) StdoutLine: {'line': b'5: +  ENC = 32,                 // Encoder Error\n'}
[0.792010] (igus_rebel) StdoutLine: {'line': b'5: +  OC = 64,                  // Overcurrent\n'}
[0.792039] (igus_rebel) StdoutLine: {'line': b'5: +  DRV = 128                 // Driver Error\n'}
[0.792068] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.792098] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.792128] (igus_rebel) StdoutLine: {'line': b'5: +enum class ConfigType\n'}
[0.792158] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.792189] (igus_rebel) StdoutLine: {'line': b'5: +  KINEMATICLIMITS,\n'}
[0.792221] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.792253] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.792283] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.792312] (igus_rebel) StdoutLine: {'line': b'5: +enum class LogLevel\n'}
[0.792342] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.792371] (igus_rebel) StdoutLine: {'line': b'5: +  DEBUG,\n'}
[0.792401] (igus_rebel) StdoutLine: {'line': b'5: +  APP_INFO,\n'}
[0.792432] (igus_rebel) StdoutLine: {'line': b'5: +  APP_ERROR,\n'}
[0.792462] (igus_rebel) StdoutLine: {'line': b'5: +  INFO,\n'}
[0.792492] (igus_rebel) StdoutLine: {'line': b'5: +  WARN,\n'}
[0.792522] (igus_rebel) StdoutLine: {'line': b'5: +  ERROR,\n'}
[0.792551] (igus_rebel) StdoutLine: {'line': b'5: +  FATAL,\n'}
[0.792579] (igus_rebel) StdoutLine: {'line': b'5: +  UNKNOWN = 1000\n'}
[0.792857] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.792892] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.792924] (igus_rebel) StdoutLine: {'line': b'5: +class CriMessage\n'}
[0.792955] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.792985] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.793017] (igus_rebel) StdoutLine: {'line': b'5: +  MessageType GetType()\n'}
[0.793047] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.793078] (igus_rebel) StdoutLine: {'line': b'5: +    return type;\n'}
[0.793108] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.793139] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.793169] (igus_rebel) StdoutLine: {'line': b'5: +  static MessageType GetMessageType(const std::string &);\n'}
[0.793199] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.793229] (igus_rebel) StdoutLine: {'line': b'5: +protected:\n'}
[0.793260] (igus_rebel) StdoutLine: {'line': b'5: +  MessageType type;\n'}
[0.793291] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CriMessage(const MessageType & _type)\n'}
[0.793400] (igus_rebel) StdoutLine: {'line': b'5: +  : type(_type) {}\n'}
[0.793429] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.793458] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ParseMessageString(\n'}
[0.793486] (igus_rebel) StdoutLine: {'line': b'5: +    const std::string &, const std::string::size_type &,\n'}
[0.793516] (igus_rebel) StdoutLine: {'line': b'5: +    const std::string::size_type &, const std::string::size_type &);\n'}
[0.793545] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.793574] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T, std::size_t N>\n'}
[0.793602] (igus_rebel) StdoutLine: {'line': b'5: +  static void FillArray(std::array<T, N> &, const std::string &);\n'}
[0.793631] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.793659] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T>\n'}
[0.793695] (igus_rebel) StdoutLine: {'line': b'5: +  void FillVector(std::vector<T> &, const std::string &);\n'}
[0.793725] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.793754] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T, std::size_t N>\n'}
[0.793782] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ArrayToString(std::array<T, N> &);\n'}
[0.793809] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.793836] (igus_rebel) StdoutLine: {'line': b'5: +  template<class T>\n'}
[0.793864] (igus_rebel) StdoutLine: {'line': b'5: +  std::string VectorToString(std::vector<T> & vector);\n'}
[0.793893] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.793921] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.793950] (igus_rebel) StdoutLine: {'line': b'5: +class Status : public CriMessage\n'}
[0.793978] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.794006] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.794033] (igus_rebel) StdoutLine: {'line': b'5: +  Mode mode;\n'}
[0.794060] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 16> posJointSetPoint;\n'}
[0.794088] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 16> posJointCurrent;\n'}
[0.794115] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 6> posCartRobot;\n'}
[0.794142] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<float, 3> posCartPlattform;\n'}
[0.794169] (igus_rebel) StdoutLine: {'line': b'5: +  float overrideValue;\n'}
[0.794195] (igus_rebel) StdoutLine: {'line': b'5: +  int din;\n'}
[0.794221] (igus_rebel) StdoutLine: {'line': b'5: +  int dout;\n'}
[0.794248] (igus_rebel) StdoutLine: {'line': b'5: +  int eStop;\n'}
[0.794275] (igus_rebel) StdoutLine: {'line': b'5: +  int supply;\n'}
[0.794302] (igus_rebel) StdoutLine: {'line': b'5: +  int currentall;\n'}
[0.794330] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> currentjoints;\n'}
[0.794357] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorSummary;\n'}
[0.794383] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> errorJoints;\n'}
[0.794410] (igus_rebel) StdoutLine: {'line': b'5: +  Kinstate kinstate;\n'}
[0.794436] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.794463] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Status(const std::string &);\n'}
[0.794490] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Status();\n'}
[0.794517] (igus_rebel) StdoutLine: {'line': b'5: +  static std::string ModeToString(const Mode &);\n'}
[0.794544] (igus_rebel) StdoutLine: {'line': b'5: +  void Print();\n'}
[0.794571] (igus_rebel) StdoutLine: {'line': b'5: +  void Log();\n'}
[0.794598] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.794624] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.794651] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ToString();\n'}
[0.794684] (igus_rebel) StdoutLine: {'line': b'5: +  Mode GetMode(const std::string &);\n'}
[0.794713] (igus_rebel) StdoutLine: {'line': b'5: +  Kinstate GetKinstate(const std::string &);\n'}
[0.794739] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.794765] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.794792] (igus_rebel) StdoutLine: {'line': b'5: +class Message : public CriMessage\n'}
[0.794824] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.794851] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.794877] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Message(const std::string &);\n'}
[0.794903] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.794929] (igus_rebel) StdoutLine: {'line': b'5: +  std::string message;\n'}
[0.794955] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.794982] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795008] (igus_rebel) StdoutLine: {'line': b'5: +class Command : public CriMessage\n'}
[0.795035] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.795060] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.795086] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Command(const std::string &);\n'}
[0.795112] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795138] (igus_rebel) StdoutLine: {'line': b'5: +  std::string command;\n'}
[0.795164] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.795190] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795216] (igus_rebel) StdoutLine: {'line': b'5: +class Info : public CriMessage\n'}
[0.795242] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.795270] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.795298] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Info(const std::string &);\n'}
[0.795325] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795352] (igus_rebel) StdoutLine: {'line': b'5: +  std::string info;\n'}
[0.795379] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.795406] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795433] (igus_rebel) StdoutLine: {'line': b'5: +class LogMsg : public CriMessage\n'}
[0.795460] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.795487] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.795514] (igus_rebel) StdoutLine: {'line': b'5: +  explicit LogMsg(const std::string &);\n'}
[0.795540] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795567] (igus_rebel) StdoutLine: {'line': b'5: +  LogLevel logLevel;\n'}
[0.795594] (igus_rebel) StdoutLine: {'line': b'5: +  long timestamp;\n'}
[0.795620] (igus_rebel) StdoutLine: {'line': b'5: +  std::string logMsg;\n'}
[0.795649] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795682] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.795712] (igus_rebel) StdoutLine: {'line': b'5: +  LogLevel GetLogLevel(const std::string &);\n'}
[0.795739] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.795766] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795793] (igus_rebel) StdoutLine: {'line': b'5: +class Variables : public CriMessage\n'}
[0.795821] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.795849] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.795875] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Variables(const std::string &);\n'}
[0.795903] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.795930] (igus_rebel) StdoutLine: {'line': b'5: +  struct NumberVariable\n'}
[0.795955] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.795982] (igus_rebel) StdoutLine: {'line': b'5: +    std::string name;\n'}
[0.796008] (igus_rebel) StdoutLine: {'line': b'5: +    double value;\n'}
[0.796035] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.796062] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796089] (igus_rebel) StdoutLine: {'line': b'5: +  struct PositionVariable\n'}
[0.796115] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.796142] (igus_rebel) StdoutLine: {'line': b'5: +    std::string name;\n'}
[0.796168] (igus_rebel) StdoutLine: {'line': b'5: +    std::array<double, 15> values;\n'}
[0.796195] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.796220] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796247] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<NumberVariable> numberVariables;\n'}
[0.796274] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<PositionVariable> positionVariables;\n'}
[0.796300] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796327] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.796353] (igus_rebel) StdoutLine: {'line': b'5: +  std::string GetMatchString(const std::smatch &);\n'}
[0.796381] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.796407] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796434] (igus_rebel) StdoutLine: {'line': b'5: +class CmdError : public CriMessage\n'}
[0.796461] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.796487] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.796514] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CmdError(const std::string &);\n'}
[0.796540] (igus_rebel) StdoutLine: {'line': b'5: +  int recjectedCmd;\n'}
[0.796565] (igus_rebel) StdoutLine: {'line': b'5: +  std::string error;\n'}
[0.796591] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.796617] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796643] (igus_rebel) StdoutLine: {'line': b'5: +class CmdAck : public CriMessage\n'}
[0.796669] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.796702] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.796729] (igus_rebel) StdoutLine: {'line': b'5: +  explicit CmdAck(const std::string &);\n'}
[0.796755] (igus_rebel) StdoutLine: {'line': b'5: +  int acceptedCmd;\n'}
[0.796781] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.796806] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.796832] (igus_rebel) StdoutLine: {'line': b'5: +class Cyclestat : public CriMessage\n'}
[0.796859] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.796884] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.796910] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Cyclestat(const std::string &);\n'}
[0.796937] (igus_rebel) StdoutLine: {'line': b'5: +  int cycletime;\n'}
[0.796963] (igus_rebel) StdoutLine: {'line': b'5: +  int workload;\n'}
[0.796991] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.797017] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797043] (igus_rebel) StdoutLine: {'line': b'5: +class Config : public CriMessage\n'}
[0.797069] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.797094] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.797120] (igus_rebel) StdoutLine: {'line': b'5: +  ConfigType configType;\n'}
[0.797146] (igus_rebel) StdoutLine: {'line': b'5: +  static ConfigType GetConfigType(const std::string &);\n'}
[0.797172] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797199] (igus_rebel) StdoutLine: {'line': b'5: +protected:\n'}
[0.797225] (igus_rebel) StdoutLine: {'line': b'5: +  explicit Config(const ConfigType & _configType)\n'}
[0.797251] (igus_rebel) StdoutLine: {'line': b'5: +  : CriMessage(MessageType::CONFIG), configType(_configType) {}\n'}
[0.797277] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.797306] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797332] (igus_rebel) StdoutLine: {'line': b'5: +class KinematicLimits : public Config\n'}
[0.797359] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.797386] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.797413] (igus_rebel) StdoutLine: {'line': b'5: +  explicit KinematicLimits(const std::string &);\n'}
[0.797439] (igus_rebel) StdoutLine: {'line': b'5: @@ -263,6 +266,5 @@\n'}
[0.797466] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<std::pair<float, float>> minMaxPairs;\n'}
[0.797493] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.797520] (igus_rebel) StdoutLine: {'line': b'5: -            std::string ToString();\n'}
[0.797548] (igus_rebel) StdoutLine: {'line': b'5: -            void Print();\n'}
[0.797575] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.797602] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.797629] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<std::pair<float, float>> minMaxPairs;\n'}
[0.797655] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.797688] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ToString();\n'}
[0.797716] (igus_rebel) StdoutLine: {'line': b'5: +  void Print();\n'}
[0.797743] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.797770] (igus_rebel) StdoutLine: {'line': b'5: @@ -269,0 +272 @@\n'}
[0.797801] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.797827] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.797852] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/Rebel.hpp':\n"}
[0.797880] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.797906] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/Rebel.hpp\n'}
[0.797933] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/Rebel.hpp.uncrustify\n'}
[0.797959] (igus_rebel) StdoutLine: {'line': b'5: @@ -20,8 +20,8 @@\n'}
[0.797984] (igus_rebel) StdoutLine: {'line': b'5: -    class Rebel : public SystemInterface\n'}
[0.798010] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.798036] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.798062] (igus_rebel) StdoutLine: {'line': b'5: -        enum class ControlMode\n'}
[0.798088] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.798114] (igus_rebel) StdoutLine: {'line': b'5: -            POSITION,\n'}
[0.798138] (igus_rebel) StdoutLine: {'line': b'5: -            VELOCITY\n'}
[0.798164] (igus_rebel) StdoutLine: {'line': b'5: -        };\n'}
[0.798189] (igus_rebel) StdoutLine: {'line': b'5: +class Rebel : public SystemInterface\n'}
[0.798215] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.798240] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.798266] (igus_rebel) StdoutLine: {'line': b'5: +  enum class ControlMode\n'}
[0.798292] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.798317] (igus_rebel) StdoutLine: {'line': b'5: +    POSITION,\n'}
[0.798343] (igus_rebel) StdoutLine: {'line': b'5: +    VELOCITY\n'}
[0.798369] (igus_rebel) StdoutLine: {'line': b'5: +  };\n'}
[0.798396] (igus_rebel) StdoutLine: {'line': b'5: @@ -29,5 +29,5 @@\n'}
[0.798422] (igus_rebel) StdoutLine: {'line': b'5: -    private:\n'}
[0.798448] (igus_rebel) StdoutLine: {'line': b'5: -        rclcpp::Node::SharedPtr node_;\n'}
[0.798474] (igus_rebel) StdoutLine: {'line': b'5: -        \n'}
[0.798499] (igus_rebel) StdoutLine: {'line': b'5: -        std::shared_ptr<RebelSocket> rebelSocket;\n'}
[0.798525] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Status currentStatus;\n'}
[0.798551] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.798576] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Node::SharedPtr node_;\n'}
[0.798600] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.798626] (igus_rebel) StdoutLine: {'line': b'5: +  std::shared_ptr<RebelSocket> rebelSocket;\n'}
[0.798654] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Status currentStatus;\n'}
[0.798688] (igus_rebel) StdoutLine: {'line': b'5: @@ -36,2 +36,2 @@\n'}
[0.798716] (igus_rebel) StdoutLine: {'line': b'5: -        float j1, j2, j3, j4, j5, j6;\n'}
[0.798743] (igus_rebel) StdoutLine: {'line': b'5: -        ControlMode controlMode;\n'}
[0.798770] (igus_rebel) StdoutLine: {'line': b'5: +  float j1, j2, j3, j4, j5, j6;\n'}
[0.798797] (igus_rebel) StdoutLine: {'line': b'5: +  ControlMode controlMode;\n'}
[0.798824] (igus_rebel) StdoutLine: {'line': b'5: @@ -39,5 +39,5 @@\n'}
[0.798851] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueAlive;\n'}
[0.798878] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueMessage;\n'}
[0.798906] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread aliveThread;\n'}
[0.798933] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread messageThread;\n'}
[0.798960] (igus_rebel) StdoutLine: {'line': b'5: -        int aliveWaitMs;\n'}
[0.798985] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueAlive;\n'}
[0.799011] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueMessage;\n'}
[0.799037] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread aliveThread;\n'}
[0.799062] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread messageThread;\n'}
[0.799088] (igus_rebel) StdoutLine: {'line': b'5: +  int aliveWaitMs;\n'}
[0.799114] (igus_rebel) StdoutLine: {'line': b'5: @@ -45,3 +45,3 @@\n'}
[0.799140] (igus_rebel) StdoutLine: {'line': b'5: -        int current_ccnt;\n'}
[0.799165] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex cntLock;\n'}
[0.799191] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex aliveLock;\n'}
[0.799217] (igus_rebel) StdoutLine: {'line': b'5: +  int current_ccnt;\n'}
[0.799245] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex cntLock;\n'}
[0.799272] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex aliveLock;\n'}
[0.799298] (igus_rebel) StdoutLine: {'line': b'5: @@ -49,5 +49,5 @@\n'}
[0.799323] (igus_rebel) StdoutLine: {'line': b'5: -        double vel_cmd[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799348] (igus_rebel) StdoutLine: {'line': b'5: -        double pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799374] (igus_rebel) StdoutLine: {'line': b'5: -        double last_pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799400] (igus_rebel) StdoutLine: {'line': b'5: -        double vel[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799426] (igus_rebel) StdoutLine: {'line': b'5: -        double eff[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799452] (igus_rebel) StdoutLine: {'line': b'5: +  double vel_cmd[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799477] (igus_rebel) StdoutLine: {'line': b'5: +  double pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799504] (igus_rebel) StdoutLine: {'line': b'5: +  double last_pos[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799530] (igus_rebel) StdoutLine: {'line': b'5: +  double vel[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799555] (igus_rebel) StdoutLine: {'line': b'5: +  double eff[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};\n'}
[0.799580] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,3 +55,3 @@\n'}
[0.799606] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Kinstate lastKinstate;\n'}
[0.799633] (igus_rebel) StdoutLine: {'line': b'5: -        std::array<int, 16> lastErrorJoints;\n'}
[0.799659] (igus_rebel) StdoutLine: {'line': b'5: -        std::string kinstateMessage;\n'}
[0.799690] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Kinstate lastKinstate;\n'}
[0.799718] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> lastErrorJoints;\n'}
[0.799746] (igus_rebel) StdoutLine: {'line': b'5: +  std::string kinstateMessage;\n'}
[0.799774] (igus_rebel) StdoutLine: {'line': b'5: @@ -59 +59 @@\n'}
[0.799799] (igus_rebel) StdoutLine: {'line': b'5: -        std::unordered_map<int, std::string> unacknowledgedCommands;\n'}
[0.799825] (igus_rebel) StdoutLine: {'line': b'5: +  std::unordered_map<int, std::string> unacknowledgedCommands;\n'}
[0.799851] (igus_rebel) StdoutLine: {'line': b'5: @@ -62 +62 @@\n'}
[0.799877] (igus_rebel) StdoutLine: {'line': b'5: -        rclcpp::Service<igus_rebel_msgs::srv::SetDigitalOutput>::SharedPtr digital_output_srv_;\n'}
[0.799904] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Service<igus_rebel_msgs::srv::SetDigitalOutput>::SharedPtr digital_output_srv_;\n'}
[0.799930] (igus_rebel) StdoutLine: {'line': b'5: @@ -65,2 +65,2 @@\n'}
[0.799955] (igus_rebel) StdoutLine: {'line': b'5: -        void AliveThreadFunction();\n'}
[0.799980] (igus_rebel) StdoutLine: {'line': b'5: -        void MessageThreadFunction();\n'}
[0.800006] (igus_rebel) StdoutLine: {'line': b'5: +  void AliveThreadFunction();\n'}
[0.800031] (igus_rebel) StdoutLine: {'line': b'5: +  void MessageThreadFunction();\n'}
[0.800057] (igus_rebel) StdoutLine: {'line': b'5: @@ -69,4 +69,4 @@\n'}
[0.800083] (igus_rebel) StdoutLine: {'line': b'5: -        int Ccnt();\n'}
[0.800107] (igus_rebel) StdoutLine: {'line': b'5: -        void Command(const std::string &);\n'}
[0.800133] (igus_rebel) StdoutLine: {'line': b'5: -        void GetConfig(const std::string &);\n'}
[0.800159] (igus_rebel) StdoutLine: {'line': b'5: -        void SetControlMode(const ControlMode &);\n'}
[0.800184] (igus_rebel) StdoutLine: {'line': b'5: +  int Ccnt();\n'}
[0.800209] (igus_rebel) StdoutLine: {'line': b'5: +  void Command(const std::string &);\n'}
[0.800233] (igus_rebel) StdoutLine: {'line': b'5: +  void GetConfig(const std::string &);\n'}
[0.800259] (igus_rebel) StdoutLine: {'line': b'5: +  void SetControlMode(const ControlMode &);\n'}
[0.800284] (igus_rebel) StdoutLine: {'line': b'5: @@ -75,2 +75,2 @@\n'}
[0.800310] (igus_rebel) StdoutLine: {'line': b'5: -        void ProcessStatus(const CriMessages::Status &);\n'}
[0.800337] (igus_rebel) StdoutLine: {'line': b'5: -        void SetUpRosHardwareInterface();\n'}
[0.800362] (igus_rebel) StdoutLine: {'line': b'5: +  void ProcessStatus(const CriMessages::Status &);\n'}
[0.800386] (igus_rebel) StdoutLine: {'line': b'5: +  void SetUpRosHardwareInterface();\n'}
[0.800411] (igus_rebel) StdoutLine: {'line': b'5: @@ -78,3 +78,3 @@\n'}
[0.800436] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.800460] (igus_rebel) StdoutLine: {'line': b'5: -        const std::vector<std::string> JOINT_NAME = {\n'}
[0.800486] (-) TimerEvent: {}
[0.800542] (igus_rebel) StdoutLine: {'line': b'5: -            "joint1", "joint2", "joint3", "joint4", "joint5", "joint6"};\n'}
[0.800577] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.800605] (igus_rebel) StdoutLine: {'line': b'5: +  const std::vector<std::string> JOINT_NAME = {\n'}
[0.800632] (igus_rebel) StdoutLine: {'line': b'5: +    "joint1", "joint2", "joint3", "joint4", "joint5", "joint6"};\n'}
[0.800659] (igus_rebel) StdoutLine: {'line': b'5: @@ -83 +83 @@\n'}
[0.800694] (igus_rebel) StdoutLine: {'line': b'5: -        const double degToRad = 0.0174532925199432957692369076848861271344287188854172545609719144;\n'}
[0.800723] (igus_rebel) StdoutLine: {'line': b'5: +  const double degToRad = 0.0174532925199432957692369076848861271344287188854172545609719144;\n'}
[0.800752] (igus_rebel) StdoutLine: {'line': b'5: @@ -86,2 +86,2 @@\n'}
[0.800787] (igus_rebel) StdoutLine: {'line': b'5: -        const std::string ip = "192.168.3.11";\n'}
[0.800816] (igus_rebel) StdoutLine: {'line': b'5: -        const int port = 3920;\n'}
[0.800842] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string ip = "192.168.3.11";\n'}
[0.800870] (igus_rebel) StdoutLine: {'line': b'5: +  const int port = 3920;\n'}
[0.800898] (igus_rebel) StdoutLine: {'line': b'5: @@ -89,2 +89,2 @@\n'}
[0.800927] (igus_rebel) StdoutLine: {'line': b'5: -        Rebel();\n'}
[0.800953] (igus_rebel) StdoutLine: {'line': b'5: -        ~Rebel();\n'}
[0.800979] (igus_rebel) StdoutLine: {'line': b'5: +  Rebel();\n'}
[0.801005] (igus_rebel) StdoutLine: {'line': b'5: +  ~Rebel();\n'}
[0.801031] (igus_rebel) StdoutLine: {'line': b'5: @@ -92,3 +92,5 @@\n'}
[0.801056] (igus_rebel) StdoutLine: {'line': b'5: -        void SetJog(const float &, const float &, const float &, const float &, const float &, const float &);\n'}
[0.801082] (igus_rebel) StdoutLine: {'line': b'5: -        void GetJoints(float &, float &, float &, float &, float &, float &);\n'}
[0.801108] (igus_rebel) StdoutLine: {'line': b'5: -        void SetDigitalOut(const int &, const bool &);\n'}
[0.801133] (igus_rebel) StdoutLine: {'line': b'5: +  void SetJog(\n'}
[0.801158] (igus_rebel) StdoutLine: {'line': b'5: +    const float &, const float &, const float &, const float &, const float &,\n'}
[0.801186] (igus_rebel) StdoutLine: {'line': b'5: +    const float &);\n'}
[0.801212] (igus_rebel) StdoutLine: {'line': b'5: +  void GetJoints(float &, float &, float &, float &, float &, float &);\n'}
[0.801237] (igus_rebel) StdoutLine: {'line': b'5: +  void SetDigitalOut(const int &, const bool &);\n'}
[0.801264] (igus_rebel) StdoutLine: {'line': b'5: @@ -97 +99 @@\n'}
[0.801291] (igus_rebel) StdoutLine: {'line': b'5: -        CallbackReturn on_init(const HardwareInfo &hardware_info) override;\n'}
[0.801319] (igus_rebel) StdoutLine: {'line': b'5: +  CallbackReturn on_init(const HardwareInfo & hardware_info) override;\n'}
[0.801346] (igus_rebel) StdoutLine: {'line': b'5: @@ -99,4 +101,4 @@\n'}
[0.801373] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<StateInterface> export_state_interfaces() override;\n'}
[0.801399] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<CommandInterface> export_command_interfaces() override;\n'}
[0.801426] (igus_rebel) StdoutLine: {'line': b'5: -        return_type read(const rclcpp::Time &time, const rclcpp::Duration &period) override;\n'}
[0.801453] (igus_rebel) StdoutLine: {'line': b'5: -        return_type write(const rclcpp::Time &time, const rclcpp::Duration &period) override;\n'}
[0.801479] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<StateInterface> export_state_interfaces() override;\n'}
[0.801508] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<CommandInterface> export_command_interfaces() override;\n'}
[0.801534] (igus_rebel) StdoutLine: {'line': b'5: +  return_type read(const rclcpp::Time & time, const rclcpp::Duration & period) override;\n'}
[0.801560] (igus_rebel) StdoutLine: {'line': b'5: +  return_type write(const rclcpp::Time & time, const rclcpp::Duration & period) override;\n'}
[0.801587] (igus_rebel) StdoutLine: {'line': b'5: @@ -104,2 +106,2 @@\n'}
[0.801614] (igus_rebel) StdoutLine: {'line': b'5: -        void read();\n'}
[0.801640] (igus_rebel) StdoutLine: {'line': b'5: -        void write();\n'}
[0.801666] (igus_rebel) StdoutLine: {'line': b'5: +  void read();\n'}
[0.801710] (igus_rebel) StdoutLine: {'line': b'5: +  void write();\n'}
[0.801742] (igus_rebel) StdoutLine: {'line': b'5: @@ -107,2 +109,3 @@\n'}
[0.801770] (igus_rebel) StdoutLine: {'line': b'5: -        void dio_callback(const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.801798] (igus_rebel) StdoutLine: {'line': b'5: -                          std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response);\n'}
[0.801825] (igus_rebel) StdoutLine: {'line': b'5: +  void dio_callback(\n'}
[0.801851] (igus_rebel) StdoutLine: {'line': b'5: +    const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.801877] (igus_rebel) StdoutLine: {'line': b'5: +    std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response);\n'}
[0.801905] (igus_rebel) StdoutLine: {'line': b'5: @@ -110 +113 @@\n'}
[0.801932] (igus_rebel) StdoutLine: {'line': b'5: -        void GetReferenceInfo();\n'}
[0.801958] (igus_rebel) StdoutLine: {'line': b'5: +  void GetReferenceInfo();\n'}
[0.801985] (igus_rebel) StdoutLine: {'line': b'5: @@ -112,3 +115,3 @@\n'}
[0.802012] (igus_rebel) StdoutLine: {'line': b'5: -        void Start();\n'}
[0.802039] (igus_rebel) StdoutLine: {'line': b'5: -        void Stop();\n'}
[0.802066] (igus_rebel) StdoutLine: {'line': b'5: -    };\n'}
[0.802093] (igus_rebel) StdoutLine: {'line': b'5: +  void Start();\n'}
[0.802120] (igus_rebel) StdoutLine: {'line': b'5: +  void Stop();\n'}
[0.802147] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.802173] (igus_rebel) StdoutLine: {'line': b'5: @@ -117 +120 @@\n'}
[0.802200] (igus_rebel) StdoutLine: {'line': b'5: -#endif\n'}
[0.802227] (igus_rebel) StdoutLine: {'line': b'5: +#endif\n'}
[0.802253] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.802278] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'include/igus_rebel/RebelSocket.hpp':\n"}
[0.802305] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.802330] (igus_rebel) StdoutLine: {'line': b'5: --- include/igus_rebel/RebelSocket.hpp\n'}
[0.802357] (igus_rebel) StdoutLine: {'line': b'5: +++ include/igus_rebel/RebelSocket.hpp.uncrustify\n'}
[0.802381] (igus_rebel) StdoutLine: {'line': b'5: @@ -14,8 +14,8 @@\n'}
[0.802407] (igus_rebel) StdoutLine: {'line': b'5: -    class RebelSocket\n'}
[0.802432] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.802457] (igus_rebel) StdoutLine: {'line': b'5: -    private:\n'}
[0.802484] (igus_rebel) StdoutLine: {'line': b'5: -        int sock;\n'}
[0.802509] (igus_rebel) StdoutLine: {'line': b'5: -        std::string ip;\n'}
[0.802533] (igus_rebel) StdoutLine: {'line': b'5: -        int port;\n'}
[0.802559] (igus_rebel) StdoutLine: {'line': b'5: -        int timeout;\n'}
[0.802586] (igus_rebel) StdoutLine: {'line': b'5: -        std::list<std::string> unprocessedMessages;\n'}
[0.802613] (igus_rebel) StdoutLine: {'line': b'5: +class RebelSocket\n'}
[0.802640] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.802667] (igus_rebel) StdoutLine: {'line': b'5: +private:\n'}
[0.802703] (igus_rebel) StdoutLine: {'line': b'5: +  int sock;\n'}
[0.802730] (igus_rebel) StdoutLine: {'line': b'5: +  std::string ip;\n'}
[0.802758] (igus_rebel) StdoutLine: {'line': b'5: +  int port;\n'}
[0.802785] (igus_rebel) StdoutLine: {'line': b'5: +  int timeout;\n'}
[0.802814] (igus_rebel) StdoutLine: {'line': b'5: +  std::list<std::string> unprocessedMessages;\n'}
[0.802842] (igus_rebel) StdoutLine: {'line': b'5: @@ -23,8 +23,8 @@\n'}
[0.802869] (igus_rebel) StdoutLine: {'line': b'5: -        bool continueReceive = false;\n'}
[0.802897] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread receiveThread;\n'}
[0.802923] (igus_rebel) StdoutLine: {'line': b'5: -        std::thread listCheckThread;\n'}
[0.802950] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex socketWriteLock;\n'}
[0.802978] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex connectionLock;\n'}
[0.803005] (igus_rebel) StdoutLine: {'line': b'5: -        std::mutex messageLock;\n'}
[0.803033] (igus_rebel) StdoutLine: {'line': b'5: -        unsigned long maxUnprocessedMessages = 25;\n'}
[0.803061] (igus_rebel) StdoutLine: {'line': b'5: -        int listCheckWaitMs = 500;\n'}
[0.803090] (igus_rebel) StdoutLine: {'line': b'5: +  bool continueReceive = false;\n'}
[0.803118] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread receiveThread;\n'}
[0.803145] (igus_rebel) StdoutLine: {'line': b'5: +  std::thread listCheckThread;\n'}
[0.803172] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex socketWriteLock;\n'}
[0.803200] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex connectionLock;\n'}
[0.803227] (igus_rebel) StdoutLine: {'line': b'5: +  std::mutex messageLock;\n'}
[0.803255] (igus_rebel) StdoutLine: {'line': b'5: +  unsigned long maxUnprocessedMessages = 25;\n'}
[0.803284] (igus_rebel) StdoutLine: {'line': b'5: +  int listCheckWaitMs = 500;\n'}
[0.803311] (igus_rebel) StdoutLine: {'line': b'5: @@ -32,2 +32,2 @@\n'}
[0.803338] (igus_rebel) StdoutLine: {'line': b'5: -        bool connectionNeeded = false;\n'}
[0.803365] (igus_rebel) StdoutLine: {'line': b'5: -        static const int bufferSize = 4096;\n'}
[0.803393] (igus_rebel) StdoutLine: {'line': b'5: +  bool connectionNeeded = false;\n'}
[0.803420] (igus_rebel) StdoutLine: {'line': b'5: +  static const int bufferSize = 4096;\n'}
[0.803448] (igus_rebel) StdoutLine: {'line': b'5: @@ -35,2 +35,2 @@\n'}
[0.803476] (igus_rebel) StdoutLine: {'line': b'5: -        char fragmentBuffer[bufferSize];\n'}
[0.803504] (igus_rebel) StdoutLine: {'line': b'5: -        int fragmentLength = 0;\n'}
[0.803530] (igus_rebel) StdoutLine: {'line': b'5: +  char fragmentBuffer[bufferSize];\n'}
[0.803558] (igus_rebel) StdoutLine: {'line': b'5: +  int fragmentLength = 0;\n'}
[0.803584] (igus_rebel) StdoutLine: {'line': b'5: @@ -38,2 +38,2 @@\n'}
[0.803610] (igus_rebel) StdoutLine: {'line': b'5: -        void MakeConnection();\n'}
[0.803640] (igus_rebel) StdoutLine: {'line': b'5: -        void SeparateMessages(const char *);\n'}
[0.803666] (igus_rebel) StdoutLine: {'line': b'5: +  void MakeConnection();\n'}
[0.803700] (igus_rebel) StdoutLine: {'line': b'5: +  void SeparateMessages(const char *);\n'}
[0.803727] (igus_rebel) StdoutLine: {'line': b'5: @@ -41,2 +41,2 @@\n'}
[0.803754] (igus_rebel) StdoutLine: {'line': b'5: -        void ReceiveThreadFunction();\n'}
[0.803780] (igus_rebel) StdoutLine: {'line': b'5: -        void ListCheckThreadFunction();\n'}
[0.803806] (igus_rebel) StdoutLine: {'line': b'5: +  void ReceiveThreadFunction();\n'}
[0.803832] (igus_rebel) StdoutLine: {'line': b'5: +  void ListCheckThreadFunction();\n'}
[0.803859] (igus_rebel) StdoutLine: {'line': b'5: @@ -44 +44 @@\n'}
[0.803886] (igus_rebel) StdoutLine: {'line': b'5: -        bool IsSocketOk();\n'}
[0.803912] (igus_rebel) StdoutLine: {'line': b'5: +  bool IsSocketOk();\n'}
[0.803938] (igus_rebel) StdoutLine: {'line': b'5: @@ -46,3 +46,3 @@\n'}
[0.803965] (igus_rebel) StdoutLine: {'line': b'5: -    public:\n'}
[0.803992] (igus_rebel) StdoutLine: {'line': b'5: -        RebelSocket(const std::string &, const int &, const int &);\n'}
[0.804018] (igus_rebel) StdoutLine: {'line': b'5: -        ~RebelSocket();\n'}
[0.804044] (igus_rebel) StdoutLine: {'line': b'5: +public:\n'}
[0.804070] (igus_rebel) StdoutLine: {'line': b'5: +  RebelSocket(const std::string &, const int &, const int &);\n'}
[0.804099] (igus_rebel) StdoutLine: {'line': b'5: +  ~RebelSocket();\n'}
[0.804126] (igus_rebel) StdoutLine: {'line': b'5: @@ -50,6 +50,6 @@\n'}
[0.804153] (igus_rebel) StdoutLine: {'line': b'5: -        void Start();\n'}
[0.804179] (igus_rebel) StdoutLine: {'line': b'5: -        void Stop();\n'}
[0.804206] (igus_rebel) StdoutLine: {'line': b'5: -        bool HasMessage();\n'}
[0.804232] (igus_rebel) StdoutLine: {'line': b'5: -        std::string GetMessage();\n'}
[0.804258] (igus_rebel) StdoutLine: {'line': b'5: -        void SendMessage(const std::string &);\n'}
[0.804285] (igus_rebel) StdoutLine: {'line': b'5: -    };\n'}
[0.804311] (igus_rebel) StdoutLine: {'line': b'5: +  void Start();\n'}
[0.804338] (igus_rebel) StdoutLine: {'line': b'5: +  void Stop();\n'}
[0.804365] (igus_rebel) StdoutLine: {'line': b'5: +  bool HasMessage();\n'}
[0.804392] (igus_rebel) StdoutLine: {'line': b'5: +  std::string GetMessage();\n'}
[0.804420] (igus_rebel) StdoutLine: {'line': b'5: +  void SendMessage(const std::string &);\n'}
[0.804448] (igus_rebel) StdoutLine: {'line': b'5: +};\n'}
[0.804474] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.804501] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/CriMessages.cpp':\n"}
[0.804528] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.804555] (igus_rebel) StdoutLine: {'line': b'5: --- src/CriMessages.cpp\n'}
[0.804581] (igus_rebel) StdoutLine: {'line': b'5: +++ src/CriMessages.cpp.uncrustify\n'}
[0.804607] (igus_rebel) StdoutLine: {'line': b'5: @@ -10,5 +10,5 @@\n'}
[0.804635] (igus_rebel) StdoutLine: {'line': b'5: -    namespace CriMessages\n'}
[0.804663] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.804700] (igus_rebel) StdoutLine: {'line': b'5: -        MessageType CriMessage::GetMessageType(const std::string &msg)\n'}
[0.804729] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.804757] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeStart;\n'}
[0.804785] (igus_rebel) StdoutLine: {'line': b'5: +namespace CriMessages\n'}
[0.804813] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.804841] (igus_rebel) StdoutLine: {'line': b'5: +MessageType CriMessage::GetMessageType(const std::string & msg)\n'}
[0.804869] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.804896] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeStart;\n'}
[0.804924] (igus_rebel) StdoutLine: {'line': b'5: @@ -16,247 +16,224 @@\n'}
[0.804953] (igus_rebel) StdoutLine: {'line': b"5: -            if (msg.at(0) == ' ')\n"}
[0.804980] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.805008] (igus_rebel) StdoutLine: {'line': b'5: -                typeStart = msg.find(" ", 1) + 1;\n'}
[0.805036] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.805063] (igus_rebel) StdoutLine: {'line': b'5: -            else\n'}
[0.805092] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.805119] (igus_rebel) StdoutLine: {'line': b'5: -                typeStart = msg.find(" ") + 1;\n'}
[0.805146] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.805173] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.805202] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805230] (igus_rebel) StdoutLine: {'line': b'5: -            std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.805260] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805286] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_STATUS)\n'}
[0.805312] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.805339] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::STATUS;\n'}
[0.805365] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.805392] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805420] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_OPINFO)\n'}
[0.805448] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.805479] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::OPINFO;\n'}
[0.805508] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.805536] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805564] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_GSIG)\n'}
[0.805593] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.805622] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::GSIG;\n'}
[0.805651] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.805686] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805718] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_GRIPPERSTATE)\n'}
[0.805748] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.805775] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::GRIPPERSTATE;\n'}
[0.805804] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.805831] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805857] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_RUNSTATE)\n'}
[0.805883] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.805910] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::RUNSTATE;\n'}
[0.805937] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.805962] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.805988] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_MESSAGE)\n'}
[0.806015] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.806040] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::MESSAGE;\n'}
[0.806066] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.806091] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806116] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMD)\n'}
[0.806142] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.806167] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMD;\n'}
[0.806193] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.806218] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806244] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CONFIG)\n'}
[0.806270] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.806297] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CONFIG;\n'}
[0.806324] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.806352] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806381] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_INFO)\n'}
[0.806409] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.806436] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::INFO;\n'}
[0.806464] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.806492] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806519] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_LOGMSG)\n'}
[0.806547] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.806575] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::LOGMSG;\n'}
[0.806602] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.806629] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806657] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_VARIABLES)\n'}
[0.806689] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.806718] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::VARIABLES;\n'}
[0.806746] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.806774] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806801] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMDERROR)\n'}
[0.806828] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.806854] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMDERROR;\n'}
[0.806883] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.806909] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.806935] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CMDACK)\n'}
[0.806961] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.806986] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CMDACK;\n'}
[0.807011] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.807037] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.807064] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString == CriKeywords::TYPE_CYCLESTAT)\n'}
[0.807093] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.807119] (igus_rebel) StdoutLine: {'line': b'5: -                return MessageType::CYCLESTAT;\n'}
[0.807146] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.807172] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.807199] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown message type: \\"%s\\"", typeString.c_str());\n'}
[0.807228] (igus_rebel) StdoutLine: {'line': b'5: -            return MessageType::UNKNOWN;\n'}
[0.807257] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.807284] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.807311] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::ParseMessageString(const std::string &statusString, const std::string::size_type &begin,\n'}
[0.807338] (igus_rebel) StdoutLine: {'line': b'5: -                                                   const std::string::size_type &end, const std::string::size_type &keywordLength)\n'}
[0.807366] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.807394] (igus_rebel) StdoutLine: {'line': b'5: -            int start = begin + keywordLength + 1;\n'}
[0.807419] (igus_rebel) StdoutLine: {'line': b'5: -            int length = end - start - 1;\n'}
[0.807444] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.807468] (igus_rebel) StdoutLine: {'line': b'5: -            return statusString.substr(start, length);\n'}
[0.807494] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.807519] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.807544] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T, std::size_t N>\n'}
[0.807570] (igus_rebel) StdoutLine: {'line': b'5: -        void CriMessage::FillArray(std::array<T, N> &array, const std::string &spaceSeparatedValues)\n'}
[0.807597] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.807623] (igus_rebel) StdoutLine: {'line': b'5: -            typename std::array<T, N>::size_type idx = 0;\n'}
[0.807650] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type begin = 0;\n'}
[0.807679] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.807709] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.807736] (igus_rebel) StdoutLine: {'line': b'5: -            while (end != std::string::npos)\n'}
[0.807762] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.807788] (igus_rebel) StdoutLine: {'line': b'5: -                if (idx >= N)\n'}
[0.807815] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.807841] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Parsing error");\n'}
[0.807869] (igus_rebel) StdoutLine: {'line': b'5: -                    return;\n'}
[0.807897] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.807925] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.807953] (igus_rebel) StdoutLine: {'line': b'5: -                std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.807980] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808009] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<float, T>::value)\n'}
[0.808036] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.808062] (igus_rebel) StdoutLine: {'line': b'5: -                    array.at(idx) = std::stof(value);\n'}
[0.808090] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.808116] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808142] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<int, T>::value)\n'}
[0.808168] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.808195] (igus_rebel) StdoutLine: {'line': b'5: -                    array.at(idx) = std::stoi(value);\n'}
[0.808221] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.808247] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808272] (igus_rebel) StdoutLine: {'line': b'5: -                begin = spaceSeparatedValues.find(" ", end);\n'}
[0.808299] (igus_rebel) StdoutLine: {'line': b'5: -                end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.808324] (igus_rebel) StdoutLine: {'line': b'5: -                idx++;\n'}
[0.808349] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.808373] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808398] (igus_rebel) StdoutLine: {'line': b'5: -            std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.808423] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808447] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<float, T>::value)\n'}
[0.808473] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.808499] (igus_rebel) StdoutLine: {'line': b'5: -                array.at(idx) = std::stof(value);\n'}
[0.808523] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.808547] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808571] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<int, T>::value)\n'}
[0.808595] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.808620] (igus_rebel) StdoutLine: {'line': b'5: -                array.at(idx) = std::stoi(value);\n'}
[0.808646] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.808675] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.808704] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808731] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T>\n'}
[0.808757] (igus_rebel) StdoutLine: {'line': b'5: -        void CriMessage::FillVector(std::vector<T> &vector, const std::string &spaceSeparatedValues)\n'}
[0.808784] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.808810] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type begin = 0;\n'}
[0.808837] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.808864] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808889] (igus_rebel) StdoutLine: {'line': b'5: -            while (end != std::string::npos)\n'}
[0.808916] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.808941] (igus_rebel) StdoutLine: {'line': b'5: -                std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.808967] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.808991] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<float, T>::value)\n'}
[0.809017] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.809042] (igus_rebel) StdoutLine: {'line': b'5: -                    vector.push_back(std::stof(value));\n'}
[0.809067] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.809092] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809117] (igus_rebel) StdoutLine: {'line': b'5: -                if (std::is_same<int, T>::value)\n'}
[0.809141] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.809165] (igus_rebel) StdoutLine: {'line': b'5: -                    vector.push_back(std::stoi(value));\n'}
[0.809190] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.809215] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809239] (igus_rebel) StdoutLine: {'line': b'5: -                begin = spaceSeparatedValues.find(" ", end);\n'}
[0.809265] (igus_rebel) StdoutLine: {'line': b'5: -                end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.809292] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.809317] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809343] (igus_rebel) StdoutLine: {'line': b'5: -            std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.809369] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809394] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<float, T>::value)\n'}
[0.809419] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.809443] (igus_rebel) StdoutLine: {'line': b'5: -                vector.push_back(std::stof(value));\n'}
[0.809468] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.809495] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809521] (igus_rebel) StdoutLine: {'line': b'5: -            if (std::is_same<int, T>::value)\n'}
[0.809548] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.809575] (igus_rebel) StdoutLine: {'line': b'5: -                vector.push_back(std::stoi(value));\n'}
[0.809601] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.809628] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.809655] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809688] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T, std::size_t N>\n'}
[0.809717] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::ArrayToString(std::array<T, N> &array)\n'}
[0.809743] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.809771] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.809798] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.809824] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.809851] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.809880] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.809908] (igus_rebel) StdoutLine: {'line': b'5: -            for (T val : array)\n'}
[0.809937] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.809967] (igus_rebel) StdoutLine: {'line': b'5: -                msg << val << " ";\n'}
[0.809997] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.810027] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810057] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.810083] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.810110] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810136] (igus_rebel) StdoutLine: {'line': b'5: -        template <class T>\n'}
[0.810163] (igus_rebel) StdoutLine: {'line': b'5: -        std::string CriMessage::VectorToString(std::vector<T> &vector)\n'}
[0.810191] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.810216] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.810243] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.810268] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.810294] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.810320] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810345] (igus_rebel) StdoutLine: {'line': b'5: -            for (T val : vector)\n'}
[0.810370] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.810396] (igus_rebel) StdoutLine: {'line': b'5: -                msg << val << " ";\n'}
[0.810421] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.810445] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810470] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.810495] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.810519] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.810545] (igus_rebel) StdoutLine: {'line': b'5: -        Status::Status(const std::string &messageString) : CriMessage(MessageType::STATUS)\n'}
[0.810572] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.810598] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type modeStart = messageString.find(CriKeywords::STATUS_MODE);\n'}
[0.810625] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posJointSetPointStart = messageString.find(CriKeywords::STATUS_POSJOINTSETPOINT);\n'}
[0.810653] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posJointCurrentStart = messageString.find(CriKeywords::STATUS_POSJOINTCURRENT);\n'}
[0.810687] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posCartRobotStart = messageString.find(CriKeywords::STATUS_POSCARTROBOT);\n'}
[0.810717] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type posCartPlattformStart = messageString.find(CriKeywords::STATUS_POSCARTPLATTFORM);\n'}
[0.810745] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type overrideValueStart = messageString.find(CriKeywords::STATUS_OVERRIDE);\n'}
[0.810773] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type dinStart = messageString.find(CriKeywords::STATUS_DIN);\n'}
[0.810801] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type doutStart = messageString.find(CriKeywords::STATUS_DOUT);\n'}
[0.810829] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type eStopStart = messageString.find(CriKeywords::STATUS_ESTOP);\n'}
[0.810857] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type supplyStart = messageString.find(CriKeywords::STATUS_SUPPLY);\n'}
[0.810885] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type currentallStart = messageString.find(CriKeywords::STATUS_CURRENTALL);\n'}
[0.810914] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type currentjointsStart = messageString.find(CriKeywords::STATUS_CURRENTJOINTS);\n'}
[0.810940] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorStart = messageString.find(CriKeywords::STATUS_ERROR);\n'}
[0.810966] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type kinstateStart = messageString.find(CriKeywords::STATUS_KINSTATE);\n'}
[0.810991] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811017] (igus_rebel) StdoutLine: {'line': b'5: -            if (\n'}
[0.811042] (igus_rebel) StdoutLine: {'line': b'5: -                !(\n'}
[0.811068] (igus_rebel) StdoutLine: {'line': b'5: -                    (modeStart < posJointSetPointStart) &&\n'}
[0.811093] (igus_rebel) StdoutLine: {'line': b'5: -                    (posJointSetPointStart < posJointCurrentStart) &&\n'}
[0.811120] (igus_rebel) StdoutLine: {'line': b'5: -                    (posJointCurrentStart < posCartRobotStart) &&\n'}
[0.811147] (igus_rebel) StdoutLine: {'line': b'5: -                    (posCartRobotStart < posCartPlattformStart) &&\n'}
[0.811173] (igus_rebel) StdoutLine: {'line': b'5: -                    (posCartPlattformStart < overrideValueStart) &&\n'}
[0.811199] (igus_rebel) StdoutLine: {'line': b'5: -                    (overrideValueStart < dinStart) &&\n'}
[0.811224] (igus_rebel) StdoutLine: {'line': b'5: -                    (dinStart < doutStart) &&\n'}
[0.811250] (igus_rebel) StdoutLine: {'line': b'5: -                    (doutStart < eStopStart) &&\n'}
[0.811275] (igus_rebel) StdoutLine: {'line': b'5: -                    (eStopStart < supplyStart) &&\n'}
[0.811300] (igus_rebel) StdoutLine: {'line': b'5: -                    (supplyStart < currentallStart) &&\n'}
[0.811325] (igus_rebel) StdoutLine: {'line': b'5: -                    (currentallStart < currentjointsStart) &&\n'}
[0.811352] (igus_rebel) StdoutLine: {'line': b'5: -                    (currentjointsStart < errorStart) &&\n'}
[0.811378] (igus_rebel) StdoutLine: {'line': b'5: -                    (errorStart < kinstateStart)))\n'}
[0.811402] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.811428] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Bad parsing error for message \\"%s\\"", messageString.c_str());\n'}
[0.811454] (igus_rebel) StdoutLine: {'line': b'5: -                return;\n'}
[0.811481] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.811506] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.811531] (igus_rebel) StdoutLine: {'line': b'5: -            std::string modeString = ParseMessageString(messageString, modeStart, posJointSetPointStart,\n'}
[0.811556] (igus_rebel) StdoutLine: {'line': b"5: +  if (msg.at(0) == ' ') {\n"}
[0.811582] (igus_rebel) StdoutLine: {'line': b'5: +    typeStart = msg.find(" ", 1) + 1;\n'}
[0.811607] (igus_rebel) StdoutLine: {'line': b'5: +  } else {\n'}
[0.811634] (igus_rebel) StdoutLine: {'line': b'5: +    typeStart = msg.find(" ") + 1;\n'}
[0.811661] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.811695] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.811723] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.811749] (igus_rebel) StdoutLine: {'line': b'5: +  std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.811776] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.811802] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_STATUS) {\n'}
[0.811829] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::STATUS;\n'}
[0.811857] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.811887] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.811915] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_OPINFO) {\n'}
[0.811946] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::OPINFO;\n'}
[0.811975] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812004] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812034] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_GSIG) {\n'}
[0.812061] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::GSIG;\n'}
[0.812087] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812113] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812140] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_GRIPPERSTATE) {\n'}
[0.812167] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::GRIPPERSTATE;\n'}
[0.812192] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812218] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812245] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_RUNSTATE) {\n'}
[0.812272] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::RUNSTATE;\n'}
[0.812297] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812322] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812347] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_MESSAGE) {\n'}
[0.812373] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::MESSAGE;\n'}
[0.812399] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812424] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812450] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMD) {\n'}
[0.812476] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMD;\n'}
[0.812501] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812527] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812554] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CONFIG) {\n'}
[0.812579] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CONFIG;\n'}
[0.812604] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812630] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812656] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_INFO) {\n'}
[0.812688] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::INFO;\n'}
[0.812715] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812741] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812769] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_LOGMSG) {\n'}
[0.812795] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::LOGMSG;\n'}
[0.812822] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812849] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812876] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_VARIABLES) {\n'}
[0.812903] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::VARIABLES;\n'}
[0.812929] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.812957] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.812981] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMDERROR) {\n'}
[0.813006] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMDERROR;\n'}
[0.813031] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.813057] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813082] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CMDACK) {\n'}
[0.813106] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CMDACK;\n'}
[0.813132] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.813156] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813181] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString == CriKeywords::TYPE_CYCLESTAT) {\n'}
[0.813206] (igus_rebel) StdoutLine: {'line': b'5: +    return MessageType::CYCLESTAT;\n'}
[0.813231] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.813257] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813281] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown message type: \\"%s\\"",\n'}
[0.813307] (igus_rebel) StdoutLine: {'line': b'5: +        typeString.c_str());\n'}
[0.813332] (igus_rebel) StdoutLine: {'line': b'5: +  return MessageType::UNKNOWN;\n'}
[0.813357] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.813382] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813407] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::ParseMessageString(\n'}
[0.813433] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string & statusString, const std::string::size_type & begin,\n'}
[0.813458] (igus_rebel) StdoutLine: {'line': b'5: +  const std::string::size_type & end, const std::string::size_type & keywordLength)\n'}
[0.813484] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.813510] (igus_rebel) StdoutLine: {'line': b'5: +  int start = begin + keywordLength + 1;\n'}
[0.813535] (igus_rebel) StdoutLine: {'line': b'5: +  int length = end - start - 1;\n'}
[0.813560] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813585] (igus_rebel) StdoutLine: {'line': b'5: +  return statusString.substr(start, length);\n'}
[0.813610] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.813637] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813662] (igus_rebel) StdoutLine: {'line': b'5: +template<class T, std::size_t N>\n'}
[0.813697] (igus_rebel) StdoutLine: {'line': b'5: +void CriMessage::FillArray(std::array<T, N> & array, const std::string & spaceSeparatedValues)\n'}
[0.813725] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.813752] (igus_rebel) StdoutLine: {'line': b'5: +  typename std::array<T, N>::size_type idx = 0;\n'}
[0.813778] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type begin = 0;\n'}
[0.813805] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.813831] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.813860] (igus_rebel) StdoutLine: {'line': b'5: +  while (end != std::string::npos) {\n'}
[0.813888] (igus_rebel) StdoutLine: {'line': b'5: +    if (idx >= N) {\n'}
[0.813915] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Parsing error");\n'}
[0.813945] (igus_rebel) StdoutLine: {'line': b'5: +      return;\n'}
[0.813975] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.814004] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814034] (igus_rebel) StdoutLine: {'line': b'5: +    std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.814062] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814089] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<float, T>::value) {\n'}
[0.814117] (igus_rebel) StdoutLine: {'line': b'5: +      array.at(idx) = std::stof(value);\n'}
[0.814147] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.814173] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814198] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<int, T>::value) {\n'}
[0.814223] (igus_rebel) StdoutLine: {'line': b'5: +      array.at(idx) = std::stoi(value);\n'}
[0.814248] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.814274] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814300] (igus_rebel) StdoutLine: {'line': b'5: +    begin = spaceSeparatedValues.find(" ", end);\n'}
[0.814326] (igus_rebel) StdoutLine: {'line': b'5: +    end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.814353] (igus_rebel) StdoutLine: {'line': b'5: +    idx++;\n'}
[0.814379] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.814403] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814429] (igus_rebel) StdoutLine: {'line': b'5: +  std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.814455] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814481] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<float, T>::value) {\n'}
[0.814505] (igus_rebel) StdoutLine: {'line': b'5: +    array.at(idx) = std::stof(value);\n'}
[0.814531] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.814555] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814580] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<int, T>::value) {\n'}
[0.814606] (igus_rebel) StdoutLine: {'line': b'5: +    array.at(idx) = std::stoi(value);\n'}
[0.814631] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.814658] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.814690] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814718] (igus_rebel) StdoutLine: {'line': b'5: +template<class T>\n'}
[0.814746] (igus_rebel) StdoutLine: {'line': b'5: +void CriMessage::FillVector(std::vector<T> & vector, const std::string & spaceSeparatedValues)\n'}
[0.814774] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.814801] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type begin = 0;\n'}
[0.814828] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.814857] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814887] (igus_rebel) StdoutLine: {'line': b'5: +  while (end != std::string::npos) {\n'}
[0.814918] (igus_rebel) StdoutLine: {'line': b'5: +    std::string value = spaceSeparatedValues.substr(begin, end - begin);\n'}
[0.814948] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.814980] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<float, T>::value) {\n'}
[0.815009] (igus_rebel) StdoutLine: {'line': b'5: +      vector.push_back(std::stof(value));\n'}
[0.815039] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.815067] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.815094] (igus_rebel) StdoutLine: {'line': b'5: +    if (std::is_same<int, T>::value) {\n'}
[0.815121] (igus_rebel) StdoutLine: {'line': b'5: +      vector.push_back(std::stoi(value));\n'}
[0.815150] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.815176] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.815202] (igus_rebel) StdoutLine: {'line': b'5: +    begin = spaceSeparatedValues.find(" ", end);\n'}
[0.815228] (igus_rebel) StdoutLine: {'line': b'5: +    end = spaceSeparatedValues.find(" ", begin + 1);\n'}
[0.815255] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.815281] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.815307] (igus_rebel) StdoutLine: {'line': b'5: +  std::string value = spaceSeparatedValues.substr(begin);\n'}
[0.815333] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.815359] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<float, T>::value) {\n'}
[0.815386] (igus_rebel) StdoutLine: {'line': b'5: +    vector.push_back(std::stof(value));\n'}
[0.815411] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.815437] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.815463] (igus_rebel) StdoutLine: {'line': b'5: +  if (std::is_same<int, T>::value) {\n'}
[0.815488] (igus_rebel) StdoutLine: {'line': b'5: +    vector.push_back(std::stoi(value));\n'}
[0.815516] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.815542] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.815568] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.815593] (igus_rebel) StdoutLine: {'line': b'5: +template<class T, std::size_t N>\n'}
[0.815618] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::ArrayToString(std::array<T, N> & array)\n'}
[0.815646] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.815676] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.815706] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::showpoint;\n'}
[0.815732] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::fixed;\n'}
[0.815761] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.815790] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.815816] (igus_rebel) StdoutLine: {'line': b'5: +  for (T val : array) {\n'}
[0.815843] (igus_rebel) StdoutLine: {'line': b'5: +    msg << val << " ";\n'}
[0.815873] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.815902] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.815930] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.815959] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.815990] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816019] (igus_rebel) StdoutLine: {'line': b'5: +template<class T>\n'}
[0.816046] (igus_rebel) StdoutLine: {'line': b'5: +std::string CriMessage::VectorToString(std::vector<T> & vector)\n'}
[0.816073] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.816099] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.816126] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::showpoint;\n'}
[0.816152] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::fixed;\n'}
[0.816179] (igus_rebel) StdoutLine: {'line': b'5: +  msg << std::setprecision(FLOAT_PRINT_PRECISION);\n'}
[0.816205] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816233] (igus_rebel) StdoutLine: {'line': b'5: +  for (T val : vector) {\n'}
[0.816258] (igus_rebel) StdoutLine: {'line': b'5: +    msg << val << " ";\n'}
[0.816283] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.816308] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816333] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.816362] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.816386] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816411] (igus_rebel) StdoutLine: {'line': b'5: +Status::Status(const std::string & messageString)\n'}
[0.816436] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::STATUS)\n'}
[0.816460] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.816486] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type modeStart = messageString.find(CriKeywords::STATUS_MODE);\n'}
[0.816511] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posJointSetPointStart =\n'}
[0.816537] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSJOINTSETPOINT);\n'}
[0.816564] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posJointCurrentStart =\n'}
[0.816589] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSJOINTCURRENT);\n'}
[0.816614] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posCartRobotStart = messageString.find(CriKeywords::STATUS_POSCARTROBOT);\n'}
[0.816641] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type posCartPlattformStart =\n'}
[0.816667] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::STATUS_POSCARTPLATTFORM);\n'}
[0.816701] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type overrideValueStart = messageString.find(CriKeywords::STATUS_OVERRIDE);\n'}
[0.816729] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type dinStart = messageString.find(CriKeywords::STATUS_DIN);\n'}
[0.816761] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type doutStart = messageString.find(CriKeywords::STATUS_DOUT);\n'}
[0.816788] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type eStopStart = messageString.find(CriKeywords::STATUS_ESTOP);\n'}
[0.816815] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type supplyStart = messageString.find(CriKeywords::STATUS_SUPPLY);\n'}
[0.816841] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type currentallStart = messageString.find(CriKeywords::STATUS_CURRENTALL);\n'}
[0.816868] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type currentjointsStart = messageString.find(CriKeywords::STATUS_CURRENTJOINTS);\n'}
[0.816894] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorStart = messageString.find(CriKeywords::STATUS_ERROR);\n'}
[0.816920] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type kinstateStart = messageString.find(CriKeywords::STATUS_KINSTATE);\n'}
[0.816946] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.816972] (igus_rebel) StdoutLine: {'line': b'5: +  if (\n'}
[0.816998] (igus_rebel) StdoutLine: {'line': b'5: +    !(\n'}
[0.817024] (igus_rebel) StdoutLine: {'line': b'5: +      (modeStart < posJointSetPointStart) &&\n'}
[0.817051] (igus_rebel) StdoutLine: {'line': b'5: +      (posJointSetPointStart < posJointCurrentStart) &&\n'}
[0.817077] (igus_rebel) StdoutLine: {'line': b'5: +      (posJointCurrentStart < posCartRobotStart) &&\n'}
[0.817104] (igus_rebel) StdoutLine: {'line': b'5: +      (posCartRobotStart < posCartPlattformStart) &&\n'}
[0.817130] (igus_rebel) StdoutLine: {'line': b'5: +      (posCartPlattformStart < overrideValueStart) &&\n'}
[0.817156] (igus_rebel) StdoutLine: {'line': b'5: +      (overrideValueStart < dinStart) &&\n'}
[0.817182] (igus_rebel) StdoutLine: {'line': b'5: +      (dinStart < doutStart) &&\n'}
[0.817207] (igus_rebel) StdoutLine: {'line': b'5: +      (doutStart < eStopStart) &&\n'}
[0.817234] (igus_rebel) StdoutLine: {'line': b'5: +      (eStopStart < supplyStart) &&\n'}
[0.817260] (igus_rebel) StdoutLine: {'line': b'5: +      (supplyStart < currentallStart) &&\n'}
[0.817287] (igus_rebel) StdoutLine: {'line': b'5: +      (currentallStart < currentjointsStart) &&\n'}
[0.817313] (igus_rebel) StdoutLine: {'line': b'5: +      (currentjointsStart < errorStart) &&\n'}
[0.817340] (igus_rebel) StdoutLine: {'line': b'5: +      (errorStart < kinstateStart)))\n'}
[0.817366] (igus_rebel) StdoutLine: {'line': b'5: +  {\n'}
[0.817392] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Bad parsing error for message \\"%s\\"",\n'}
[0.817418] (igus_rebel) StdoutLine: {'line': b'5: +          messageString.c_str());\n'}
[0.817444] (igus_rebel) StdoutLine: {'line': b'5: +    return;\n'}
[0.817471] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.817498] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.817525] (igus_rebel) StdoutLine: {'line': b'5: +  std::string modeString = ParseMessageString(messageString, modeStart, posJointSetPointStart,\n'}
[0.817551] (igus_rebel) StdoutLine: {'line': b'5: @@ -264,11 +241,16 @@\n'}
[0.817578] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posJointSetPointString = ParseMessageString(messageString, posJointSetPointStart,\n'}
[0.817604] (igus_rebel) StdoutLine: {'line': b'5: -                                                                    posJointCurrentStart, CriKeywords::STATUS_POSJOINTSETPOINT.size());\n'}
[0.817631] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posJointCurrentString = ParseMessageString(messageString, posJointCurrentStart,\n'}
[0.817658] (igus_rebel) StdoutLine: {'line': b'5: -                                                                   posCartRobotStart, CriKeywords::STATUS_POSJOINTCURRENT.size());\n'}
[0.817692] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posCartRobotString = ParseMessageString(messageString, posCartRobotStart,\n'}
[0.817720] (igus_rebel) StdoutLine: {'line': b'5: -                                                                posCartPlattformStart, CriKeywords::STATUS_POSCARTROBOT.size());\n'}
[0.817748] (igus_rebel) StdoutLine: {'line': b'5: -            std::string posCartPlattformString = ParseMessageString(messageString, posCartPlattformStart,\n'}
[0.817778] (igus_rebel) StdoutLine: {'line': b'5: -                                                                    overrideValueStart, CriKeywords::STATUS_POSCARTPLATTFORM.size());\n'}
[0.817805] (igus_rebel) StdoutLine: {'line': b'5: -            std::string overrideValueString = ParseMessageString(messageString, overrideValueStart,\n'}
[0.817831] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 dinStart, CriKeywords::STATUS_OVERRIDE.size());\n'}
[0.817858] (igus_rebel) StdoutLine: {'line': b'5: -            std::string dinString = ParseMessageString(messageString, dinStart, doutStart,\n'}
[0.817884] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posJointSetPointString = ParseMessageString(messageString, posJointSetPointStart,\n'}
[0.817909] (igus_rebel) StdoutLine: {'line': b'5: +                                                                    posJointCurrentStart,\n'}
[0.817935] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSJOINTSETPOINT.size());\n'}
[0.817962] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posJointCurrentString = ParseMessageString(messageString, posJointCurrentStart,\n'}
[0.817990] (igus_rebel) StdoutLine: {'line': b'5: +                                                                   posCartRobotStart,\n'}
[0.818021] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSJOINTCURRENT.size());\n'}
[0.818049] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posCartRobotString = ParseMessageString(messageString, posCartRobotStart,\n'}
[0.818076] (igus_rebel) StdoutLine: {'line': b'5: +                                                                posCartPlattformStart,\n'}
[0.818103] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSCARTROBOT.size());\n'}
[0.818130] (igus_rebel) StdoutLine: {'line': b'5: +  std::string posCartPlattformString = ParseMessageString(messageString, posCartPlattformStart,\n'}
[0.818159] (igus_rebel) StdoutLine: {'line': b'5: +                                                                    overrideValueStart,\n'}
[0.818187] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_POSCARTPLATTFORM.size());\n'}
[0.818214] (igus_rebel) StdoutLine: {'line': b'5: +  std::string overrideValueString = ParseMessageString(messageString, overrideValueStart,\n'}
[0.818243] (igus_rebel) StdoutLine: {'line': b'5: +                                                                 dinStart,\n'}
[0.818271] (igus_rebel) StdoutLine: {'line': b'5: +        CriKeywords::STATUS_OVERRIDE.size());\n'}
[0.818299] (igus_rebel) StdoutLine: {'line': b'5: +  std::string dinString = ParseMessageString(messageString, dinStart, doutStart,\n'}
[0.818327] (igus_rebel) StdoutLine: {'line': b'5: @@ -276 +258 @@\n'}
[0.818352] (igus_rebel) StdoutLine: {'line': b'5: -            std::string doutString = ParseMessageString(messageString, doutStart, eStopStart,\n'}
[0.818379] (igus_rebel) StdoutLine: {'line': b'5: +  std::string doutString = ParseMessageString(messageString, doutStart, eStopStart,\n'}
[0.818406] (igus_rebel) StdoutLine: {'line': b'5: @@ -278 +260 @@\n'}
[0.818433] (igus_rebel) StdoutLine: {'line': b'5: -            std::string eStopString = ParseMessageString(messageString, eStopStart, supplyStart,\n'}
[0.818461] (igus_rebel) StdoutLine: {'line': b'5: +  std::string eStopString = ParseMessageString(messageString, eStopStart, supplyStart,\n'}
[0.818487] (igus_rebel) StdoutLine: {'line': b'5: @@ -280 +262 @@\n'}
[0.818514] (igus_rebel) StdoutLine: {'line': b'5: -            std::string supplyString = ParseMessageString(messageString, supplyStart, currentallStart,\n'}
[0.818540] (igus_rebel) StdoutLine: {'line': b'5: +  std::string supplyString = ParseMessageString(messageString, supplyStart, currentallStart,\n'}
[0.818566] (igus_rebel) StdoutLine: {'line': b'5: @@ -282 +264,2 @@\n'}
[0.818592] (igus_rebel) StdoutLine: {'line': b'5: -            std::string currentallString = ParseMessageString(messageString, currentallStart, currentjointsStart,\n'}
[0.818621] (igus_rebel) StdoutLine: {'line': b'5: +  std::string currentallString = ParseMessageString(messageString, currentallStart,\n'}
[0.818647] (igus_rebel) StdoutLine: {'line': b'5: +        currentjointsStart,\n'}
[0.818677] (igus_rebel) StdoutLine: {'line': b'5: @@ -284,3 +267,5 @@\n'}
[0.818707] (igus_rebel) StdoutLine: {'line': b'5: -            std::string currentjointsString = ParseMessageString(messageString, currentjointsStart, errorStart,\n'}
[0.818732] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 CriKeywords::STATUS_CURRENTJOINTS.size());\n'}
[0.818759] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorString = ParseMessageString(messageString, errorStart, kinstateStart,\n'}
[0.818787] (igus_rebel) StdoutLine: {'line': b'5: +  std::string currentjointsString = ParseMessageString(messageString, currentjointsStart,\n'}
[0.818814] (igus_rebel) StdoutLine: {'line': b'5: +        errorStart,\n'}
[0.818841] (igus_rebel) StdoutLine: {'line': b'5: +                                                                 CriKeywords::STATUS_CURRENTJOINTS.\n'}
[0.818866] (igus_rebel) StdoutLine: {'line': b'5: +      size());\n'}
[0.818892] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorString = ParseMessageString(messageString, errorStart, kinstateStart,\n'}
[0.818918] (igus_rebel) StdoutLine: {'line': b'5: @@ -288 +273,2 @@\n'}
[0.818944] (igus_rebel) StdoutLine: {'line': b'5: -            std::string kinstateString = ParseMessageString(messageString, kinstateStart, messageString.size() + 1,\n'}
[0.818971] (igus_rebel) StdoutLine: {'line': b'5: +  std::string kinstateString = ParseMessageString(messageString, kinstateStart,\n'}
[0.818998] (igus_rebel) StdoutLine: {'line': b'5: +        messageString.size() + 1,\n'}
[0.819025] (igus_rebel) StdoutLine: {'line': b'5: @@ -291,20 +277,20 @@\n'}
[0.819050] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorSummaryEnd = errorString.find(" ");\n'}
[0.819076] (igus_rebel) StdoutLine: {'line': b'5: -            errorSummary = errorString.substr(0, errorSummaryEnd);\n'}
[0.819100] (igus_rebel) StdoutLine: {'line': b'5: -            std::string errorJointsString = errorString.substr(errorSummaryEnd + 1);\n'}
[0.819125] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.819150] (igus_rebel) StdoutLine: {'line': b'5: -            mode = GetMode(modeString);\n'}
[0.819175] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posJointSetPoint, posJointSetPointString);\n'}
[0.819201] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posJointCurrent, posJointCurrentString);\n'}
[0.819226] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posCartRobot, posCartRobotString);\n'}
[0.819251] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(posCartPlattform, posCartPlattformString);\n'}
[0.819277] (igus_rebel) StdoutLine: {'line': b'5: -            try {\n'}
[0.819302] (igus_rebel) StdoutLine: {'line': b'5: -                overrideValue = std::stof(overrideValueString);\n'}
[0.819327] (igus_rebel) StdoutLine: {'line': b'5: -                din = std::stoi(dinString);     // TODO: Process further to actual meaning\n'}
[0.819353] (igus_rebel) StdoutLine: {'line': b'5: -                dout = std::stoi(doutString);   // TODO: Process further to actual meaning\n'}
[0.819378] (igus_rebel) StdoutLine: {'line': b'5: -                eStop = std::stoi(eStopString); // TODO: Process further to actual meaning\n'}
[0.819403] (igus_rebel) StdoutLine: {'line': b'5: -                supply = std::stoi(supplyString);\n'}
[0.819428] (igus_rebel) StdoutLine: {'line': b'5: -                currentall = std::stoi(currentallString);\n'}
[0.819453] (igus_rebel) StdoutLine: {'line': b'5: -            } catch (const std::invalid_argument &e) {\n'}
[0.819478] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing status message: %s", e.what());\n'}
[0.819507] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.819533] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(currentjoints, currentjointsString);\n'}
[0.819561] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorSummaryEnd = errorString.find(" ");\n'}
[0.819589] (igus_rebel) StdoutLine: {'line': b'5: +  errorSummary = errorString.substr(0, errorSummaryEnd);\n'}
[0.819614] (igus_rebel) StdoutLine: {'line': b'5: +  std::string errorJointsString = errorString.substr(errorSummaryEnd + 1);\n'}
[0.819641] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.819667] (igus_rebel) StdoutLine: {'line': b'5: +  mode = GetMode(modeString);\n'}
[0.819700] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posJointSetPoint, posJointSetPointString);\n'}
[0.819726] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posJointCurrent, posJointCurrentString);\n'}
[0.819753] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posCartRobot, posCartRobotString);\n'}
[0.819779] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(posCartPlattform, posCartPlattformString);\n'}
[0.819804] (igus_rebel) StdoutLine: {'line': b'5: +  try {\n'}
[0.819830] (igus_rebel) StdoutLine: {'line': b'5: +    overrideValue = std::stof(overrideValueString);\n'}
[0.819858] (igus_rebel) StdoutLine: {'line': b'5: +    din = std::stoi(dinString);                 // TODO: Process further to actual meaning\n'}
[0.819885] (igus_rebel) StdoutLine: {'line': b'5: +    dout = std::stoi(doutString);               // TODO: Process further to actual meaning\n'}
[0.819911] (igus_rebel) StdoutLine: {'line': b'5: +    eStop = std::stoi(eStopString);             // TODO: Process further to actual meaning\n'}
[0.819937] (igus_rebel) StdoutLine: {'line': b'5: +    supply = std::stoi(supplyString);\n'}
[0.819962] (igus_rebel) StdoutLine: {'line': b'5: +    currentall = std::stoi(currentallString);\n'}
[0.819986] (igus_rebel) StdoutLine: {'line': b'5: +  } catch (const std::invalid_argument & e) {\n'}
[0.820011] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing status message: %s", e.what());\n'}
[0.820035] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.820060] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(currentjoints, currentjointsString);\n'}
[0.820085] (igus_rebel) StdoutLine: {'line': b'5: @@ -312,59 +298,60 @@\n'}
[0.820110] (igus_rebel) StdoutLine: {'line': b'5: -            FillArray(errorJoints, errorJointsString); // TODO: Process further to actual meaning\n'}
[0.820136] (igus_rebel) StdoutLine: {'line': b'5: -            kinstate = GetKinstate(kinstateString);\n'}
[0.820163] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.820188] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.820213] (igus_rebel) StdoutLine: {'line': b'5: -        Status::Status() : CriMessage(MessageType::STATUS)\n'}
[0.820239] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.820264] (igus_rebel) StdoutLine: {'line': b'5: -            mode = Mode::UNKNOWN;\n'}
[0.820289] (igus_rebel) StdoutLine: {'line': b'5: -            posJointSetPoint.fill(0.0f);\n'}
[0.820314] (igus_rebel) StdoutLine: {'line': b'5: -            posJointCurrent.fill(0.0f);\n'}
[0.820340] (igus_rebel) StdoutLine: {'line': b'5: -            posCartRobot.fill(0.0f);\n'}
[0.820365] (igus_rebel) StdoutLine: {'line': b'5: -            posCartPlattform.fill(0.0f);\n'}
[0.820391] (igus_rebel) StdoutLine: {'line': b'5: -            overrideValue = 0.0f;\n'}
[0.820416] (igus_rebel) StdoutLine: {'line': b'5: -            din = 0;\n'}
[0.820441] (igus_rebel) StdoutLine: {'line': b'5: -            dout = 0;\n'}
[0.820467] (igus_rebel) StdoutLine: {'line': b'5: -            eStop = 0;\n'}
[0.820492] (igus_rebel) StdoutLine: {'line': b'5: -            supply = 0;\n'}
[0.820518] (igus_rebel) StdoutLine: {'line': b'5: -            currentall = 0;\n'}
[0.820545] (igus_rebel) StdoutLine: {'line': b'5: -            currentjoints.fill(0);\n'}
[0.820570] (igus_rebel) StdoutLine: {'line': b'5: -            errorSummary = "NotInitialized";\n'}
[0.820597] (igus_rebel) StdoutLine: {'line': b'5: -            errorJoints.fill(0);\n'}
[0.820622] (igus_rebel) StdoutLine: {'line': b'5: -            kinstate = Kinstate::UNKNOWN;\n'}
[0.820649] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.820678] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.820706] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Status::ModeToString(const Mode &mode)\n'}
[0.820734] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.820760] (igus_rebel) StdoutLine: {'line': b'5: -            switch (mode)\n'}
[0.820787] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.820822] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::JOINT:\n'}
[0.820850] (igus_rebel) StdoutLine: {'line': b'5: -                return "Joint";\n'}
[0.820877] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::CARTBASE:\n'}
[0.820904] (igus_rebel) StdoutLine: {'line': b'5: -                return "Cartesian (base)";\n'}
[0.820931] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::CARTTOOL:\n'}
[0.820958] (igus_rebel) StdoutLine: {'line': b'5: -                return "Cartesian (tool)";\n'}
[0.820984] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::PLATFORM:\n'}
[0.821011] (igus_rebel) StdoutLine: {'line': b'5: -                return "Platform";\n'}
[0.821038] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::FSM:\n'}
[0.821068] (igus_rebel) StdoutLine: {'line': b'5: -                return "FSM";\n'}
[0.821093] (igus_rebel) StdoutLine: {'line': b'5: -            case Mode::UNKNOWN:\n'}
[0.821119] (igus_rebel) StdoutLine: {'line': b'5: -                return "Unknown";\n'}
[0.821145] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.821171] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821196] (igus_rebel) StdoutLine: {'line': b'5: -            return std::string();\n'}
[0.821221] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.821247] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821273] (igus_rebel) StdoutLine: {'line': b'5: -        void Status::Print()\n'}
[0.821298] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.821324] (igus_rebel) StdoutLine: {'line': b'5: -            std::cout << ToString();\n'}
[0.821350] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.821377] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821402] (igus_rebel) StdoutLine: {'line': b'5: -        void Status::Log()\n'}
[0.821429] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.821454] (igus_rebel) StdoutLine: {'line': b'5: -            rclcpp::Clock::SharedPtr clock_ = std::make_shared<rclcpp::Clock>(RCL_SYSTEM_TIME);\n'}
[0.821481] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *clock_, 60, "Rebel status:\\n%s", ToString().c_str());\n'}
[0.821508] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.821535] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.821561] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Status::ToString()\n'}
[0.821587] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.821613] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.821639] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint\n'}
[0.821665] (igus_rebel) StdoutLine: {'line': b'5: +  FillArray(errorJoints, errorJointsString);           // TODO: Process further to actual meaning\n'}
[0.821699] (igus_rebel) StdoutLine: {'line': b'5: +  kinstate = GetKinstate(kinstateString);\n'}
[0.821727] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.821754] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.821779] (igus_rebel) StdoutLine: {'line': b'5: +Status::Status()\n'}
[0.821804] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::STATUS)\n'}
[0.821830] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.821855] (igus_rebel) StdoutLine: {'line': b'5: +  mode = Mode::UNKNOWN;\n'}
[0.821881] (igus_rebel) StdoutLine: {'line': b'5: +  posJointSetPoint.fill(0.0f);\n'}
[0.821909] (igus_rebel) StdoutLine: {'line': b'5: +  posJointCurrent.fill(0.0f);\n'}
[0.821935] (igus_rebel) StdoutLine: {'line': b'5: +  posCartRobot.fill(0.0f);\n'}
[0.821966] (igus_rebel) StdoutLine: {'line': b'5: +  posCartPlattform.fill(0.0f);\n'}
[0.821992] (igus_rebel) StdoutLine: {'line': b'5: +  overrideValue = 0.0f;\n'}
[0.822018] (igus_rebel) StdoutLine: {'line': b'5: +  din = 0;\n'}
[0.822044] (igus_rebel) StdoutLine: {'line': b'5: +  dout = 0;\n'}
[0.822071] (igus_rebel) StdoutLine: {'line': b'5: +  eStop = 0;\n'}
[0.822097] (igus_rebel) StdoutLine: {'line': b'5: +  supply = 0;\n'}
[0.822123] (igus_rebel) StdoutLine: {'line': b'5: +  currentall = 0;\n'}
[0.822148] (igus_rebel) StdoutLine: {'line': b'5: +  currentjoints.fill(0);\n'}
[0.822172] (igus_rebel) StdoutLine: {'line': b'5: +  errorSummary = "NotInitialized";\n'}
[0.822197] (igus_rebel) StdoutLine: {'line': b'5: +  errorJoints.fill(0);\n'}
[0.822222] (igus_rebel) StdoutLine: {'line': b'5: +  kinstate = Kinstate::UNKNOWN;\n'}
[0.822246] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.822271] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822296] (igus_rebel) StdoutLine: {'line': b'5: +std::string Status::ModeToString(const Mode & mode)\n'}
[0.822322] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.822346] (igus_rebel) StdoutLine: {'line': b'5: +  switch (mode) {\n'}
[0.822371] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::JOINT:\n'}
[0.822396] (igus_rebel) StdoutLine: {'line': b'5: +      return "Joint";\n'}
[0.822422] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::CARTBASE:\n'}
[0.822447] (igus_rebel) StdoutLine: {'line': b'5: +      return "Cartesian (base)";\n'}
[0.822472] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::CARTTOOL:\n'}
[0.822498] (igus_rebel) StdoutLine: {'line': b'5: +      return "Cartesian (tool)";\n'}
[0.822526] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::PLATFORM:\n'}
[0.822550] (igus_rebel) StdoutLine: {'line': b'5: +      return "Platform";\n'}
[0.822575] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::FSM:\n'}
[0.822607] (igus_rebel) StdoutLine: {'line': b'5: +      return "FSM";\n'}
[0.822633] (igus_rebel) StdoutLine: {'line': b'5: +    case Mode::UNKNOWN:\n'}
[0.822659] (igus_rebel) StdoutLine: {'line': b'5: +      return "Unknown";\n'}
[0.822690] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.822717] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822743] (igus_rebel) StdoutLine: {'line': b'5: +  return std::string();\n'}
[0.822770] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.822797] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822826] (igus_rebel) StdoutLine: {'line': b'5: +void Status::Print()\n'}
[0.822851] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.822877] (igus_rebel) StdoutLine: {'line': b'5: +  std::cout << ToString();\n'}
[0.822904] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.822929] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.822954] (igus_rebel) StdoutLine: {'line': b'5: +void Status::Log()\n'}
[0.822980] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.823005] (igus_rebel) StdoutLine: {'line': b'5: +  rclcpp::Clock::SharedPtr clock_ = std::make_shared<rclcpp::Clock>(RCL_SYSTEM_TIME);\n'}
[0.823031] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *clock_, 60, "Rebel status:\\n%s",\n'}
[0.823057] (igus_rebel) StdoutLine: {'line': b'5: +        ToString().c_str());\n'}
[0.823083] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.823109] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.823135] (igus_rebel) StdoutLine: {'line': b'5: +std::string Status::ToString()\n'}
[0.823160] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.823185] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.823210] (igus_rebel) StdoutLine: {'line': b'5: +  msg           << std::showpoint\n'}
[0.823236] (igus_rebel) StdoutLine: {'line': b'5: @@ -390,303 +377,175 @@\n'}
[0.823262] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.823291] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.823320] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.823345] (igus_rebel) StdoutLine: {'line': b'5: -        Mode Status::GetMode(const std::string &modeString)\n'}
[0.823371] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.823397] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_JOINT)\n'}
[0.823422] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.823449] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::JOINT;\n'}
[0.823476] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.823501] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.823527] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_CARTBASE)\n'}
[0.823553] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.823580] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::CARTBASE;\n'}
[0.823607] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.823633] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.823660] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_CARTTOOL)\n'}
[0.823693] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.823721] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::CARTTOOL;\n'}
[0.823748] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.823775] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.823802] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_PLATFORM)\n'}
[0.823828] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.823855] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::PLATFORM;\n'}
[0.823881] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.823907] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.823932] (igus_rebel) StdoutLine: {'line': b'5: -            if (modeString == CriKeywords::MODE_FSM)\n'}
[0.823961] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.823987] (igus_rebel) StdoutLine: {'line': b'5: -                return Mode::FSM;\n'}
[0.824013] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.824038] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824063] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown robot mode during parsing: %s", modeString.c_str());\n'}
[0.824089] (igus_rebel) StdoutLine: {'line': b'5: -            return Mode::UNKNOWN;\n'}
[0.824116] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.824142] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824168] (igus_rebel) StdoutLine: {'line': b'5: -        Kinstate Status::GetKinstate(const std::string &kinstateString)\n'}
[0.824195] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.824221] (igus_rebel) StdoutLine: {'line': b'5: -            int kinstateInt = std::stoi(kinstateString);\n'}
[0.824248] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824273] (igus_rebel) StdoutLine: {'line': b'5: -            switch (kinstateInt)\n'}
[0.824300] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.824325] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::NO_ERROR:\n'}
[0.824350] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::NO_ERROR;\n'}
[0.824375] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824400] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::JOINT_LIMIT_MIN:\n'}
[0.824425] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::JOINT_LIMIT_MIN;\n'}
[0.824451] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824477] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::JOINT_LIMIT_MAX:\n'}
[0.824503] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::JOINT_LIMIT_MAX;\n'}
[0.824529] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824554] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.824583] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_CENTER;\n'}
[0.824611] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824637] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.824664] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_REACH;\n'}
[0.824696] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824724] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.824751] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::CARTESIAN_SINGULARITY_WRIST;\n'}
[0.824777] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824804] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.824832] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1;\n'}
[0.824859] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824885] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.824913] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2;\n'}
[0.824939] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.824964] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.824989] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3;\n'}
[0.825015] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825041] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.825066] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4;\n'}
[0.825092] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825117] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.825143] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5;\n'}
[0.825169] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825194] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.825220] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6;\n'}
[0.825245] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825270] (igus_rebel) StdoutLine: {'line': b'5: -            case (int)Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.825296] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::MOTION_NOT_ALLOWED;\n'}
[0.825325] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825350] (igus_rebel) StdoutLine: {'line': b'5: -            default:\n'}
[0.825376] (igus_rebel) StdoutLine: {'line': b'5: -                return Kinstate::UNKNOWN;\n'}
[0.825401] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.825427] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.825453] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825478] (igus_rebel) StdoutLine: {'line': b'5: -        Message::Message(const std::string &messageString) : CriMessage(MessageType::MESSAGE)\n'}
[0.825503] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.825529] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type messageStart =\n'}
[0.825554] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_MESSAGE) + CriKeywords::TYPE_MESSAGE.size() + 1;\n'}
[0.825580] (igus_rebel) StdoutLine: {'line': b'5: -            message = messageString.substr(messageStart);\n'}
[0.825605] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.825630] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825656] (igus_rebel) StdoutLine: {'line': b'5: -        Command::Command(const std::string &messageString) : CriMessage(MessageType::CMD)\n'}
[0.825690] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.825718] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandStart =\n'}
[0.825746] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_CMD) + CriKeywords::TYPE_CMD.size() + 1;\n'}
[0.825773] (igus_rebel) StdoutLine: {'line': b'5: -            command = messageString.substr(commandStart);\n'}
[0.825801] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.825827] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.825854] (igus_rebel) StdoutLine: {'line': b'5: -        Info::Info(const std::string &messageString) : CriMessage(MessageType::INFO)\n'}
[0.825880] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.825907] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type infoStart =\n'}
[0.825933] (igus_rebel) StdoutLine: {'line': b'5: -                messageString.find(CriKeywords::TYPE_INFO) + CriKeywords::TYPE_INFO.size() + 1;\n'}
[0.825959] (igus_rebel) StdoutLine: {'line': b'5: -            info = messageString.substr(infoStart);\n'}
[0.825985] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.826010] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.826036] (igus_rebel) StdoutLine: {'line': b'5: -        LogMsg::LogMsg(const std::string &messageString) : CriMessage(MessageType::LOGMSG)\n'}
[0.826062] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.826088] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type logLvlStart = messageString.find(CriKeywords::TYPE_LOGMSG) + CriKeywords::TYPE_LOGMSG.size() + 1;\n'}
[0.826114] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type timestampStart = messageString.find(" ", logLvlStart) + 1;\n'}
[0.826140] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type msgStart = messageString.find(" ", timestampStart) + 1;\n'}
[0.826167] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.826193] (igus_rebel) StdoutLine: {'line': b'5: -            logLevel = GetLogLevel(messageString.substr(logLvlStart, (timestampStart - logLvlStart - 1)));\n'}
[0.826220] (igus_rebel) StdoutLine: {'line': b'5: -            timestamp = std::stol(messageString.substr(timestampStart, (msgStart - timestampStart - 1)));\n'}
[0.826247] (igus_rebel) StdoutLine: {'line': b'5: -            logMsg = messageString.substr(msgStart);\n'}
[0.826272] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.826298] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.826325] (igus_rebel) StdoutLine: {'line': b'5: -        LogLevel LogMsg::GetLogLevel(const std::string &logLvlString)\n'}
[0.826351] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.826378] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_DEBUG)\n'}
[0.826404] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.826430] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::DEBUG;\n'}
[0.826458] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.826487] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.826515] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_APP_INFO)\n'}
[0.826543] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.826569] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::APP_INFO;\n'}
[0.826596] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.826622] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.826648] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_APP_ERROR)\n'}
[0.826680] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.826708] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::APP_ERROR;\n'}
[0.826735] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.826760] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.826786] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_INFO)\n'}
[0.826813] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.826839] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::INFO;\n'}
[0.826868] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.826894] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.826919] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_WARN)\n'}
[0.826945] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.826971] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::WARN;\n'}
[0.826996] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.827022] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.827047] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_ERROR)\n'}
[0.827072] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.827098] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::ERROR;\n'}
[0.827124] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.827150] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.827178] (igus_rebel) StdoutLine: {'line': b'5: -            if (logLvlString == CriKeywords::LOG_LEVEL_FATAL)\n'}
[0.827204] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.827231] (igus_rebel) StdoutLine: {'line': b'5: -                return LogLevel::FATAL;\n'}
[0.827258] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.827286] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.827311] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown log level during parsing: %s", logLvlString.c_str());\n'}
[0.827339] (igus_rebel) StdoutLine: {'line': b'5: -            return LogLevel::UNKNOWN;\n'}
[0.827369] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.827397] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.827426] (igus_rebel) StdoutLine: {'line': b'5: -        Variables::Variables(const std::string &messageString) : CriMessage(MessageType::VARIABLES),\n'}
[0.827457] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 numberVariables(),\n'}
[0.827486] (igus_rebel) StdoutLine: {'line': b'5: -                                                                 positionVariables()\n'}
[0.827515] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.827544] (igus_rebel) StdoutLine: {'line': b'5: -            std::regex variables_regex("\\\\S+");\n'}
[0.827573] (igus_rebel) StdoutLine: {'line': b'5: -            auto variables_begin = std::sregex_iterator(messageString.begin(), messageString.end(), variables_regex);\n'}
[0.827603] (igus_rebel) StdoutLine: {'line': b'5: -            auto variables_end = std::sregex_iterator();\n'}
[0.827633] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.827662] (igus_rebel) StdoutLine: {'line': b'5: -            std::sregex_iterator it = variables_begin;\n'}
[0.827696] (igus_rebel) StdoutLine: {'line': b'5: -            while (it != variables_end)\n'}
[0.827726] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.827755] (igus_rebel) StdoutLine: {'line': b'5: -                std::string matchStr = GetMatchString((*it));\n'}
[0.827785] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.827814] (igus_rebel) StdoutLine: {'line': b'5: -                if (matchStr.compare(CriKeywords::VARIABLES_NR_VARIABLE) == 0)\n'}
[0.827848] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.827877] (igus_rebel) StdoutLine: {'line': b'5: -                    NumberVariable nv;\n'}
[0.827905] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.827935] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.827964] (igus_rebel) StdoutLine: {'line': b'5: -                    nv.name = GetMatchString(*it);\n'}
[0.827992] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.828021] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.828049] (igus_rebel) StdoutLine: {'line': b'5: -                    nv.value = std::stod(GetMatchString(*it));\n'}
[0.828078] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.828107] (igus_rebel) StdoutLine: {'line': b'5: -                    numberVariables.push_back(nv);\n'}
[0.828138] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.828167] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.828197] (igus_rebel) StdoutLine: {'line': b'5: -                if (matchStr.compare(CriKeywords::VARIABLES_POS_VARIABLE) == 0)\n'}
[0.828226] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.828254] (igus_rebel) StdoutLine: {'line': b'5: -                    PositionVariable pv;\n'}
[0.828283] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.828311] (igus_rebel) StdoutLine: {'line': b'5: -                    it++;\n'}
[0.828339] (igus_rebel) StdoutLine: {'line': b'5: -                    pv.name = GetMatchString(*it);\n'}
[0.828369] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.828398] (igus_rebel) StdoutLine: {'line': b'5: -                    for (auto i = 0; i < 15; i++)\n'}
[0.828426] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.828454] (igus_rebel) StdoutLine: {'line': b'5: -                        it++;\n'}
[0.828482] (igus_rebel) StdoutLine: {'line': b'5: -                        pv.values[i] = std::stod(GetMatchString(*it));\n'}
[0.828515] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.828545] (igus_rebel) StdoutLine: {'line': b'5: -                    positionVariables.push_back(pv);\n'}
[0.828574] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.828604] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.828679] (igus_rebel) StdoutLine: {'line': b'5: -                it++;\n'}
[0.828710] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.828738] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.828765] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.828796] (igus_rebel) StdoutLine: {'line': b'5: -        std::string Variables::GetMatchString(const std::smatch &smatch)\n'}
[0.828825] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.828850] (igus_rebel) StdoutLine: {'line': b'5: -            std::string matchStr = smatch.str();\n'}
[0.828875] (igus_rebel) StdoutLine: {'line': b"5: -            if (matchStr.length() > 0 && matchStr.back() == ',')\n"}
[0.828901] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.828927] (igus_rebel) StdoutLine: {'line': b'5: -                matchStr.pop_back();\n'}
[0.828954] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.828982] (igus_rebel) StdoutLine: {'line': b'5: -            return matchStr;\n'}
[0.829008] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.829035] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.829060] (igus_rebel) StdoutLine: {'line': b'5: -        CmdError::CmdError(const std::string &messageString) : CriMessage(MessageType::CMDERROR)\n'}
[0.829087] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.829113] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandErrorStart = messageString.find(CriKeywords::TYPE_CMDERROR) + CriKeywords::TYPE_CMDERROR.size();\n'}
[0.829139] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type countStart = messageString.find(" ", commandErrorStart) + 1;\n'}
[0.829166] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type errorMsgStart = messageString.find(" ", countStart) + 1;\n'}
[0.829192] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.829218] (igus_rebel) StdoutLine: {'line': b'5: -            recjectedCmd = std::stoi(messageString.substr(countStart, errorMsgStart - countStart - 1));\n'}
[0.829244] (igus_rebel) StdoutLine: {'line': b'5: -            error = messageString.substr(errorMsgStart);\n'}
[0.829270] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.829295] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.829322] (igus_rebel) StdoutLine: {'line': b'5: -        CmdAck::CmdAck(const std::string &messageString) : CriMessage(MessageType::CMDACK)\n'}
[0.829349] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.829374] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type commandAckStart = messageString.find(CriKeywords::TYPE_CMDACK) + CriKeywords::TYPE_CMDACK.size();\n'}
[0.829401] (igus_rebel) StdoutLine: {'line': b'5: -            acceptedCmd = std::stoi(messageString.substr(commandAckStart));\n'}
[0.829429] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.829453] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.829479] (igus_rebel) StdoutLine: {'line': b'5: -        Cyclestat::Cyclestat(const std::string &messageString) : CriMessage(MessageType::CYCLESTAT)\n'}
[0.829504] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.829529] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type cyclestatStart = messageString.find(CriKeywords::TYPE_CYCLESTAT) + CriKeywords::TYPE_CYCLESTAT.size();\n'}
[0.829555] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type cycletimeStart = messageString.find(" ", cyclestatStart) + 1;\n'}
[0.829581] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type workloadStart = messageString.find(" ", cycletimeStart) + 1;\n'}
[0.829606] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.829632] (igus_rebel) StdoutLine: {'line': b'5: -            cycletime = std::stoi(messageString.substr(cycletimeStart, workloadStart - cycletimeStart));\n'}
[0.829662] (igus_rebel) StdoutLine: {'line': b'5: -            workload = std::stoi(messageString.substr(workloadStart));\n'}
[0.829693] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.829719] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.829745] (igus_rebel) StdoutLine: {'line': b'5: -        ConfigType Config::GetConfigType(const std::string &msg)\n'}
[0.829772] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.829798] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeStart = msg.find(" ") + 1;\n'}
[0.829824] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.829851] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.829877] (igus_rebel) StdoutLine: {'line': b'5: -            std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.829904] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.829931] (igus_rebel) StdoutLine: {'line': b'5: -            if (typeString != CriKeywords::TYPE_CONFIG)\n'}
[0.829957] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.829983] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Got message to parse for config data that was not a config message.");\n'}
[0.830010] (igus_rebel) StdoutLine: {'line': b'5: -                return ConfigType::UNKNOWN;\n'}
[0.830036] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.830063] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.830089] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type configTypeStart = typeEnd + 1;\n'}
[0.830116] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type configTypeEnd = msg.find(" ", configTypeStart + 1);\n'}
[0.830144] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.830174] (igus_rebel) StdoutLine: {'line': b'5: -            std::string configTypeString = msg.substr(configTypeStart, configTypeEnd - configTypeStart);\n'}
[0.830201] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.830229] (igus_rebel) StdoutLine: {'line': b'5: -            if (configTypeString == CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER)\n'}
[0.830256] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.830284] (igus_rebel) StdoutLine: {'line': b'5: -                return ConfigType::KINEMATICLIMITS;\n'}
[0.830312] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.830339] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.830366] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config type: \\"%s\\"", configTypeString.c_str());\n'}
[0.830395] (igus_rebel) StdoutLine: {'line': b'5: -            return ConfigType::UNKNOWN;\n'}
[0.830422] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.830448] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.830477] (igus_rebel) StdoutLine: {'line': b'5: -        KinematicLimits::KinematicLimits(const std::string &messageString) : Config(ConfigType::KINEMATICLIMITS)\n'}
[0.830505] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.830531] (igus_rebel) StdoutLine: {'line': b'5: -            std::string::size_type answerStart = messageString.find(CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER);\n'}
[0.830558] (igus_rebel) StdoutLine: {'line': b'5: -            answerStart += CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER.size() + 1;\n'}
[0.830586] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.830613] (igus_rebel) StdoutLine: {'line': b'5: -            std::vector<float> minMax;\n'}
[0.830640] (igus_rebel) StdoutLine: {'line': b'5: -            FillVector(minMax, messageString.substr(answerStart));\n'}
[0.830670] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.830701] (igus_rebel) StdoutLine: {'line': b'5: -            if (minMax.size() % 2 != 0)\n'}
[0.830727] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.830753] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing config message of type %d", (int)configType);\n'}
[0.830781] (igus_rebel) StdoutLine: {'line': b'5: -                return;\n'}
[0.830809] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.830835] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.830862] (igus_rebel) StdoutLine: {'line': b'5: -            for (size_t i = 0; i < minMax.size(); i += 2)\n'}
[0.830888] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.830914] (igus_rebel) StdoutLine: {'line': b'5: -                minMaxPairs.push_back(std::pair<float, float>(minMax.at(i), minMax.at(i + 1)));\n'}
[0.830940] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.830966] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.830992] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.831018] (igus_rebel) StdoutLine: {'line': b'5: -        std::string KinematicLimits::ToString()\n'}
[0.831044] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.831070] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.831096] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.831123] (igus_rebel) StdoutLine: {'line': b'5: -            for (size_t i = 0; i < minMaxPairs.size() - 1; i++)\n'}
[0.831150] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.831176] (igus_rebel) StdoutLine: {'line': b'5: -                msg << "(" << minMaxPairs.at(i).first << ", " << minMaxPairs.at(i).second << ") ";\n'}
[0.831202] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.831226] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.831252] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "(" << minMaxPairs.at(minMaxPairs.size() - 1).first << ", " << minMaxPairs.at(minMaxPairs.size() - 1).second << ")";\n'}
[0.831278] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.831303] (igus_rebel) StdoutLine: {'line': b'5: -            return msg.str();\n'}
[0.831328] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.831353] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.831379] (igus_rebel) StdoutLine: {'line': b'5: -        void KinematicLimits::Print()\n'}
[0.831405] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.831430] (igus_rebel) StdoutLine: {'line': b'5: -            std::cout << "Kinematic limits: " << ToString() << std::endl;\n'}
[0.831456] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.831482] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.831508] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.831535] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831562] (igus_rebel) StdoutLine: {'line': b'5: +Mode Status::GetMode(const std::string & modeString)\n'}
[0.831591] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.831618] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_JOINT) {\n'}
[0.831645] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::JOINT;\n'}
[0.831675] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.831709] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831736] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_CARTBASE) {\n'}
[0.831763] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::CARTBASE;\n'}
[0.831790] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.831818] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831850] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_CARTTOOL) {\n'}
[0.831878] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::CARTTOOL;\n'}
[0.831906] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.831934] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.831963] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_PLATFORM) {\n'}
[0.831992] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::PLATFORM;\n'}
[0.832020] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.832049] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832077] (igus_rebel) StdoutLine: {'line': b'5: +  if (modeString == CriKeywords::MODE_FSM) {\n'}
[0.832106] (igus_rebel) StdoutLine: {'line': b'5: +    return Mode::FSM;\n'}
[0.832134] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.832163] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832193] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown robot mode during parsing: %s",\n'}
[0.832222] (igus_rebel) StdoutLine: {'line': b'5: +        modeString.c_str());\n'}
[0.832251] (igus_rebel) StdoutLine: {'line': b'5: +  return Mode::UNKNOWN;\n'}
[0.832281] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.832310] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832338] (igus_rebel) StdoutLine: {'line': b'5: +Kinstate Status::GetKinstate(const std::string & kinstateString)\n'}
[0.832369] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.832397] (igus_rebel) StdoutLine: {'line': b'5: +  int kinstateInt = std::stoi(kinstateString);\n'}
[0.832427] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832456] (igus_rebel) StdoutLine: {'line': b'5: +  switch (kinstateInt) {\n'}
[0.832484] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::NO_ERROR:\n'}
[0.832513] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::NO_ERROR;\n'}
[0.832541] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832570] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::JOINT_LIMIT_MIN:\n'}
[0.832599] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::JOINT_LIMIT_MIN;\n'}
[0.832627] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832654] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::JOINT_LIMIT_MAX:\n'}
[0.832687] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::JOINT_LIMIT_MAX;\n'}
[0.832716] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832744] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.832772] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_CENTER;\n'}
[0.832799] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832827] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.832855] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_REACH;\n'}
[0.832882] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832909] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.832936] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::CARTESIAN_SINGULARITY_WRIST;\n'}
[0.832963] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.832990] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.833017] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1;\n'}
[0.833044] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833071] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.833098] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2;\n'}
[0.833126] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833153] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.833181] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3;\n'}
[0.833208] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833234] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.833260] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4;\n'}
[0.833285] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833311] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.833338] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5;\n'}
[0.833364] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833389] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.833416] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6;\n'}
[0.833442] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833468] (igus_rebel) StdoutLine: {'line': b'5: +    case (int)Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.833494] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::MOTION_NOT_ALLOWED;\n'}
[0.833521] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833547] (igus_rebel) StdoutLine: {'line': b'5: +    default:\n'}
[0.833572] (igus_rebel) StdoutLine: {'line': b'5: +      return Kinstate::UNKNOWN;\n'}
[0.833599] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.833627] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.833652] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833683] (igus_rebel) StdoutLine: {'line': b'5: +Message::Message(const std::string & messageString)\n'}
[0.833712] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::MESSAGE)\n'}
[0.833739] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.833764] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type messageStart =\n'}
[0.833791] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_MESSAGE) + CriKeywords::TYPE_MESSAGE.size() + 1;\n'}
[0.833818] (igus_rebel) StdoutLine: {'line': b'5: +  message = messageString.substr(messageStart);\n'}
[0.833846] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.833874] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.833901] (igus_rebel) StdoutLine: {'line': b'5: +Command::Command(const std::string & messageString)\n'}
[0.833929] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMD)\n'}
[0.833957] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.833989] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandStart =\n'}
[0.834017] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_CMD) + CriKeywords::TYPE_CMD.size() + 1;\n'}
[0.834046] (igus_rebel) StdoutLine: {'line': b'5: +  command = messageString.substr(commandStart);\n'}
[0.834077] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.834110] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834141] (igus_rebel) StdoutLine: {'line': b'5: +Info::Info(const std::string & messageString)\n'}
[0.834170] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::INFO)\n'}
[0.834198] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.834226] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type infoStart =\n'}
[0.834255] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::TYPE_INFO) + CriKeywords::TYPE_INFO.size() + 1;\n'}
[0.834284] (igus_rebel) StdoutLine: {'line': b'5: +  info = messageString.substr(infoStart);\n'}
[0.834312] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.834339] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834367] (igus_rebel) StdoutLine: {'line': b'5: +LogMsg::LogMsg(const std::string & messageString)\n'}
[0.834394] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::LOGMSG)\n'}
[0.834423] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.834452] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type logLvlStart = messageString.find(CriKeywords::TYPE_LOGMSG) +\n'}
[0.834480] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_LOGMSG.size() + 1;\n'}
[0.834507] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type timestampStart = messageString.find(" ", logLvlStart) + 1;\n'}
[0.834534] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type msgStart = messageString.find(" ", timestampStart) + 1;\n'}
[0.834563] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834591] (igus_rebel) StdoutLine: {'line': b'5: +  logLevel = GetLogLevel(messageString.substr(logLvlStart, (timestampStart - logLvlStart - 1)));\n'}
[0.834619] (igus_rebel) StdoutLine: {'line': b'5: +  timestamp = std::stol(messageString.substr(timestampStart, (msgStart - timestampStart - 1)));\n'}
[0.834645] (igus_rebel) StdoutLine: {'line': b'5: +  logMsg = messageString.substr(msgStart);\n'}
[0.834675] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.834706] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834733] (igus_rebel) StdoutLine: {'line': b'5: +LogLevel LogMsg::GetLogLevel(const std::string & logLvlString)\n'}
[0.834761] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.834789] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_DEBUG) {\n'}
[0.834817] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::DEBUG;\n'}
[0.834845] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.834872] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.834899] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_APP_INFO) {\n'}
[0.834927] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::APP_INFO;\n'}
[0.834955] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.834982] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835008] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_APP_ERROR) {\n'}
[0.835035] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::APP_ERROR;\n'}
[0.835063] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.835090] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835119] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_INFO) {\n'}
[0.835147] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::INFO;\n'}
[0.835176] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.835204] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835234] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_WARN) {\n'}
[0.835262] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::WARN;\n'}
[0.835290] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.835316] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835344] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_ERROR) {\n'}
[0.835372] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::ERROR;\n'}
[0.835399] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.835427] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835455] (igus_rebel) StdoutLine: {'line': b'5: +  if (logLvlString == CriKeywords::LOG_LEVEL_FATAL) {\n'}
[0.835482] (igus_rebel) StdoutLine: {'line': b'5: +    return LogLevel::FATAL;\n'}
[0.835509] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.835534] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835561] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown log level during parsing: %s",\n'}
[0.835588] (igus_rebel) StdoutLine: {'line': b'5: +        logLvlString.c_str());\n'}
[0.835614] (igus_rebel) StdoutLine: {'line': b'5: +  return LogLevel::UNKNOWN;\n'}
[0.835641] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.835668] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835698] (igus_rebel) StdoutLine: {'line': b'5: +Variables::Variables(const std::string & messageString)\n'}
[0.835726] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::VARIABLES),\n'}
[0.835752] (igus_rebel) StdoutLine: {'line': b'5: +  numberVariables(),\n'}
[0.835783] (igus_rebel) StdoutLine: {'line': b'5: +  positionVariables()\n'}
[0.835811] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.835839] (igus_rebel) StdoutLine: {'line': b'5: +  std::regex variables_regex("\\\\S+");\n'}
[0.835867] (igus_rebel) StdoutLine: {'line': b'5: +  auto variables_begin = std::sregex_iterator(messageString.begin(), messageString.end(),\n'}
[0.835896] (igus_rebel) StdoutLine: {'line': b'5: +        variables_regex);\n'}
[0.835923] (igus_rebel) StdoutLine: {'line': b'5: +  auto variables_end = std::sregex_iterator();\n'}
[0.835950] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.835978] (igus_rebel) StdoutLine: {'line': b'5: +  std::sregex_iterator it = variables_begin;\n'}
[0.836006] (igus_rebel) StdoutLine: {'line': b'5: +  while (it != variables_end) {\n'}
[0.836033] (igus_rebel) StdoutLine: {'line': b'5: +    std::string matchStr = GetMatchString((*it));\n'}
[0.836060] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836086] (igus_rebel) StdoutLine: {'line': b'5: +    if (matchStr.compare(CriKeywords::VARIABLES_NR_VARIABLE) == 0) {\n'}
[0.836112] (igus_rebel) StdoutLine: {'line': b'5: +      NumberVariable nv;\n'}
[0.836140] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836168] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.836196] (igus_rebel) StdoutLine: {'line': b'5: +      nv.name = GetMatchString(*it);\n'}
[0.836225] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836251] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.836278] (igus_rebel) StdoutLine: {'line': b'5: +      nv.value = std::stod(GetMatchString(*it));\n'}
[0.836305] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836331] (igus_rebel) StdoutLine: {'line': b'5: +      numberVariables.push_back(nv);\n'}
[0.836359] (igus_rebel) StdoutLine: {'line': b'5: @@ -694 +553,127 @@\n'}
[0.836385] (igus_rebel) StdoutLine: {'line': b'5: -}\n'}
[0.836412] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836439] (igus_rebel) StdoutLine: {'line': b'5: +    if (matchStr.compare(CriKeywords::VARIABLES_POS_VARIABLE) == 0) {\n'}
[0.836466] (igus_rebel) StdoutLine: {'line': b'5: +      PositionVariable pv;\n'}
[0.836492] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836520] (igus_rebel) StdoutLine: {'line': b'5: +      it++;\n'}
[0.836548] (igus_rebel) StdoutLine: {'line': b'5: +      pv.name = GetMatchString(*it);\n'}
[0.836575] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836601] (igus_rebel) StdoutLine: {'line': b'5: +      for (auto i = 0; i < 15; i++) {\n'}
[0.836626] (igus_rebel) StdoutLine: {'line': b'5: +        it++;\n'}
[0.836653] (igus_rebel) StdoutLine: {'line': b'5: +        pv.values[i] = std::stod(GetMatchString(*it));\n'}
[0.836683] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.836710] (igus_rebel) StdoutLine: {'line': b'5: +      positionVariables.push_back(pv);\n'}
[0.836737] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.836764] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836790] (igus_rebel) StdoutLine: {'line': b'5: +    it++;\n'}
[0.836817] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.836843] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.836869] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.836896] (igus_rebel) StdoutLine: {'line': b'5: +std::string Variables::GetMatchString(const std::smatch & smatch)\n'}
[0.836923] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.836949] (igus_rebel) StdoutLine: {'line': b'5: +  std::string matchStr = smatch.str();\n'}
[0.836975] (igus_rebel) StdoutLine: {'line': b"5: +  if (matchStr.length() > 0 && matchStr.back() == ',') {\n"}
[0.837002] (igus_rebel) StdoutLine: {'line': b'5: +    matchStr.pop_back();\n'}
[0.837028] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.837054] (igus_rebel) StdoutLine: {'line': b'5: +  return matchStr;\n'}
[0.837080] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.837107] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837133] (igus_rebel) StdoutLine: {'line': b'5: +CmdError::CmdError(const std::string & messageString)\n'}
[0.837159] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMDERROR)\n'}
[0.837187] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.837213] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandErrorStart = messageString.find(CriKeywords::TYPE_CMDERROR) +\n'}
[0.837241] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CMDERROR.size();\n'}
[0.837267] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type countStart = messageString.find(" ", commandErrorStart) + 1;\n'}
[0.837293] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type errorMsgStart = messageString.find(" ", countStart) + 1;\n'}
[0.837320] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837347] (igus_rebel) StdoutLine: {'line': b'5: +  recjectedCmd = std::stoi(messageString.substr(countStart, errorMsgStart - countStart - 1));\n'}
[0.837375] (igus_rebel) StdoutLine: {'line': b'5: +  error = messageString.substr(errorMsgStart);\n'}
[0.837405] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.837432] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837459] (igus_rebel) StdoutLine: {'line': b'5: +CmdAck::CmdAck(const std::string & messageString)\n'}
[0.837486] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CMDACK)\n'}
[0.837514] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.837540] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type commandAckStart = messageString.find(CriKeywords::TYPE_CMDACK) +\n'}
[0.837568] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CMDACK.size();\n'}
[0.837594] (igus_rebel) StdoutLine: {'line': b'5: +  acceptedCmd = std::stoi(messageString.substr(commandAckStart));\n'}
[0.837623] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.837651] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837682] (igus_rebel) StdoutLine: {'line': b'5: +Cyclestat::Cyclestat(const std::string & messageString)\n'}
[0.837711] (igus_rebel) StdoutLine: {'line': b'5: +: CriMessage(MessageType::CYCLESTAT)\n'}
[0.837738] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.837764] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type cyclestatStart = messageString.find(CriKeywords::TYPE_CYCLESTAT) +\n'}
[0.837791] (igus_rebel) StdoutLine: {'line': b'5: +    CriKeywords::TYPE_CYCLESTAT.size();\n'}
[0.837818] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type cycletimeStart = messageString.find(" ", cyclestatStart) + 1;\n'}
[0.837846] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type workloadStart = messageString.find(" ", cycletimeStart) + 1;\n'}
[0.837877] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.837905] (igus_rebel) StdoutLine: {'line': b'5: +  cycletime = std::stoi(messageString.substr(cycletimeStart, workloadStart - cycletimeStart));\n'}
[0.837935] (igus_rebel) StdoutLine: {'line': b'5: +  workload = std::stoi(messageString.substr(workloadStart));\n'}
[0.837962] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.837989] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838017] (igus_rebel) StdoutLine: {'line': b'5: +ConfigType Config::GetConfigType(const std::string & msg)\n'}
[0.838045] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.838076] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeStart = msg.find(" ") + 1;\n'}
[0.838110] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type typeEnd = msg.find(" ", typeStart);\n'}
[0.838139] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838166] (igus_rebel) StdoutLine: {'line': b'5: +  std::string typeString = msg.substr(typeStart, typeEnd - typeStart);\n'}
[0.838196] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838222] (igus_rebel) StdoutLine: {'line': b'5: +  if (typeString != CriKeywords::TYPE_CONFIG) {\n'}
[0.838250] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.838277] (igus_rebel) StdoutLine: {'line': b'5: +          "Got message to parse for config data that was not a config message.");\n'}
[0.838305] (igus_rebel) StdoutLine: {'line': b'5: +    return ConfigType::UNKNOWN;\n'}
[0.838333] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.838363] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838391] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type configTypeStart = typeEnd + 1;\n'}
[0.838421] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type configTypeEnd = msg.find(" ", configTypeStart + 1);\n'}
[0.838449] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838476] (igus_rebel) StdoutLine: {'line': b'5: +  std::string configTypeString = msg.substr(configTypeStart, configTypeEnd - configTypeStart);\n'}
[0.838504] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838530] (igus_rebel) StdoutLine: {'line': b'5: +  if (configTypeString == CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER) {\n'}
[0.838558] (igus_rebel) StdoutLine: {'line': b'5: +    return ConfigType::KINEMATICLIMITS;\n'}
[0.838586] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.838612] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838639] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config type: \\"%s\\"",\n'}
[0.838667] (igus_rebel) StdoutLine: {'line': b'5: +        configTypeString.c_str());\n'}
[0.838699] (igus_rebel) StdoutLine: {'line': b'5: +  return ConfigType::UNKNOWN;\n'}
[0.838727] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.838754] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838781] (igus_rebel) StdoutLine: {'line': b'5: +KinematicLimits::KinematicLimits(const std::string & messageString)\n'}
[0.838808] (igus_rebel) StdoutLine: {'line': b'5: +: Config(ConfigType::KINEMATICLIMITS)\n'}
[0.838835] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.838862] (igus_rebel) StdoutLine: {'line': b'5: +  std::string::size_type answerStart =\n'}
[0.838890] (igus_rebel) StdoutLine: {'line': b'5: +    messageString.find(CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER);\n'}
[0.838917] (igus_rebel) StdoutLine: {'line': b'5: +  answerStart += CriKeywords::CONFIG_GETKINEMATICLIMITS_ANSWER.size() + 1;\n'}
[0.838943] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.838970] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<float> minMax;\n'}
[0.838996] (igus_rebel) StdoutLine: {'line': b'5: +  FillVector(minMax, messageString.substr(answerStart));\n'}
[0.839024] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839051] (igus_rebel) StdoutLine: {'line': b'5: +  if (minMax.size() % 2 != 0) {\n'}
[0.839077] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error parsing config message of type %d",\n'}
[0.839105] (igus_rebel) StdoutLine: {'line': b'5: +      (int)configType);\n'}
[0.839132] (igus_rebel) StdoutLine: {'line': b'5: +    return;\n'}
[0.839158] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.839185] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839212] (igus_rebel) StdoutLine: {'line': b'5: +  for (size_t i = 0; i < minMax.size(); i += 2) {\n'}
[0.839238] (igus_rebel) StdoutLine: {'line': b'5: +    minMaxPairs.push_back(std::pair<float, float>(minMax.at(i), minMax.at(i + 1)));\n'}
[0.839265] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.839291] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.839317] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839343] (igus_rebel) StdoutLine: {'line': b'5: +std::string KinematicLimits::ToString()\n'}
[0.839370] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.839394] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.839420] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839445] (igus_rebel) StdoutLine: {'line': b'5: +  for (size_t i = 0; i < minMaxPairs.size() - 1; i++) {\n'}
[0.839471] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "(" << minMaxPairs.at(i).first << ", " << minMaxPairs.at(i).second << ") ";\n'}
[0.839498] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.839524] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839550] (igus_rebel) StdoutLine: {'line': b'5: +  msg << "(" << minMaxPairs.at(minMaxPairs.size() - 1).first << ", " <<\n'}
[0.839576] (igus_rebel) StdoutLine: {'line': b'5: +    minMaxPairs.at(minMaxPairs.size() - 1).second << ")";\n'}
[0.839605] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839631] (igus_rebel) StdoutLine: {'line': b'5: +  return msg.str();\n'}
[0.839657] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.839690] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.839718] (igus_rebel) StdoutLine: {'line': b'5: +void KinematicLimits::Print()\n'}
[0.839745] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.839772] (igus_rebel) StdoutLine: {'line': b'5: +  std::cout << "Kinematic limits: " << ToString() << std::endl;\n'}
[0.839798] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.839825] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.839851] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.839877] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.839904] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/Rebel.cpp':\n"}
[0.839930] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.839961] (igus_rebel) StdoutLine: {'line': b'5: --- src/Rebel.cpp\n'}
[0.839988] (igus_rebel) StdoutLine: {'line': b'5: +++ src/Rebel.cpp.uncrustify\n'}
[0.840016] (igus_rebel) StdoutLine: {'line': b'5: @@ -15,8 +15,8 @@\n'}
[0.840042] (igus_rebel) StdoutLine: {'line': b'5: -    Rebel::Rebel()\n'}
[0.840068] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.840096] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.840125] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.840153] (igus_rebel) StdoutLine: {'line': b'5: -    Rebel::~Rebel()\n'}
[0.840179] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.840205] (igus_rebel) StdoutLine: {'line': b'5: -        Stop();\n'}
[0.840231] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.840256] (igus_rebel) StdoutLine: {'line': b'5: +Rebel::Rebel()\n'}
[0.840282] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.840308] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.840343] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.840372] (igus_rebel) StdoutLine: {'line': b'5: +Rebel::~Rebel()\n'}
[0.840401] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.840431] (igus_rebel) StdoutLine: {'line': b'5: +  Stop();\n'}
[0.840461] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.840489] (igus_rebel) StdoutLine: {'line': b'5: @@ -27 +27,17 @@\n'}
[0.840519] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::AliveThreadFunction()\n'}
[0.840554] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::AliveThreadFunction()\n'}
[0.840581] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.840609] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to send ALIVEJOG");\n'}
[0.840636] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.840665] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueAlive) {\n'}
[0.840699] (igus_rebel) StdoutLine: {'line': b'5: +    std::ostringstream msg;\n'}
[0.840728] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::showpoint;\n'}
[0.840756] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::fixed;\n'}
[0.840787] (igus_rebel) StdoutLine: {'line': b'5: +    msg << std::setprecision(8);\n'}
[0.840815] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "CRISTART " << Ccnt() << " ";\n'}
[0.840841] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "ALIVEJOG ";\n'}
[0.840867] (igus_rebel) StdoutLine: {'line': b'5: +    msg << j1 << " " << j2 << " " << j3 << " ";\n'}
[0.840893] (igus_rebel) StdoutLine: {'line': b'5: +    msg << j4 << " " << j5 << " " << j6 << " ";\n'}
[0.840923] (igus_rebel) StdoutLine: {'line': b'5: +    msg << 0.0f << " " << 0.0f << " " << 0.0f << " ";\n'}
[0.840949] (igus_rebel) StdoutLine: {'line': b'5: +    msg << "CRIEND" << std::endl;\n'}
[0.840976] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841001] (igus_rebel) StdoutLine: {'line': b'5: +            // std::cout << msg.str();\n'}
[0.841028] (igus_rebel) StdoutLine: {'line': b'5: @@ -29,3 +45,272 @@\n'}
[0.841054] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to send ALIVEJOG");\n'}
[0.841079] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.841104] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueAlive)\n'}
[0.841130] (igus_rebel) StdoutLine: {'line': b'5: +      std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.841156] (igus_rebel) StdoutLine: {'line': b'5: +      rebelSocket->SendMessage(msg.str());\n'}
[0.841183] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.841209] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841235] (igus_rebel) StdoutLine: {'line': b'5: +    std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs));\n'}
[0.841261] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.841288] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841314] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to send ALIVEJOG");\n'}
[0.841341] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.841367] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841394] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::MessageThreadFunction()\n'}
[0.841422] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.841451] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to process robot messages");\n'}
[0.841480] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841509] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueMessage) {\n'}
[0.841538] (igus_rebel) StdoutLine: {'line': b'5: +    if (rebelSocket->HasMessage()) {\n'}
[0.841567] (igus_rebel) StdoutLine: {'line': b'5: +      std::string msg = rebelSocket->GetMessage();\n'}
[0.841595] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841623] (igus_rebel) StdoutLine: {'line': b'5: +      CriMessages::MessageType type = CriMessages::CriMessage::GetMessageType(msg);\n'}
[0.841650] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841679] (igus_rebel) StdoutLine: {'line': b'5: +      switch (type) {\n'}
[0.841707] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::STATUS:\n'}
[0.841734] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.841761] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Status status = CriMessages::Status(msg);\n'}
[0.841788] (igus_rebel) StdoutLine: {'line': b'5: +                    // status.Print();\n'}
[0.841816] (igus_rebel) StdoutLine: {'line': b'5: +            status.Log();\n'}
[0.841845] (igus_rebel) StdoutLine: {'line': b'5: +            currentStatus = status;\n'}
[0.841875] (igus_rebel) StdoutLine: {'line': b'5: +            ProcessStatus(currentStatus);\n'}
[0.841904] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.841932] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.841961] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.841990] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::RUNSTATE:\n'}
[0.842019] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842048] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842077] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842112] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842141] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::MESSAGE:\n'}
[0.842172] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842204] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Message message = CriMessages::Message(msg);\n'}
[0.842234] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel MESSAGE: %s",\n'}
[0.842264] (igus_rebel) StdoutLine: {'line': b'5: +              message.message.c_str());\n'}
[0.842292] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842320] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842349] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842377] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMD:\n'}
[0.842405] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842432] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Command command = CriMessages::Command(msg);\n'}
[0.842459] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842487] (igus_rebel) StdoutLine: {'line': b'5: +                    // Not sure if the ROS node should display these?\n'}
[0.842516] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "CMD: %s", command.command.c_str());\n'}
[0.842545] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.842573] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.842601] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842629] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CONFIG:\n'}
[0.842656] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.842687] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::ConfigType configType = CriMessages::Config::GetConfigType(msg);\n'}
[0.842717] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.842745] (igus_rebel) StdoutLine: {'line': b'5: +            switch (configType) {\n'}
[0.842774] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::ConfigType::KINEMATICLIMITS:\n'}
[0.842802] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.842829] (igus_rebel) StdoutLine: {'line': b'5: +                  CriMessages::KinematicLimits kinematicLimits = CriMessages::KinematicLimits(msg);\n'}
[0.842858] (igus_rebel) StdoutLine: {'line': b'5: +                  kinematicLimits.Print();\n'}
[0.842886] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.842912] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.842940] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::ConfigType::UNKNOWN:\n'}
[0.842967] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.842994] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config message: %s",\n'}
[0.843021] (igus_rebel) StdoutLine: {'line': b'5: +                  msg.c_str());\n'}
[0.843049] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.843076] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.843103] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843131] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.843158] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843185] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.843212] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.843238] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843265] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::INFO:\n'}
[0.843292] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.843320] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Info info = CriMessages::Info(msg);\n'}
[0.843347] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "INFO: %s", info.info.c_str());\n'}
[0.843375] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.843402] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.843430] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843456] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::LOGMSG:\n'}
[0.843483] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.843511] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::LogMsg log = CriMessages::LogMsg(msg);\n'}
[0.843538] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843566] (igus_rebel) StdoutLine: {'line': b'5: +            switch (log.logLevel) {\n'}
[0.843593] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::DEBUG:\n'}
[0.843622] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.843649] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.843680] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.843708] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.843736] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.843766] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843794] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::APP_INFO:\n'}
[0.843821] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.843848] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_INFO): %s (%ld ms)",\n'}
[0.843876] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.843903] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.843930] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.843957] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.843985] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::APP_ERROR:\n'}
[0.844013] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.844040] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.844073] (igus_rebel) StdoutLine: {'line': b'5: +                  "REBEL LOG (APP_ERROR): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.844100] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.844126] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.844152] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844179] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::INFO:\n'}
[0.844206] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.844233] (igus_rebel) StdoutLine: {'line': b"5: +                        // The Rebel is pretty chatty with its INFO level log messages, so I've set them to output only to the ROS DEBUG level.\n"}
[0.844261] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.844290] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.844318] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.844346] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.844373] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844399] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::WARN:\n'}
[0.844426] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.844453] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.844480] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.844507] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.844533] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.844560] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844586] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::ERROR:\n'}
[0.844613] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.844640] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.844667] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.844700] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.844729] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.844757] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844783] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::FATAL:\n'}
[0.844810] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.844838] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_FATAL(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)",\n'}
[0.844865] (igus_rebel) StdoutLine: {'line': b'5: +                  log.logMsg.c_str(), log.timestamp);\n'}
[0.844890] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.844917] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.844944] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.844972] (igus_rebel) StdoutLine: {'line': b'5: +              case CriMessages::LogLevel::UNKNOWN:\n'}
[0.844999] (igus_rebel) StdoutLine: {'line': b'5: +                {\n'}
[0.845026] (igus_rebel) StdoutLine: {'line': b'5: +                  RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.845052] (igus_rebel) StdoutLine: {'line': b'5: +                  "REBEL LOG (UNKNOWN LOG LEVEL): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.845079] (igus_rebel) StdoutLine: {'line': b'5: +                  break;\n'}
[0.845105] (igus_rebel) StdoutLine: {'line': b'5: +                }\n'}
[0.845131] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.845157] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.845184] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.845210] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.845237] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.845262] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::VARIABLES:\n'}
[0.845290] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.845317] (igus_rebel) StdoutLine: {'line': b'5: +                    // CriMessages::Variables vars = CriMessages::Variables(msg);\n'}
[0.845343] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.845370] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.845396] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.845422] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMDERROR:\n'}
[0.845447] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.845473] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::CmdError error = CriMessages::CmdError(msg);\n'}
[0.845499] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.845525] (igus_rebel) StdoutLine: {'line': b'5: +            try {\n'}
[0.845551] (igus_rebel) StdoutLine: {'line': b'5: +              std::string command = unacknowledgedCommands.at(error.recjectedCmd);\n'}
[0.845580] (igus_rebel) StdoutLine: {'line': b'5: +              unacknowledgedCommands.erase(error.recjectedCmd);\n'}
[0.845609] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.845637] (igus_rebel) StdoutLine: {'line': b'5: +                "Rebel did not accept command: %s. Error message: %s", command.c_str(),\n'}
[0.845664] (igus_rebel) StdoutLine: {'line': b'5: +                error.error.c_str());\n'}
[0.845697] (igus_rebel) StdoutLine: {'line': b'5: +            } catch (const std::out_of_range & e) {\n'}
[0.845725] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.845751] (igus_rebel) StdoutLine: {'line': b'5: +                "Rebel did not accept unknown command. Error message: %s (%d)", error.error.c_str(),\n'}
[0.845778] (igus_rebel) StdoutLine: {'line': b'5: +                error.recjectedCmd);\n'}
[0.845804] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.845831] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.845859] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.845887] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.845914] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CMDACK:\n'}
[0.845940] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.845967] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::CmdAck ack = CriMessages::CmdAck(msg);\n'}
[0.845994] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.846020] (igus_rebel) StdoutLine: {'line': b'5: +            try {\n'}
[0.846046] (igus_rebel) StdoutLine: {'line': b'5: +              std::string command = unacknowledgedCommands.at(ack.acceptedCmd);\n'}
[0.846073] (igus_rebel) StdoutLine: {'line': b'5: +              unacknowledgedCommands.erase(ack.acceptedCmd);\n'}
[0.846101] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel accepted command: %s",\n'}
[0.846127] (igus_rebel) StdoutLine: {'line': b'5: +                command.c_str());\n'}
[0.846159] (igus_rebel) StdoutLine: {'line': b'5: +              break;\n'}
[0.846186] (igus_rebel) StdoutLine: {'line': b'5: +            } catch (const std::out_of_range & e) {\n'}
[0.846214] (igus_rebel) StdoutLine: {'line': b'5: +              RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Rebel accepted unknown command: %d",\n'}
[0.846241] (igus_rebel) StdoutLine: {'line': b'5: +                ack.acceptedCmd);\n'}
[0.846268] (igus_rebel) StdoutLine: {'line': b'5: +              break;\n'}
[0.846295] (igus_rebel) StdoutLine: {'line': b'5: +            }\n'}
[0.846321] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.846348] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.846374] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.846401] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::CYCLESTAT:\n'}
[0.846427] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.846454] (igus_rebel) StdoutLine: {'line': b'5: +            CriMessages::Cyclestat cyclestat = CriMessages::Cyclestat(msg);\n'}
[0.846482] (igus_rebel) StdoutLine: {'line': b'5: +                    // Will only output this once every 2 minutes, because this is sent every 0.5 seconds.\n'}
[0.846510] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *node_->get_clock(), 120,\n'}
[0.846536] (igus_rebel) StdoutLine: {'line': b'5: +              "Rebel cycle statistics -- Cycletime: %d -- Workload: %d%%", cyclestat.cycletime,\n'}
[0.846566] (igus_rebel) StdoutLine: {'line': b'5: +              cyclestat.workload);\n'}
[0.846593] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.846620] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.846647] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.846678] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::UNKNOWN:\n'}
[0.846708] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.846735] (igus_rebel) StdoutLine: {'line': b'5: +            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "UNKNOW MESSAGE: %s", msg.c_str());\n'}
[0.846768] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.846795] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.846822] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.846848] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::OPINFO:\n'}
[0.846874] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.846901] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.846927] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.846953] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.846979] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::GSIG:\n'}
[0.847010] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.847037] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.847063] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.847089] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::MessageType::GRIPPERSTATE:\n'}
[0.847117] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.847144] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.847170] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.847199] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.847227] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.847253] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.847279] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.847306] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to process robot messages");\n'}
[0.847333] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.847359] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.847385] (igus_rebel) StdoutLine: {'line': b'5: +int Rebel::Ccnt()\n'}
[0.847414] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.847440] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(cntLock);\n'}
[0.847469] (igus_rebel) StdoutLine: {'line': b'5: +  int current = current_ccnt;\n'}
[0.847496] (igus_rebel) StdoutLine: {'line': b'5: +  current_ccnt = (current_ccnt % 9999) + 1;\n'}
[0.847523] (igus_rebel) StdoutLine: {'line': b'5: +  return current;\n'}
[0.847550] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.847577] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.847604] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetDigitalOut(const int & output, const bool & is_on)\n'}
[0.847630] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.847657] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream cmd;\n'}
[0.847693] (igus_rebel) StdoutLine: {'line': b'5: +  cmd << CriKeywords::COMMAND_DOUT << " " << output << " " << (is_on ? "true" : "false");\n'}
[0.847721] (igus_rebel) StdoutLine: {'line': b'5: +  Command(cmd.str());\n'}
[0.847749] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.847775] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.847802] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Command(const std::string & command)\n'}
[0.847829] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.847856] (igus_rebel) StdoutLine: {'line': b'5: +  int commandCount = Ccnt();\n'}
[0.847883] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.847909] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::START << " " << commandCount << " ";\n'}
[0.847936] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::TYPE_CMD << " ";\n'}
[0.847963] (igus_rebel) StdoutLine: {'line': b'5: +  msg << command << " ";\n'}
[0.847988] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::END << std::endl;\n'}
[0.848015] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.848041] (igus_rebel) StdoutLine: {'line': b'5: +  unacknowledgedCommands[commandCount] = command;\n'}
[0.848067] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.848097] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->SendMessage(msg.str());\n'}
[0.848124] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.848150] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.848177] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetConfig(const std::string & config)\n'}
[0.848202] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.848229] (igus_rebel) StdoutLine: {'line': b'5: +  std::ostringstream msg;\n'}
[0.848255] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::START << " " << Ccnt() << " ";\n'}
[0.848281] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::TYPE_CONFIG << " ";\n'}
[0.848312] (igus_rebel) StdoutLine: {'line': b'5: +  msg << config << " ";\n'}
[0.848339] (igus_rebel) StdoutLine: {'line': b'5: +  msg << CriKeywords::END << std::endl;\n'}
[0.848365] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.848391] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->SendMessage(msg.str());\n'}
[0.848417] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.848443] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.848469] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetControlMode(const ControlMode & mode)\n'}
[0.848496] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.848523] (igus_rebel) StdoutLine: {'line': b'5: +  switch (mode) {\n'}
[0.848553] (igus_rebel) StdoutLine: {'line': b'5: +    case Rebel::ControlMode::POSITION:\n'}
[0.848579] (igus_rebel) StdoutLine: {'line': b'5: +      {\n'}
[0.848605] (igus_rebel) StdoutLine: {'line': b'5: @@ -33,21 +318,36 @@\n'}
[0.848631] (igus_rebel) StdoutLine: {'line': b'5: -            std::ostringstream msg;\n'}
[0.848657] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::showpoint;\n'}
[0.848689] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::fixed;\n'}
[0.848718] (igus_rebel) StdoutLine: {'line': b'5: -            msg << std::setprecision(8);\n'}
[0.848744] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "CRISTART " << Ccnt() << " ";\n'}
[0.848775] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "ALIVEJOG ";\n'}
[0.848801] (igus_rebel) StdoutLine: {'line': b'5: -            msg << j1 << " " << j2 << " " << j3 << " ";\n'}
[0.848830] (igus_rebel) StdoutLine: {'line': b'5: -            msg << j4 << " " << j5 << " " << j6 << " ";\n'}
[0.848856] (igus_rebel) StdoutLine: {'line': b'5: -            msg << 0.0f << " " << 0.0f << " " << 0.0f << " ";\n'}
[0.848885] (igus_rebel) StdoutLine: {'line': b'5: -            msg << "CRIEND" << std::endl;\n'}
[0.848911] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.848938] (igus_rebel) StdoutLine: {'line': b'5: -            // std::cout << msg.str();\n'}
[0.848968] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.848995] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.849022] (igus_rebel) StdoutLine: {'line': b'5: -                rebelSocket->SendMessage(msg.str());\n'}
[0.849049] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.849076] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849102] (igus_rebel) StdoutLine: {'line': b'5: -            std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs));\n'}
[0.849129] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.849154] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.849185] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to send ALIVEJOG");\n'}
[0.849212] (igus_rebel) StdoutLine: {'line': b'5: +          std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.849239] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849265] (igus_rebel) StdoutLine: {'line': b'5: +          j1 = currentStatus.posJointCurrent.at(0);\n'}
[0.849293] (igus_rebel) StdoutLine: {'line': b'5: +          j2 = currentStatus.posJointCurrent.at(1);\n'}
[0.849321] (igus_rebel) StdoutLine: {'line': b'5: +          j3 = currentStatus.posJointCurrent.at(2);\n'}
[0.849349] (igus_rebel) StdoutLine: {'line': b'5: +          j4 = currentStatus.posJointCurrent.at(3);\n'}
[0.849375] (igus_rebel) StdoutLine: {'line': b'5: +          j5 = currentStatus.posJointCurrent.at(4);\n'}
[0.849404] (igus_rebel) StdoutLine: {'line': b'5: +          j6 = currentStatus.posJointCurrent.at(5);\n'}
[0.849432] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849458] (igus_rebel) StdoutLine: {'line': b'5: +          Command(CriKeywords::COMMAND_MOTIONTYPECARTBASE);\n'}
[0.849486] (igus_rebel) StdoutLine: {'line': b'5: +          controlMode = mode;\n'}
[0.849511] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.849538] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by position control.");\n'}
[0.849565] (igus_rebel) StdoutLine: {'line': b'5: +        break;\n'}
[0.849591] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.849621] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849647] (igus_rebel) StdoutLine: {'line': b'5: +    case Rebel::ControlMode::VELOCITY:\n'}
[0.849676] (igus_rebel) StdoutLine: {'line': b'5: +      {\n'}
[0.849705] (igus_rebel) StdoutLine: {'line': b'5: +        Command(CriKeywords::COMMAND_MOTIONTYPEJOINT);\n'}
[0.849732] (igus_rebel) StdoutLine: {'line': b'5: +        controlMode = mode;\n'}
[0.849759] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by velocity control.");\n'}
[0.849785] (igus_rebel) StdoutLine: {'line': b'5: +        break;\n'}
[0.849812] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.849838] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.849863] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.849889] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.849915] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::ProcessStatus(const CriMessages::Status & status)\n'}
[0.849942] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.849968] (igus_rebel) StdoutLine: {'line': b'5: +  CriMessages::Kinstate currentKinstate = status.kinstate;\n'}
[0.849994] (igus_rebel) StdoutLine: {'line': b'5: +  std::array<int, 16> currentErrorJoints = status.errorJoints;\n'}
[0.850027] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.850054] (igus_rebel) StdoutLine: {'line': b'5: +  if (lastKinstate != currentKinstate) {\n'}
[0.850082] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.850109] (igus_rebel) StdoutLine: {'line': b'5: +    if (lastKinstate != CriMessages::Kinstate::NO_ERROR) {\n'}
[0.850134] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Kinematics error resolved [%s]",\n'}
[0.850161] (igus_rebel) StdoutLine: {'line': b'5: +          kinstateMessage.c_str());\n'}
[0.850188] (igus_rebel) StdoutLine: {'line': b'5: @@ -56,208 +356,90 @@\n'}
[0.850214] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::MessageThreadFunction()\n'}
[0.850239] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.850270] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Starting to process robot messages");\n'}
[0.850297] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850323] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueMessage)\n'}
[0.850350] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.850376] (igus_rebel) StdoutLine: {'line': b'5: -            if (rebelSocket->HasMessage())\n'}
[0.850403] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.850428] (igus_rebel) StdoutLine: {'line': b'5: -                std::string msg = rebelSocket->GetMessage();\n'}
[0.850455] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850485] (igus_rebel) StdoutLine: {'line': b'5: -                CriMessages::MessageType type = CriMessages::CriMessage::GetMessageType(msg);\n'}
[0.850513] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850540] (igus_rebel) StdoutLine: {'line': b'5: -                switch (type)\n'}
[0.850566] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.850592] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::STATUS:\n'}
[0.850618] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.850645] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Status status = CriMessages::Status(msg);\n'}
[0.850674] (igus_rebel) StdoutLine: {'line': b'5: -                    // status.Print();\n'}
[0.850703] (igus_rebel) StdoutLine: {'line': b'5: -                    status.Log();\n'}
[0.850729] (igus_rebel) StdoutLine: {'line': b'5: -                    currentStatus = status;\n'}
[0.850755] (igus_rebel) StdoutLine: {'line': b'5: -                    ProcessStatus(currentStatus);\n'}
[0.850782] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.850808] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.850835] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850861] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::RUNSTATE:\n'}
[0.850888] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.850914] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.850941] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.850967] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.850993] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::MESSAGE:\n'}
[0.851018] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.851044] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Message message = CriMessages::Message(msg);\n'}
[0.851071] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel MESSAGE: %s", message.message.c_str());\n'}
[0.851098] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.851123] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.851150] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851177] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMD:\n'}
[0.851205] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.851231] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Command command = CriMessages::Command(msg);\n'}
[0.851258] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851286] (igus_rebel) StdoutLine: {'line': b'5: -                    // Not sure if the ROS node should display these?\n'}
[0.851312] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "CMD: %s", command.command.c_str());\n'}
[0.851339] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.851365] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.851391] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851416] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CONFIG:\n'}
[0.851442] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.851468] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::ConfigType configType = CriMessages::Config::GetConfigType(msg);\n'}
[0.851494] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851520] (igus_rebel) StdoutLine: {'line': b'5: -                    switch (configType)\n'}
[0.851547] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851574] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::ConfigType::KINEMATICLIMITS:\n'}
[0.851602] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851630] (igus_rebel) StdoutLine: {'line': b'5: -                        CriMessages::KinematicLimits kinematicLimits = CriMessages::KinematicLimits(msg);\n'}
[0.851659] (igus_rebel) StdoutLine: {'line': b'5: -                        kinematicLimits.Print();\n'}
[0.851693] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.851720] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851747] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::ConfigType::UNKNOWN:\n'}
[0.851774] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.851801] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Unknown config message: %s", msg.c_str());\n'}
[0.851828] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.851855] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851881] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851908] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.851935] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.851961] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.851988] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.852014] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.852040] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::INFO:\n'}
[0.852067] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.852093] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Info info = CriMessages::Info(msg);\n'}
[0.852120] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "INFO: %s", info.info.c_str());\n'}
[0.852146] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.852172] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.852198] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.852224] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::LOGMSG:\n'}
[0.852249] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.852275] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::LogMsg log = CriMessages::LogMsg(msg);\n'}
[0.852302] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.852328] (igus_rebel) StdoutLine: {'line': b'5: -                    switch (log.logLevel)\n'}
[0.852354] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.852380] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::DEBUG:\n'}
[0.852406] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.852434] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.852463] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.852490] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.852517] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.852543] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::APP_INFO:\n'}
[0.852569] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.852595] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_INFO): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.852625] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.852651] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.852681] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.852710] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::APP_ERROR:\n'}
[0.852737] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.852763] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG (APP_ERROR): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.852790] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.852816] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.852842] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.852868] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::INFO:\n'}
[0.852895] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.852922] (igus_rebel) StdoutLine: {'line': b"5: -                        // The Rebel is pretty chatty with its INFO level log messages, so I've set them to output only to the ROS DEBUG level.\n"}
[0.852950] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.852977] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.853005] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.853031] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853058] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::WARN:\n'}
[0.853086] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.853113] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.853140] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.853169] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.853198] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853224] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::ERROR:\n'}
[0.853250] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.853276] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.853303] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.853329] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.853355] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853382] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::FATAL:\n'}
[0.853408] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.853435] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_FATAL(rclcpp::get_logger("igus_rebel"), "REBEL LOG: %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.853462] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.853489] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.853515] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853544] (igus_rebel) StdoutLine: {'line': b'5: -                    case CriMessages::LogLevel::UNKNOWN:\n'}
[0.853571] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.853598] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "REBEL LOG (UNKNOWN LOG LEVEL): %s (%ld ms)", log.logMsg.c_str(), log.timestamp);\n'}
[0.853626] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.853653] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.853684] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.853713] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853740] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.853768] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.853799] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853827] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::VARIABLES:\n'}
[0.853854] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.853880] (igus_rebel) StdoutLine: {'line': b'5: -                    // CriMessages::Variables vars = CriMessages::Variables(msg);\n'}
[0.853907] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.853934] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.853960] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.853986] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMDERROR:\n'}
[0.854012] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.854038] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::CmdError error = CriMessages::CmdError(msg);\n'}
[0.854064] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854090] (igus_rebel) StdoutLine: {'line': b'5: -                    try\n'}
[0.854116] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.854142] (igus_rebel) StdoutLine: {'line': b'5: -                        std::string command = unacknowledgedCommands.at(error.recjectedCmd);\n'}
[0.854168] (igus_rebel) StdoutLine: {'line': b'5: -                        unacknowledgedCommands.erase(error.recjectedCmd);\n'}
[0.854194] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Rebel did not accept command: %s. Error message: %s", command.c_str(), error.error.c_str());\n'}
[0.854221] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.854251] (igus_rebel) StdoutLine: {'line': b'5: -                    catch (const std::out_of_range& e)\n'}
[0.854276] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.854303] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Rebel did not accept unknown command. Error message: %s (%d)", error.error.c_str(), error.recjectedCmd);\n'}
[0.854330] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.854355] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.854381] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.854406] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854431] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CMDACK:\n'}
[0.854458] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.854483] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::CmdAck ack = CriMessages::CmdAck(msg);\n'}
[0.854508] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854534] (igus_rebel) StdoutLine: {'line': b'5: -                    try\n'}
[0.854559] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.854585] (igus_rebel) StdoutLine: {'line': b'5: -                        std::string command = unacknowledgedCommands.at(ack.acceptedCmd);\n'}
[0.854611] (igus_rebel) StdoutLine: {'line': b'5: -                        unacknowledgedCommands.erase(ack.acceptedCmd);\n'}
[0.854637] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel accepted command: %s", command.c_str());\n'}
[0.854667] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.854699] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.854725] (igus_rebel) StdoutLine: {'line': b'5: -                    catch (const std::out_of_range& e)\n'}
[0.854752] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.854779] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Rebel accepted unknown command: %d", ack.acceptedCmd);\n'}
[0.854806] (igus_rebel) StdoutLine: {'line': b'5: -                        break;\n'}
[0.854833] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.854863] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.854890] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.854917] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.854943] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::CYCLESTAT:\n'}
[0.854971] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.854997] (igus_rebel) StdoutLine: {'line': b'5: -                    CriMessages::Cyclestat cyclestat = CriMessages::Cyclestat(msg);\n'}
[0.855024] (igus_rebel) StdoutLine: {'line': b'5: -                    // Will only output this once every 2 minutes, because this is sent every 0.5 seconds.\n'}
[0.855052] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_INFO_THROTTLE(rclcpp::get_logger("igus_rebel"), *node_->get_clock(), 120, "Rebel cycle statistics -- Cycletime: %d -- Workload: %d%%", cyclestat.cycletime, cyclestat.workload);\n'}
[0.855082] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.855109] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.855135] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855162] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::UNKNOWN:\n'}
[0.855189] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.855216] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "UNKNOW MESSAGE: %s", msg.c_str());\n'}
[0.855242] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.855270] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.855296] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855327] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::OPINFO:\n'}
[0.855355] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.855381] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.855408] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.855434] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855461] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::GSIG:\n'}
[0.855488] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.855516] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.855542] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.855573] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::MessageType::GRIPPERSTATE:\n'}
[0.855599] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.855626] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.855652] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.855685] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.855713] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.855739] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.855766] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.855793] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Stopped to process robot messages");\n'}
[0.855824] (igus_rebel) StdoutLine: {'line': b'5: +    if (currentKinstate != CriMessages::Kinstate::NO_ERROR) {\n'}
[0.855855] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.855883] (igus_rebel) StdoutLine: {'line': b'5: +      switch (status.kinstate) {\n'}
[0.855910] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::JOINT_LIMIT_MIN:\n'}
[0.855937] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.855964] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "joint at minimum limit";\n'}
[0.855991] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.856016] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.856042] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.856069] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::JOINT_LIMIT_MAX:\n'}
[0.856095] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.856120] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "joint at maximum limit";\n'}
[0.856147] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.856173] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.856199] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.856225] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.856252] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.856278] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (center)";\n'}
[0.856305] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.856332] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.856359] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.856387] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.856415] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.856441] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (reach)";\n'}
[0.856468] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.856497] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.856523] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.856550] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.856576] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.856603] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "cartesian singularity (wrist)";\n'}
[0.856629] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.856657] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.856689] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.856717] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.856744] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.856772] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 1";\n'}
[0.856799] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.856827] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.856854] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.856886] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.856916] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.856944] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 2";\n'}
[0.856973] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.857001] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.857028] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857055] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.857082] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.857109] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 3";\n'}
[0.857139] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.857165] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.857195] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857222] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.857248] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.857274] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 4";\n'}
[0.857300] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.857326] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.857356] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857383] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.857409] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.857435] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 5";\n'}
[0.857460] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.857487] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.857513] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857538] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.857563] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.857591] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "tool at virtual box limit 6";\n'}
[0.857619] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.857646] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.857676] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857707] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.857738] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.857765] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "motion not allowed";\n'}
[0.857795] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.857823] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.857849] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.857875] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::UNKNOWN:\n'}
[0.857902] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.857929] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "unknown error";\n'}
[0.857957] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.857984] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.858010] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.858041] (igus_rebel) StdoutLine: {'line': b'5: +        case CriMessages::Kinstate::NO_ERROR:\n'}
[0.858068] (igus_rebel) StdoutLine: {'line': b'5: +          {\n'}
[0.858096] (igus_rebel) StdoutLine: {'line': b'5: +            kinstateMessage = "no error";\n'}
[0.858126] (igus_rebel) StdoutLine: {'line': b'5: +            break;\n'}
[0.858153] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.858180] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.858208] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.858235] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Kinematics error [%s]",\n'}
[0.858264] (igus_rebel) StdoutLine: {'line': b'5: +          kinstateMessage.c_str());\n'}
[0.858292] (igus_rebel) StdoutLine: {'line': b'5: @@ -265,7 +447,56 @@\n'}
[0.858320] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.858348] (igus_rebel) StdoutLine: {'line': b'5: -    int Rebel::Ccnt()\n'}
[0.858375] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.858403] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(cntLock);\n'}
[0.858430] (igus_rebel) StdoutLine: {'line': b'5: -        int current = current_ccnt;\n'}
[0.858499] (igus_rebel) StdoutLine: {'line': b'5: -        current_ccnt = (current_ccnt % 9999) + 1;\n'}
[0.858537] (igus_rebel) StdoutLine: {'line': b'5: -        return current;\n'}
[0.858568] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.858598] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.858628] (igus_rebel) StdoutLine: {'line': b'5: +  if (currentErrorJoints != lastErrorJoints) {\n'}
[0.858662] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.858698] (igus_rebel) StdoutLine: {'line': b'5: +            // loop throught the 6 joint errors\n'}
[0.858731] (igus_rebel) StdoutLine: {'line': b'5: +    for (unsigned int i = 0; i < 6; i++) {\n'}
[0.858760] (igus_rebel) StdoutLine: {'line': b'5: +      int errorJoint = currentErrorJoints.at(i);\n'}
[0.858789] (igus_rebel) StdoutLine: {'line': b'5: +      std::array<int, 8> errorJointBit;\n'}
[0.858862] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.858892] (igus_rebel) StdoutLine: {'line': b'5: +      if (errorJoint != lastErrorJoints.at(i)) {\n'}
[0.858921] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.858948] (igus_rebel) StdoutLine: {'line': b'5: +                    // extract bits from the error to analyze it\n'}
[0.858976] (igus_rebel) StdoutLine: {'line': b'5: +        for (unsigned j = 0; j < 8; j++) {\n'}
[0.859004] (igus_rebel) StdoutLine: {'line': b'5: +          errorJointBit[j] = errorJoint & (int)exp2(j);\n'}
[0.859031] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859059] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859085] (igus_rebel) StdoutLine: {'line': b'5: +        std::string errorMsg = "";\n'}
[0.859112] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(0) == static_cast<int>(CriMessages::ErrorJoint::TEMP)) {\n'}
[0.859140] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Overtemperature\' ";\n'}
[0.859168] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859195] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859222] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(1) == static_cast<int>(CriMessages::ErrorJoint::ESTOP_LOWV)) {\n'}
[0.859250] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Supply too low: Is emergency button pressed?\' ";\n'}
[0.859278] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859304] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859331] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(2) == static_cast<int>(CriMessages::ErrorJoint::MNE)) {\n'}
[0.859357] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Motor not enabled\' ";\n'}
[0.859383] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859409] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859435] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(3) == static_cast<int>(CriMessages::ErrorJoint::COM)) {\n'}
[0.859462] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Communication watch dog\' ";\n'}
[0.859488] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859514] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859541] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(4) == static_cast<int>(CriMessages::ErrorJoint::POS)) {\n'}
[0.859567] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Position lag\' ";\n'}
[0.859594] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859620] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859646] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(5) == static_cast<int>(CriMessages::ErrorJoint::ENC)) {\n'}
[0.859677] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Encoder Error\' ";\n'}
[0.859706] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859732] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859757] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(6) == static_cast<int>(CriMessages::ErrorJoint::OC)) {\n'}
[0.859782] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'Overcurrent\' ";\n'}
[0.859808] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859834] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859859] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorJointBit.at(7) == static_cast<int>(CriMessages::ErrorJoint::DRV)) {\n'}
[0.859886] (igus_rebel) StdoutLine: {'line': b'5: +          errorMsg += "\'DriveError/SVM\' ";\n'}
[0.859915] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.859941] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.859966] (igus_rebel) StdoutLine: {'line': b'5: +        if (errorMsg != "") {\n'}
[0.859992] (igus_rebel) StdoutLine: {'line': b'5: +          RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Joint %i Error: [%s]", i,\n'}
[0.860018] (igus_rebel) StdoutLine: {'line': b'5: +              errorMsg.c_str());\n'}
[0.860044] (igus_rebel) StdoutLine: {'line': b'5: +        } else {\n'}
[0.860071] (igus_rebel) StdoutLine: {'line': b'5: +          RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Joint %i Error: Cleared", i);\n'}
[0.860098] (igus_rebel) StdoutLine: {'line': b'5: +        }\n'}
[0.860125] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.860152] (igus_rebel) StdoutLine: {'line': b'5: @@ -273,247 +504,5 @@\n'}
[0.860180] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860207] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetDigitalOut(const int &output, const bool &is_on)\n'}
[0.860235] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.860261] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream cmd;\n'}
[0.860288] (igus_rebel) StdoutLine: {'line': b'5: -        cmd << CriKeywords::COMMAND_DOUT << " " << output << " " << (is_on ? "true" : "false");\n'}
[0.860315] (igus_rebel) StdoutLine: {'line': b'5: -        Command(cmd.str());\n'}
[0.860344] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.860371] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860396] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Command(const std::string &command)\n'}
[0.860422] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.860448] (igus_rebel) StdoutLine: {'line': b'5: -        int commandCount = Ccnt();\n'}
[0.860474] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream msg;\n'}
[0.860500] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::START << " " << commandCount << " ";\n'}
[0.860526] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::TYPE_CMD << " ";\n'}
[0.860552] (igus_rebel) StdoutLine: {'line': b'5: -        msg << command << " ";\n'}
[0.860578] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::END << std::endl;\n'}
[0.860604] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860630] (igus_rebel) StdoutLine: {'line': b'5: -        unacknowledgedCommands[commandCount] = command;\n'}
[0.860656] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860690] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->SendMessage(msg.str());\n'}
[0.860718] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.860744] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860770] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetConfig(const std::string &config)\n'}
[0.860797] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.860822] (igus_rebel) StdoutLine: {'line': b'5: -        std::ostringstream msg;\n'}
[0.860849] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::START << " " << Ccnt() << " ";\n'}
[0.860875] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::TYPE_CONFIG << " ";\n'}
[0.860901] (igus_rebel) StdoutLine: {'line': b'5: -        msg << config << " ";\n'}
[0.860927] (igus_rebel) StdoutLine: {'line': b'5: -        msg << CriKeywords::END << std::endl;\n'}
[0.860954] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.860981] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->SendMessage(msg.str());\n'}
[0.861007] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.861034] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861060] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetControlMode(const ControlMode &mode)\n'}
[0.861087] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.861113] (igus_rebel) StdoutLine: {'line': b'5: -        switch (mode)\n'}
[0.861143] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.861171] (igus_rebel) StdoutLine: {'line': b'5: -        case Rebel::ControlMode::POSITION:\n'}
[0.861197] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.861226] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.861253] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(aliveLock);\n'}
[0.861281] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861310] (igus_rebel) StdoutLine: {'line': b'5: -                j1 = currentStatus.posJointCurrent.at(0);\n'}
[0.861337] (igus_rebel) StdoutLine: {'line': b'5: -                j2 = currentStatus.posJointCurrent.at(1);\n'}
[0.861367] (igus_rebel) StdoutLine: {'line': b'5: -                j3 = currentStatus.posJointCurrent.at(2);\n'}
[0.861395] (igus_rebel) StdoutLine: {'line': b'5: -                j4 = currentStatus.posJointCurrent.at(3);\n'}
[0.861421] (igus_rebel) StdoutLine: {'line': b'5: -                j5 = currentStatus.posJointCurrent.at(4);\n'}
[0.861449] (igus_rebel) StdoutLine: {'line': b'5: -                j6 = currentStatus.posJointCurrent.at(5);\n'}
[0.861475] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861501] (igus_rebel) StdoutLine: {'line': b'5: -                Command(CriKeywords::COMMAND_MOTIONTYPECARTBASE);\n'}
[0.861527] (igus_rebel) StdoutLine: {'line': b'5: -                controlMode = mode;\n'}
[0.861553] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.861579] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by position control.");\n'}
[0.861607] (igus_rebel) StdoutLine: {'line': b'5: -            break;\n'}
[0.861634] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.861660] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861694] (igus_rebel) StdoutLine: {'line': b'5: -        case Rebel::ControlMode::VELOCITY:\n'}
[0.861721] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.861748] (igus_rebel) StdoutLine: {'line': b'5: -            Command(CriKeywords::COMMAND_MOTIONTYPEJOINT);\n'}
[0.861774] (igus_rebel) StdoutLine: {'line': b'5: -            controlMode = mode;\n'}
[0.861799] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Rebel now controlled by velocity control.");\n'}
[0.861826] (igus_rebel) StdoutLine: {'line': b'5: -            break;\n'}
[0.861853] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.861879] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.861906] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.861933] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.861958] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::ProcessStatus(const CriMessages::Status &status)\n'}
[0.861985] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.862011] (igus_rebel) StdoutLine: {'line': b'5: -        CriMessages::Kinstate currentKinstate = status.kinstate;\n'}
[0.862038] (igus_rebel) StdoutLine: {'line': b'5: -        std::array<int, 16> currentErrorJoints = status.errorJoints;\n'}
[0.862063] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862090] (igus_rebel) StdoutLine: {'line': b'5: -        if (lastKinstate != currentKinstate)\n'}
[0.862115] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.862140] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862166] (igus_rebel) StdoutLine: {'line': b'5: -            if (lastKinstate != CriMessages::Kinstate::NO_ERROR)\n'}
[0.862196] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.862222] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Kinematics error resolved [%s]", kinstateMessage.c_str());\n'}
[0.862250] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.862277] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862304] (igus_rebel) StdoutLine: {'line': b'5: -            if (currentKinstate != CriMessages::Kinstate::NO_ERROR)\n'}
[0.862332] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.862359] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862385] (igus_rebel) StdoutLine: {'line': b'5: -                switch (status.kinstate)\n'}
[0.862413] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.862445] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::JOINT_LIMIT_MIN:\n'}
[0.862472] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.862499] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "joint at minimum limit";\n'}
[0.862528] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.862554] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.862580] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862606] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::JOINT_LIMIT_MAX:\n'}
[0.862633] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.862660] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "joint at maximum limit";\n'}
[0.862692] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.862720] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.862746] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862772] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_CENTER:\n'}
[0.862801] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.862828] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (center)";\n'}
[0.862855] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.862882] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.862908] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.862933] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_REACH:\n'}
[0.862960] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.862986] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (reach)";\n'}
[0.863012] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.863038] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.863063] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863089] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::CARTESIAN_SINGULARITY_WRIST:\n'}
[0.863115] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.863140] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "cartesian singularity (wrist)";\n'}
[0.863171] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.863198] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.863225] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863252] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_1:\n'}
[0.863279] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.863305] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 1";\n'}
[0.863332] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.863359] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.863388] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863414] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_2:\n'}
[0.863440] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.863468] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 2";\n'}
[0.863495] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.863520] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.863546] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863572] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_3:\n'}
[0.863598] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.863625] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 3";\n'}
[0.863651] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.863685] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.863713] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863741] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_4:\n'}
[0.863768] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.863794] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 4";\n'}
[0.863823] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.863851] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.863878] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.863905] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_5:\n'}
[0.863933] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.863960] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 5";\n'}
[0.863987] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.864014] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.864042] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864069] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::TOOL_AT_VIRTUAL_BOX_LIMIT_6:\n'}
[0.864096] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.864123] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "tool at virtual box limit 6";\n'}
[0.864152] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.864180] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.864207] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864234] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::MOTION_NOT_ALLOWED:\n'}
[0.864265] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.864292] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "motion not allowed";\n'}
[0.864320] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.864346] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.864374] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864401] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::UNKNOWN:\n'}
[0.864429] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.864457] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "unknown error";\n'}
[0.864484] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.864510] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.864537] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864564] (igus_rebel) StdoutLine: {'line': b'5: -                case CriMessages::Kinstate::NO_ERROR:\n'}
[0.864590] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.864615] (igus_rebel) StdoutLine: {'line': b'5: -                    kinstateMessage = "no error";\n'}
[0.864643] (igus_rebel) StdoutLine: {'line': b'5: -                    break;\n'}
[0.864668] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.864702] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.864729] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864756] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Kinematics error [%s]", kinstateMessage.c_str());\n'}
[0.864784] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.864811] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.864838] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864864] (igus_rebel) StdoutLine: {'line': b'5: -        if (currentErrorJoints != lastErrorJoints)\n'}
[0.864892] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.864918] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.864945] (igus_rebel) StdoutLine: {'line': b'5: -            // loop throught the 6 joint errors\n'}
[0.864972] (igus_rebel) StdoutLine: {'line': b'5: -            for (unsigned int i = 0; i < 6; i++)\n'}
[0.865001] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.865027] (igus_rebel) StdoutLine: {'line': b'5: -                int errorJoint = currentErrorJoints.at(i);\n'}
[0.865054] (igus_rebel) StdoutLine: {'line': b'5: -                std::array<int, 8> errorJointBit;\n'}
[0.865080] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865107] (igus_rebel) StdoutLine: {'line': b'5: -                if (errorJoint != lastErrorJoints.at(i))\n'}
[0.865134] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.865160] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865186] (igus_rebel) StdoutLine: {'line': b'5: -                    // extract bits from the error to analyze it\n'}
[0.865218] (igus_rebel) StdoutLine: {'line': b'5: -                    for (unsigned j = 0; j < 8; j++)\n'}
[0.865244] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.865272] (igus_rebel) StdoutLine: {'line': b'5: -                        errorJointBit[j] = errorJoint & (int)exp2(j);\n'}
[0.865299] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.865328] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865354] (igus_rebel) StdoutLine: {'line': b'5: -                    std::string errorMsg = "";\n'}
[0.865381] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(0) == static_cast<int>(CriMessages::ErrorJoint::TEMP))\n'}
[0.865408] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.865434] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Overtemperature\' ";\n'}
[0.865460] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.865487] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865513] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(1) == static_cast<int>(CriMessages::ErrorJoint::ESTOP_LOWV))\n'}
[0.865540] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.865567] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Supply too low: Is emergency button pressed?\' ";\n'}
[0.865595] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.865621] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865648] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(2) == static_cast<int>(CriMessages::ErrorJoint::MNE))\n'}
[0.865679] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.865710] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Motor not enabled\' ";\n'}
[0.865737] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.865765] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865792] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(3) == static_cast<int>(CriMessages::ErrorJoint::COM))\n'}
[0.865819] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.865846] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Communication watch dog\' ";\n'}
[0.865873] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.865899] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.865926] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(4) == static_cast<int>(CriMessages::ErrorJoint::POS))\n'}
[0.865953] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.865980] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Position lag\' ";\n'}
[0.866007] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.866034] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866061] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(5) == static_cast<int>(CriMessages::ErrorJoint::ENC))\n'}
[0.866087] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.866114] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Encoder Error\' ";\n'}
[0.866140] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.866170] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866195] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(6) == static_cast<int>(CriMessages::ErrorJoint::OC))\n'}
[0.866222] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.866248] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'Overcurrent\' ";\n'}
[0.866274] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.866300] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866327] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorJointBit.at(7) == static_cast<int>(CriMessages::ErrorJoint::DRV))\n'}
[0.866354] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.866380] (igus_rebel) StdoutLine: {'line': b'5: -                        errorMsg += "\'DriveError/SVM\' ";\n'}
[0.866406] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.866432] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866458] (igus_rebel) StdoutLine: {'line': b'5: -                    if (errorMsg != "")\n'}
[0.866484] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.866510] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Joint %i Error: [%s]", i, errorMsg.c_str());\n'}
[0.866537] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.866564] (igus_rebel) StdoutLine: {'line': b'5: -                    else\n'}
[0.866589] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.866615] (igus_rebel) StdoutLine: {'line': b'5: -                        RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Joint %i Error: Cleared", i);\n'}
[0.866642] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.866669] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.866702] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.866731] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.866760] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.866787] (igus_rebel) StdoutLine: {'line': b'5: -        lastKinstate = currentKinstate;\n'}
[0.866813] (igus_rebel) StdoutLine: {'line': b'5: -        lastErrorJoints = currentErrorJoints;\n'}
[0.866840] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.866867] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.866894] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.866921] (igus_rebel) StdoutLine: {'line': b'5: +  lastKinstate = currentKinstate;\n'}
[0.866947] (igus_rebel) StdoutLine: {'line': b'5: +  lastErrorJoints = currentErrorJoints;\n'}
[0.866975] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.867001] (igus_rebel) StdoutLine: {'line': b'5: @@ -524,52 +513,54 @@\n'}
[0.867029] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::SetJog(const float &joint1, const float &joint2, const float &joint3,\n'}
[0.867055] (igus_rebel) StdoutLine: {'line': b'5: -                       const float &joint4, const float &joint5, const float &joint6)\n'}
[0.867086] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.867114] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = joint1;\n'}
[0.867141] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = joint2;\n'}
[0.867167] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = joint3;\n'}
[0.867193] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = joint4;\n'}
[0.867219] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = joint5;\n'}
[0.867244] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = joint6;\n'}
[0.867271] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.867297] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.867324] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetJoints(float &joint1, float &joint2, float &joint3,\n'}
[0.867350] (igus_rebel) StdoutLine: {'line': b'5: -                          float &joint4, float &joint5, float &joint6)\n'}
[0.867376] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.867402] (igus_rebel) StdoutLine: {'line': b'5: -        joint1 = currentStatus.posJointCurrent.at(0);\n'}
[0.867431] (igus_rebel) StdoutLine: {'line': b'5: -        joint2 = currentStatus.posJointCurrent.at(1);\n'}
[0.867458] (igus_rebel) StdoutLine: {'line': b'5: -        joint3 = currentStatus.posJointCurrent.at(2);\n'}
[0.867486] (igus_rebel) StdoutLine: {'line': b'5: -        joint4 = currentStatus.posJointCurrent.at(3);\n'}
[0.867512] (igus_rebel) StdoutLine: {'line': b'5: -        joint5 = currentStatus.posJointCurrent.at(4);\n'}
[0.867538] (igus_rebel) StdoutLine: {'line': b'5: -        joint6 = currentStatus.posJointCurrent.at(5);\n'}
[0.867565] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.867591] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.867617] (igus_rebel) StdoutLine: {'line': b'5: -    CallbackReturn Rebel::on_init(const HardwareInfo&)\n'}
[0.867645] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.867675] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket = std::make_shared<RebelSocket>(ip, port, 200),\n'}
[0.867707] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = 0.0f;\n'}
[0.867733] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = 0.0f;\n'}
[0.867759] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = 0.0f;\n'}
[0.867784] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = 0.0f;\n'}
[0.867811] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = 0.0f;\n'}
[0.867838] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = 0.0f;\n'}
[0.867868] (igus_rebel) StdoutLine: {'line': b'5: -        controlMode = Rebel::ControlMode::VELOCITY;\n'}
[0.867894] (igus_rebel) StdoutLine: {'line': b'5: -        current_ccnt = 1;\n'}
[0.867920] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = false;\n'}
[0.867946] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = false;\n'}
[0.867972] (igus_rebel) StdoutLine: {'line': b'5: -        aliveWaitMs = 100;\n'}
[0.867997] (igus_rebel) StdoutLine: {'line': b'5: -        lastKinstate = CriMessages::Kinstate::NO_ERROR;\n'}
[0.868022] (igus_rebel) StdoutLine: {'line': b'5: -        kinstateMessage = "";\n'}
[0.868048] (igus_rebel) StdoutLine: {'line': b'5: -        node_ = std::make_shared<rclcpp::Node>("igus_rebel");\n'}
[0.868074] (igus_rebel) StdoutLine: {'line': b'5: -        digital_output_srv_ = node_->create_service<igus_rebel_msgs::srv::SetDigitalOutput>(\n'}
[0.868107] (igus_rebel) StdoutLine: {'line': b'5: -            "set_digital_output", std::bind(&Rebel::dio_callback, this, std::placeholders::_1, std::placeholders::_2));\n'}
[0.868141] (igus_rebel) StdoutLine: {'line': b'5: -        Start();\n'}
[0.868171] (igus_rebel) StdoutLine: {'line': b'5: -        return CallbackReturn::SUCCESS;\n'}
[0.868201] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.868230] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.868258] (igus_rebel) StdoutLine: {'line': b'5: -    std::vector<StateInterface> Rebel::export_state_interfaces()\n'}
[0.868287] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.868316] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<StateInterface> state_interfaces;\n'}
[0.868345] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.868373] (igus_rebel) StdoutLine: {'line': b'5: -        for (int i = 0; i < 6; ++i)\n'}
[0.868402] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.868435] (igus_rebel) StdoutLine: {'line': b'5: -            state_interfaces.emplace_back(StateInterface(\n'}
[0.868463] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::SetJog(\n'}
[0.868493] (igus_rebel) StdoutLine: {'line': b'5: +  const float & joint1, const float & joint2, const float & joint3,\n'}
[0.868522] (igus_rebel) StdoutLine: {'line': b'5: +  const float & joint4, const float & joint5, const float & joint6)\n'}
[0.868552] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.868581] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = joint1;\n'}
[0.868614] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = joint2;\n'}
[0.868645] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = joint3;\n'}
[0.868681] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = joint4;\n'}
[0.868716] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = joint5;\n'}
[0.868747] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = joint6;\n'}
[0.868780] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.868811] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.868843] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetJoints(\n'}
[0.868874] (igus_rebel) StdoutLine: {'line': b'5: +  float & joint1, float & joint2, float & joint3,\n'}
[0.868906] (igus_rebel) StdoutLine: {'line': b'5: +  float & joint4, float & joint5, float & joint6)\n'}
[0.868935] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.868963] (igus_rebel) StdoutLine: {'line': b'5: +  joint1 = currentStatus.posJointCurrent.at(0);\n'}
[0.868992] (igus_rebel) StdoutLine: {'line': b'5: +  joint2 = currentStatus.posJointCurrent.at(1);\n'}
[0.869021] (igus_rebel) StdoutLine: {'line': b'5: +  joint3 = currentStatus.posJointCurrent.at(2);\n'}
[0.869051] (igus_rebel) StdoutLine: {'line': b'5: +  joint4 = currentStatus.posJointCurrent.at(3);\n'}
[0.869079] (igus_rebel) StdoutLine: {'line': b'5: +  joint5 = currentStatus.posJointCurrent.at(4);\n'}
[0.869106] (igus_rebel) StdoutLine: {'line': b'5: +  joint6 = currentStatus.posJointCurrent.at(5);\n'}
[0.869135] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.869163] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.869193] (igus_rebel) StdoutLine: {'line': b'5: +CallbackReturn Rebel::on_init(const HardwareInfo &)\n'}
[0.869224] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.869254] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket = std::make_shared<RebelSocket>(ip, port, 200),\n'}
[0.869283] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = 0.0f;\n'}
[0.869338] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = 0.0f;\n'}
[0.869367] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = 0.0f;\n'}
[0.869396] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = 0.0f;\n'}
[0.869422] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = 0.0f;\n'}
[0.869448] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = 0.0f;\n'}
[0.869474] (igus_rebel) StdoutLine: {'line': b'5: +  controlMode = Rebel::ControlMode::VELOCITY;\n'}
[0.869502] (igus_rebel) StdoutLine: {'line': b'5: +  current_ccnt = 1;\n'}
[0.869528] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = false;\n'}
[0.869554] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = false;\n'}
[0.869580] (igus_rebel) StdoutLine: {'line': b'5: +  aliveWaitMs = 100;\n'}
[0.869606] (igus_rebel) StdoutLine: {'line': b'5: +  lastKinstate = CriMessages::Kinstate::NO_ERROR;\n'}
[0.869632] (igus_rebel) StdoutLine: {'line': b'5: +  kinstateMessage = "";\n'}
[0.869658] (igus_rebel) StdoutLine: {'line': b'5: +  node_ = std::make_shared<rclcpp::Node>("igus_rebel");\n'}
[0.869691] (igus_rebel) StdoutLine: {'line': b'5: +  digital_output_srv_ = node_->create_service<igus_rebel_msgs::srv::SetDigitalOutput>(\n'}
[0.869719] (igus_rebel) StdoutLine: {'line': b'5: +            "set_digital_output",\n'}
[0.869746] (igus_rebel) StdoutLine: {'line': b'5: +      std::bind(&Rebel::dio_callback, this, std::placeholders::_1, std::placeholders::_2));\n'}
[0.869772] (igus_rebel) StdoutLine: {'line': b'5: +  Start();\n'}
[0.869798] (igus_rebel) StdoutLine: {'line': b'5: +  return CallbackReturn::SUCCESS;\n'}
[0.869824] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.869851] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.869878] (igus_rebel) StdoutLine: {'line': b'5: +std::vector<StateInterface> Rebel::export_state_interfaces()\n'}
[0.869906] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.869931] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<StateInterface> state_interfaces;\n'}
[0.869958] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.869984] (igus_rebel) StdoutLine: {'line': b'5: +  for (int i = 0; i < 6; ++i) {\n'}
[0.870010] (igus_rebel) StdoutLine: {'line': b'5: +    state_interfaces.emplace_back(StateInterface(\n'}
[0.870036] (igus_rebel) StdoutLine: {'line': b'5: @@ -577 +568 @@\n'}
[0.870063] (igus_rebel) StdoutLine: {'line': b'5: -            state_interfaces.emplace_back(StateInterface(\n'}
[0.870091] (igus_rebel) StdoutLine: {'line': b'5: +    state_interfaces.emplace_back(StateInterface(\n'}
[0.870119] (igus_rebel) StdoutLine: {'line': b'5: @@ -579,12 +570,11 @@\n'}
[0.870145] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.870171] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870198] (igus_rebel) StdoutLine: {'line': b'5: -        return state_interfaces;\n'}
[0.870229] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.870257] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870283] (igus_rebel) StdoutLine: {'line': b'5: -    std::vector<CommandInterface> Rebel::export_command_interfaces()\n'}
[0.870311] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.870338] (igus_rebel) StdoutLine: {'line': b'5: -        std::vector<CommandInterface> command_interfaces;\n'}
[0.870364] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870391] (igus_rebel) StdoutLine: {'line': b'5: -        for (int i = 0; i < 6; ++i)\n'}
[0.870419] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.870449] (igus_rebel) StdoutLine: {'line': b'5: -            command_interfaces.emplace_back(CommandInterface(\n'}
[0.870475] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.870501] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870528] (igus_rebel) StdoutLine: {'line': b'5: +  return state_interfaces;\n'}
[0.870554] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.870580] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870606] (igus_rebel) StdoutLine: {'line': b'5: +std::vector<CommandInterface> Rebel::export_command_interfaces()\n'}
[0.870632] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.870657] (igus_rebel) StdoutLine: {'line': b'5: +  std::vector<CommandInterface> command_interfaces;\n'}
[0.870690] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.870721] (igus_rebel) StdoutLine: {'line': b'5: +  for (int i = 0; i < 6; ++i) {\n'}
[0.870748] (igus_rebel) StdoutLine: {'line': b'5: +    command_interfaces.emplace_back(CommandInterface(\n'}
[0.870773] (igus_rebel) StdoutLine: {'line': b'5: @@ -592,37 +582,37 @@\n'}
[0.870800] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.870826] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870852] (igus_rebel) StdoutLine: {'line': b'5: -        return command_interfaces;\n'}
[0.870878] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.870904] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.870930] (igus_rebel) StdoutLine: {'line': b'5: -    return_type Rebel::read(const rclcpp::Time&, const rclcpp::Duration &period)\n'}
[0.870956] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.870982] (igus_rebel) StdoutLine: {'line': b'5: -        read();\n'}
[0.871009] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.871036] (igus_rebel) StdoutLine: {'line': b'5: -        vel[0] = (pos[0] - last_pos[0]) / period.seconds();\n'}
[0.871063] (igus_rebel) StdoutLine: {'line': b'5: -        vel[1] = (pos[1] - last_pos[1]) / period.seconds();\n'}
[0.871089] (igus_rebel) StdoutLine: {'line': b'5: -        vel[2] = (pos[2] - last_pos[2]) / period.seconds();\n'}
[0.871116] (igus_rebel) StdoutLine: {'line': b'5: -        vel[3] = (pos[3] - last_pos[3]) / period.seconds();\n'}
[0.871143] (igus_rebel) StdoutLine: {'line': b'5: -        vel[4] = (pos[4] - last_pos[4]) / period.seconds();\n'}
[0.871170] (igus_rebel) StdoutLine: {'line': b'5: -        vel[5] = (pos[5] - last_pos[5]) / period.seconds();\n'}
[0.871196] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.871223] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[0] = pos[0];\n'}
[0.871251] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[1] = pos[1];\n'}
[0.871278] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[2] = pos[2];\n'}
[0.871304] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[3] = pos[3];\n'}
[0.871330] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[4] = pos[4];\n'}
[0.871360] (igus_rebel) StdoutLine: {'line': b'5: -        last_pos[5] = pos[5];\n'}
[0.871386] (igus_rebel) StdoutLine: {'line': b'5: -        return return_type::OK;\n'}
[0.871412] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.871441] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.871467] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::read()\n'}
[0.871495] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.871522] (igus_rebel) StdoutLine: {'line': b'5: -        pos[0] = currentStatus.posJointCurrent.at(0) * degToRad;\n'}
[0.871548] (igus_rebel) StdoutLine: {'line': b'5: -        pos[1] = currentStatus.posJointCurrent.at(1) * degToRad;\n'}
[0.871574] (igus_rebel) StdoutLine: {'line': b'5: -        pos[2] = currentStatus.posJointCurrent.at(2) * degToRad;\n'}
[0.871601] (igus_rebel) StdoutLine: {'line': b'5: -        pos[3] = currentStatus.posJointCurrent.at(3) * degToRad;\n'}
[0.871629] (igus_rebel) StdoutLine: {'line': b'5: -        pos[4] = currentStatus.posJointCurrent.at(4) * degToRad;\n'}
[0.871657] (igus_rebel) StdoutLine: {'line': b'5: -        pos[5] = currentStatus.posJointCurrent.at(5) * degToRad;\n'}
[0.871689] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.871719] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.871746] (igus_rebel) StdoutLine: {'line': b'5: -    return_type Rebel::write(const rclcpp::Time&, const rclcpp::Duration&)\n'}
[0.871773] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.871800] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.871829] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871856] (igus_rebel) StdoutLine: {'line': b'5: +  return command_interfaces;\n'}
[0.871883] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.871912] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.871940] (igus_rebel) StdoutLine: {'line': b'5: +return_type Rebel::read(const rclcpp::Time &, const rclcpp::Duration & period)\n'}
[0.871970] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.871996] (igus_rebel) StdoutLine: {'line': b'5: +  read();\n'}
[0.872022] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.872049] (igus_rebel) StdoutLine: {'line': b'5: +  vel[0] = (pos[0] - last_pos[0]) / period.seconds();\n'}
[0.872076] (igus_rebel) StdoutLine: {'line': b'5: +  vel[1] = (pos[1] - last_pos[1]) / period.seconds();\n'}
[0.872103] (igus_rebel) StdoutLine: {'line': b'5: +  vel[2] = (pos[2] - last_pos[2]) / period.seconds();\n'}
[0.872129] (igus_rebel) StdoutLine: {'line': b'5: +  vel[3] = (pos[3] - last_pos[3]) / period.seconds();\n'}
[0.872156] (igus_rebel) StdoutLine: {'line': b'5: +  vel[4] = (pos[4] - last_pos[4]) / period.seconds();\n'}
[0.872181] (igus_rebel) StdoutLine: {'line': b'5: +  vel[5] = (pos[5] - last_pos[5]) / period.seconds();\n'}
[0.872207] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.872234] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[0] = pos[0];\n'}
[0.872260] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[1] = pos[1];\n'}
[0.872286] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[2] = pos[2];\n'}
[0.872316] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[3] = pos[3];\n'}
[0.872341] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[4] = pos[4];\n'}
[0.872368] (igus_rebel) StdoutLine: {'line': b'5: +  last_pos[5] = pos[5];\n'}
[0.872394] (igus_rebel) StdoutLine: {'line': b'5: +  return return_type::OK;\n'}
[0.872421] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.872451] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.872477] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::read()\n'}
[0.872504] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.872532] (igus_rebel) StdoutLine: {'line': b'5: +  pos[0] = currentStatus.posJointCurrent.at(0) * degToRad;\n'}
[0.872559] (igus_rebel) StdoutLine: {'line': b'5: +  pos[1] = currentStatus.posJointCurrent.at(1) * degToRad;\n'}
[0.872586] (igus_rebel) StdoutLine: {'line': b'5: +  pos[2] = currentStatus.posJointCurrent.at(2) * degToRad;\n'}
[0.872615] (igus_rebel) StdoutLine: {'line': b'5: +  pos[3] = currentStatus.posJointCurrent.at(3) * degToRad;\n'}
[0.872643] (igus_rebel) StdoutLine: {'line': b'5: +  pos[4] = currentStatus.posJointCurrent.at(4) * degToRad;\n'}
[0.872679] (igus_rebel) StdoutLine: {'line': b'5: +  pos[5] = currentStatus.posJointCurrent.at(5) * degToRad;\n'}
[0.872710] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.872740] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.872767] (igus_rebel) StdoutLine: {'line': b'5: +return_type Rebel::write(const rclcpp::Time &, const rclcpp::Duration &)\n'}
[0.872795] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.872823] (igus_rebel) StdoutLine: {'line': b'5: @@ -630,6 +620,6 @@\n'}
[0.872851] (igus_rebel) StdoutLine: {'line': b'5: -        write();\n'}
[0.872879] (igus_rebel) StdoutLine: {'line': b'5: -        return return_type::OK;\n'}
[0.872909] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.872939] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.872965] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::write()\n'}
[0.872992] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.873020] (igus_rebel) StdoutLine: {'line': b'5: +  write();\n'}
[0.873047] (igus_rebel) StdoutLine: {'line': b'5: +  return return_type::OK;\n'}
[0.873074] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.873101] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.873129] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::write()\n'}
[0.873157] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.873185] (igus_rebel) StdoutLine: {'line': b'5: @@ -637,32 +627,31 @@\n'}
[0.873212] (igus_rebel) StdoutLine: {'line': b'5: -        if (rclcpp::ok())\n'}
[0.873239] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.873266] (igus_rebel) StdoutLine: {'line': b'5: -            rclcpp::spin_some(node_);\n'}
[0.873293] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.873319] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873346] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = (float)vel_cmd[0];\n'}
[0.873372] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = (float)vel_cmd[1];\n'}
[0.873397] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = (float)vel_cmd[2];\n'}
[0.873424] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = (float)vel_cmd[3];\n'}
[0.873450] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = (float)vel_cmd[4];\n'}
[0.873476] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = (float)vel_cmd[5];\n'}
[0.873502] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.873529] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873555] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::dio_callback(\n'}
[0.873581] (igus_rebel) StdoutLine: {'line': b'5: -        const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.873607] (igus_rebel) StdoutLine: {'line': b'5: -        std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response)\n'}
[0.873634] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.873659] (igus_rebel) StdoutLine: {'line': b'5: -        SetDigitalOut(request->output.output, request->output.is_on);\n'}
[0.873692] (igus_rebel) StdoutLine: {'line': b'5: -        response->success = true;\n'}
[0.873720] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.873748] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873774] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::GetReferenceInfo()\n'}
[0.873800] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.873827] (igus_rebel) StdoutLine: {'line': b'5: -        Command(std::string("GetReferencingInfo"));\n'}
[0.873854] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.873886] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.873918] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Start()\n'}
[0.873946] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.873974] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = true;\n'}
[0.874002] (igus_rebel) StdoutLine: {'line': b'5: -        messageThread = std::thread(&Rebel::MessageThreadFunction, this);\n'}
[0.874030] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.874057] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->Start();\n'}
[0.874083] (igus_rebel) StdoutLine: {'line': b'5: +  if (rclcpp::ok()) {\n'}
[0.874110] (igus_rebel) StdoutLine: {'line': b'5: +    rclcpp::spin_some(node_);\n'}
[0.874138] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.874166] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874199] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = (float)vel_cmd[0];\n'}
[0.874227] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = (float)vel_cmd[1];\n'}
[0.874255] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = (float)vel_cmd[2];\n'}
[0.874283] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = (float)vel_cmd[3];\n'}
[0.874310] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = (float)vel_cmd[4];\n'}
[0.874337] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = (float)vel_cmd[5];\n'}
[0.874363] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.874391] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874418] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::dio_callback(\n'}
[0.874447] (igus_rebel) StdoutLine: {'line': b'5: +  const std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Request> request,\n'}
[0.874475] (igus_rebel) StdoutLine: {'line': b'5: +  std::shared_ptr<igus_rebel_msgs::srv::SetDigitalOutput::Response> response)\n'}
[0.874503] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.874530] (igus_rebel) StdoutLine: {'line': b'5: +  SetDigitalOut(request->output.output, request->output.is_on);\n'}
[0.874557] (igus_rebel) StdoutLine: {'line': b'5: +  response->success = true;\n'}
[0.874585] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.874612] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874640] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::GetReferenceInfo()\n'}
[0.874666] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.874697] (igus_rebel) StdoutLine: {'line': b'5: +  Command(std::string("GetReferencingInfo"));\n'}
[0.874726] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.874754] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874781] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Start()\n'}
[0.874811] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.874838] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = true;\n'}
[0.874865] (igus_rebel) StdoutLine: {'line': b'5: +  messageThread = std::thread(&Rebel::MessageThreadFunction, this);\n'}
[0.874891] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.874917] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->Start();\n'}
[0.874943] (igus_rebel) StdoutLine: {'line': b'5: @@ -673,30 +662,29 @@\n'}
[0.874969] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_SETACTIVE + " true");\n'}
[0.874995] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_RESET);\n'}
[0.875021] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_ENABLE);\n'}
[0.875048] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875074] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = true;\n'}
[0.875101] (igus_rebel) StdoutLine: {'line': b'5: -        aliveThread = std::thread(&Rebel::AliveThreadFunction, this);\n'}
[0.875128] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875153] (igus_rebel) StdoutLine: {'line': b'5: -        GetConfig(CriKeywords::CONFIG_GETKINEMATICLIMITS);\n'}
[0.875179] (igus_rebel) StdoutLine: {'line': b'5: -        SetControlMode(ControlMode::VELOCITY);\n'}
[0.875205] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.875229] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875254] (igus_rebel) StdoutLine: {'line': b'5: -    void Rebel::Stop()\n'}
[0.875280] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.875306] (igus_rebel) StdoutLine: {'line': b'5: -        j1 = 0.0f;\n'}
[0.875332] (igus_rebel) StdoutLine: {'line': b'5: -        j2 = 0.0f;\n'}
[0.875358] (igus_rebel) StdoutLine: {'line': b'5: -        j3 = 0.0f;\n'}
[0.875384] (igus_rebel) StdoutLine: {'line': b'5: -        j4 = 0.0f;\n'}
[0.875410] (igus_rebel) StdoutLine: {'line': b'5: -        j5 = 0.0f;\n'}
[0.875436] (igus_rebel) StdoutLine: {'line': b'5: -        j6 = 0.0f;\n'}
[0.875463] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875489] (igus_rebel) StdoutLine: {'line': b'5: -        std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs + 10));\n'}
[0.875520] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875548] (igus_rebel) StdoutLine: {'line': b'5: -        continueAlive = false;\n'}
[0.875576] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875603] (igus_rebel) StdoutLine: {'line': b'5: -        if (aliveThread.joinable())\n'}
[0.875630] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.875658] (igus_rebel) StdoutLine: {'line': b'5: -            aliveThread.join();\n'}
[0.875691] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.875755] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.875786] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_DISABLE);\n'}
[0.875818] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_SETACTIVE + " true");\n'}
[0.875847] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_RESET);\n'}
[0.875876] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_ENABLE);\n'}
[0.875904] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.875935] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = true;\n'}
[0.875973] (igus_rebel) StdoutLine: {'line': b'5: +  aliveThread = std::thread(&Rebel::AliveThreadFunction, this);\n'}
[0.876005] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876038] (igus_rebel) StdoutLine: {'line': b'5: +  GetConfig(CriKeywords::CONFIG_GETKINEMATICLIMITS);\n'}
[0.876070] (igus_rebel) StdoutLine: {'line': b'5: +  SetControlMode(ControlMode::VELOCITY);\n'}
[0.876101] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.876132] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876161] (igus_rebel) StdoutLine: {'line': b'5: +void Rebel::Stop()\n'}
[0.876190] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.876219] (igus_rebel) StdoutLine: {'line': b'5: +  j1 = 0.0f;\n'}
[0.876249] (igus_rebel) StdoutLine: {'line': b'5: +  j2 = 0.0f;\n'}
[0.876278] (igus_rebel) StdoutLine: {'line': b'5: +  j3 = 0.0f;\n'}
[0.876308] (igus_rebel) StdoutLine: {'line': b'5: +  j4 = 0.0f;\n'}
[0.876338] (igus_rebel) StdoutLine: {'line': b'5: +  j5 = 0.0f;\n'}
[0.876366] (igus_rebel) StdoutLine: {'line': b'5: +  j6 = 0.0f;\n'}
[0.876396] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876427] (igus_rebel) StdoutLine: {'line': b'5: +  std::this_thread::sleep_for(std::chrono::milliseconds(aliveWaitMs + 10));\n'}
[0.876458] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876487] (igus_rebel) StdoutLine: {'line': b'5: +  continueAlive = false;\n'}
[0.876518] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876547] (igus_rebel) StdoutLine: {'line': b'5: +  if (aliveThread.joinable()) {\n'}
[0.876577] (igus_rebel) StdoutLine: {'line': b'5: +    aliveThread.join();\n'}
[0.876606] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.876637] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.876666] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_DISABLE);\n'}
[0.876703] (igus_rebel) StdoutLine: {'line': b'5: @@ -704,11 +692,10 @@\n'}
[0.876734] (igus_rebel) StdoutLine: {'line': b'5: -        Command(CriKeywords::COMMAND_QUIT);\n'}
[0.876806] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.876839] (igus_rebel) StdoutLine: {'line': b'5: -        rebelSocket->Stop();\n'}
[0.876870] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.876901] (igus_rebel) StdoutLine: {'line': b'5: -        continueMessage = false;\n'}
[0.876931] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.876961] (igus_rebel) StdoutLine: {'line': b'5: -        if (messageThread.joinable())\n'}
[0.876991] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.877022] (igus_rebel) StdoutLine: {'line': b'5: -            messageThread.join();\n'}
[0.877049] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.877076] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.877103] (igus_rebel) StdoutLine: {'line': b'5: +  Command(CriKeywords::COMMAND_QUIT);\n'}
[0.877130] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.877158] (igus_rebel) StdoutLine: {'line': b'5: +  rebelSocket->Stop();\n'}
[0.877187] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.877215] (igus_rebel) StdoutLine: {'line': b'5: +  continueMessage = false;\n'}
[0.877242] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.877270] (igus_rebel) StdoutLine: {'line': b'5: +  if (messageThread.joinable()) {\n'}
[0.877300] (igus_rebel) StdoutLine: {'line': b'5: +    messageThread.join();\n'}
[0.877325] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.877351] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.877376] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.877402] (igus_rebel) StdoutLine: {'line': b"5: Code style divergence in file 'src/RebelSocket.cpp':\n"}
[0.877428] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.877454] (igus_rebel) StdoutLine: {'line': b'5: --- src/RebelSocket.cpp\n'}
[0.877479] (igus_rebel) StdoutLine: {'line': b'5: +++ src/RebelSocket.cpp.uncrustify\n'}
[0.877504] (igus_rebel) StdoutLine: {'line': b'5: @@ -15,14 +15,14 @@\n'}
[0.877530] (igus_rebel) StdoutLine: {'line': b'5: -    RebelSocket::RebelSocket(const std::string &ip, const int &port, const int &timeout)\n'}
[0.877556] (igus_rebel) StdoutLine: {'line': b'5: -        : sock(0),\n'}
[0.877581] (igus_rebel) StdoutLine: {'line': b'5: -          ip(ip),\n'}
[0.877606] (igus_rebel) StdoutLine: {'line': b'5: -          port(port),\n'}
[0.877631] (igus_rebel) StdoutLine: {'line': b'5: -          timeout(timeout),\n'}
[0.877658] (igus_rebel) StdoutLine: {'line': b'5: -          unprocessedMessages(),\n'}
[0.877692] (igus_rebel) StdoutLine: {'line': b'5: -          fragmentBuffer{0}\n'}
[0.877721] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.877748] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.877774] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.877802] (igus_rebel) StdoutLine: {'line': b'5: -    RebelSocket::~RebelSocket()\n'}
[0.877829] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.877858] (igus_rebel) StdoutLine: {'line': b'5: -        Stop();\n'}
[0.877888] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.877918] (igus_rebel) StdoutLine: {'line': b'5: +RebelSocket::RebelSocket(const std::string & ip, const int & port, const int & timeout)\n'}
[0.877948] (igus_rebel) StdoutLine: {'line': b'5: +: sock(0),\n'}
[0.877976] (igus_rebel) StdoutLine: {'line': b'5: +  ip(ip),\n'}
[0.878007] (igus_rebel) StdoutLine: {'line': b'5: +  port(port),\n'}
[0.878034] (igus_rebel) StdoutLine: {'line': b'5: +  timeout(timeout),\n'}
[0.878061] (igus_rebel) StdoutLine: {'line': b'5: +  unprocessedMessages(),\n'}
[0.878088] (igus_rebel) StdoutLine: {'line': b'5: +  fragmentBuffer{0}\n'}
[0.878116] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.878142] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.878170] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.878196] (igus_rebel) StdoutLine: {'line': b'5: +RebelSocket::~RebelSocket()\n'}
[0.878221] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.878246] (igus_rebel) StdoutLine: {'line': b'5: +  Stop();\n'}
[0.878273] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.878298] (igus_rebel) StdoutLine: {'line': b'5: @@ -33,2 +33,2 @@\n'}
[0.878324] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::MakeConnection()\n'}
[0.878350] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.878376] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::MakeConnection()\n'}
[0.878402] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.878427] (igus_rebel) StdoutLine: {'line': b'5: @@ -37,16 +37,14 @@\n'}
[0.878456] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(connectionLock);\n'}
[0.878482] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.878508] (igus_rebel) StdoutLine: {'line': b'5: -        while (connectionNeeded)\n'}
[0.878534] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.878564] (igus_rebel) StdoutLine: {'line': b'5: -            sock = 0;\n'}
[0.878590] (igus_rebel) StdoutLine: {'line': b'5: -            struct sockaddr_in serv_addr;\n'}
[0.878616] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.878644] (igus_rebel) StdoutLine: {'line': b'5: -            if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0)\n'}
[0.878674] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.878703] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket creation error.");\n'}
[0.878735] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.878764] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.878796] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.878822] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.878849] (igus_rebel) StdoutLine: {'line': b'5: -            serv_addr.sin_family = AF_INET;\n'}
[0.878876] (igus_rebel) StdoutLine: {'line': b'5: -            serv_addr.sin_port = htons(port);\n'}
[0.878904] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(connectionLock);\n'}
[0.878930] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.878958] (igus_rebel) StdoutLine: {'line': b'5: +  while (connectionNeeded) {\n'}
[0.878986] (igus_rebel) StdoutLine: {'line': b'5: +    sock = 0;\n'}
[0.879012] (igus_rebel) StdoutLine: {'line': b'5: +    struct sockaddr_in serv_addr;\n'}
[0.879038] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.879063] (igus_rebel) StdoutLine: {'line': b'5: +    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {\n'}
[0.879090] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket creation error.");\n'}
[0.879117] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.879144] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.879170] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.879195] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.879225] (igus_rebel) StdoutLine: {'line': b'5: +    serv_addr.sin_family = AF_INET;\n'}
[0.879252] (igus_rebel) StdoutLine: {'line': b'5: +    serv_addr.sin_port = htons(port);\n'}
[0.879279] (igus_rebel) StdoutLine: {'line': b'5: @@ -55,16 +53,42 @@\n'}
[0.879306] (igus_rebel) StdoutLine: {'line': b'5: -            if (inet_pton(AF_INET, ip.c_str(), &serv_addr.sin_addr) <= 0)\n'}
[0.879333] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.879359] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Invalid robot IP address / Address not supported.");\n'}
[0.879385] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.879411] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.879440] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.879466] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.879492] (igus_rebel) StdoutLine: {'line': b'5: -            if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0)\n'}
[0.879518] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.879544] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Connection Failed.");\n'}
[0.879571] (igus_rebel) StdoutLine: {'line': b'5: -                std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.879597] (igus_rebel) StdoutLine: {'line': b'5: -                continue;\n'}
[0.879623] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.879648] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.879677] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = false;\n'}
[0.879706] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Connected to ReBeL at %s:%d", ip.c_str(), port);\n'}
[0.879733] (igus_rebel) StdoutLine: {'line': b'5: +    if (inet_pton(AF_INET, ip.c_str(), &serv_addr.sin_addr) <= 0) {\n'}
[0.879759] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.879787] (igus_rebel) StdoutLine: {'line': b'5: +          "Invalid robot IP address / Address not supported.");\n'}
[0.879816] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.879843] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.879871] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.879901] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.879928] (igus_rebel) StdoutLine: {'line': b'5: +    if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0) {\n'}
[0.879957] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Connection Failed.");\n'}
[0.879988] (igus_rebel) StdoutLine: {'line': b'5: +      std::this_thread::sleep_for(std::chrono::milliseconds(100));\n'}
[0.880017] (igus_rebel) StdoutLine: {'line': b'5: +      continue;\n'}
[0.880044] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.880073] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880101] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = false;\n'}
[0.880131] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_INFO(rclcpp::get_logger("igus_rebel"), "Connected to ReBeL at %s:%d", ip.c_str(), port);\n'}
[0.880158] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.880185] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.880213] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880239] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::SeparateMessages(const char *msg)\n'}
[0.880266] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.880292] (igus_rebel) StdoutLine: {'line': b'5: +  const char *start;\n'}
[0.880324] (igus_rebel) StdoutLine: {'line': b'5: +  const char *end = msg;\n'}
[0.880355] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880383] (igus_rebel) StdoutLine: {'line': b'5: +  while (true) {\n'}
[0.880410] (igus_rebel) StdoutLine: {'line': b'5: +    start = std::strstr(end, CriKeywords::START.c_str());\n'}
[0.880438] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880464] (igus_rebel) StdoutLine: {'line': b'5: +    if (start == nullptr) {\n'}
[0.880490] (igus_rebel) StdoutLine: {'line': b'5: +      break;\n'}
[0.880517] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.880544] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880571] (igus_rebel) StdoutLine: {'line': b'5: +    end = std::strstr(start, CriKeywords::END.c_str());\n'}
[0.880597] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880623] (igus_rebel) StdoutLine: {'line': b'5: +    if (end == nullptr) {\n'}
[0.880650] (igus_rebel) StdoutLine: {'line': b'5: +                // Found a start without end.\n'}
[0.880684] (igus_rebel) StdoutLine: {'line': b'5: +      const char *remainingStart = start + CriKeywords::START.size();\n'}
[0.880720] (igus_rebel) StdoutLine: {'line': b"5: +      const char *remainingEnd = std::strchr(remainingStart, '\\0');\n"}
[0.880746] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880773] (igus_rebel) StdoutLine: {'line': b'5: +      if (remainingEnd != nullptr) {\n'}
[0.880799] (igus_rebel) StdoutLine: {'line': b'5: +        fragmentLength = remainingEnd - remainingStart;\n'}
[0.880826] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.880853] (igus_rebel) StdoutLine: {'line': b'5: +        for (int i = 0; i < fragmentLength; i++) {\n'}
[0.880879] (igus_rebel) StdoutLine: {'line': b'5: +          fragmentBuffer[i] = *(remainingStart + i);\n'}
[0.880906] (igus_rebel) StdoutLine: {'line': b'5: @@ -72,3 +96,8 @@\n'}
[0.880934] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.880961] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.880988] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::SeparateMessages(const char *msg)\n'}
[0.881014] (igus_rebel) StdoutLine: {'line': b'5: +      } else {\n'}
[0.881042] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"),\n'}
[0.881083] (igus_rebel) StdoutLine: {'line': b'5: +            "Socket read was not null-terminated, somehow.");\n'}
[0.881124] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.881162] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.881200] (igus_rebel) StdoutLine: {'line': b'5: +      break;\n'}
[0.881239] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.881277] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.881315] (igus_rebel) StdoutLine: {'line': b'5: @@ -76,40 +105,2 @@\n'}
[0.881353] (igus_rebel) StdoutLine: {'line': b'5: -        const char *start;\n'}
[0.881425] (igus_rebel) StdoutLine: {'line': b'5: -        const char *end = msg;\n'}
[0.881466] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.881505] (igus_rebel) StdoutLine: {'line': b'5: -        while (true)\n'}
[0.881543] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.881582] (igus_rebel) StdoutLine: {'line': b'5: -            start = std::strstr(end, CriKeywords::START.c_str());\n'}
[0.881621] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.881659] (igus_rebel) StdoutLine: {'line': b'5: -            if (start == nullptr)\n'}
[0.881705] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.881745] (igus_rebel) StdoutLine: {'line': b'5: -                break;\n'}
[0.881782] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.881819] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.881859] (igus_rebel) StdoutLine: {'line': b'5: -            end = std::strstr(start, CriKeywords::END.c_str());\n'}
[0.881935] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.881980] (igus_rebel) StdoutLine: {'line': b'5: -            if (end == nullptr)\n'}
[0.882025] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.882063] (igus_rebel) StdoutLine: {'line': b'5: -                // Found a start without end.\n'}
[0.882101] (igus_rebel) StdoutLine: {'line': b'5: -                const char *remainingStart = start + CriKeywords::START.size();\n'}
[0.882140] (igus_rebel) StdoutLine: {'line': b"5: -                const char *remainingEnd = std::strchr(remainingStart, '\\0');\n"}
[0.882177] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882213] (igus_rebel) StdoutLine: {'line': b'5: -                if (remainingEnd != nullptr)\n'}
[0.882250] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.882287] (igus_rebel) StdoutLine: {'line': b'5: -                    fragmentLength = remainingEnd - remainingStart;\n'}
[0.882323] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882359] (igus_rebel) StdoutLine: {'line': b'5: -                    for (int i = 0; i < fragmentLength; i++)\n'}
[0.882396] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.882433] (igus_rebel) StdoutLine: {'line': b'5: -                        fragmentBuffer[i] = *(remainingStart + i);\n'}
[0.882469] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.882506] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.882542] (igus_rebel) StdoutLine: {'line': b'5: -                else\n'}
[0.882578] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.882617] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket read was not null-terminated, somehow.");\n'}
[0.882656] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.882701] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882741] (igus_rebel) StdoutLine: {'line': b'5: -                break;\n'}
[0.882779] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.882817] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.882856] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.882894] (igus_rebel) StdoutLine: {'line': b'5: -                std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.882933] (igus_rebel) StdoutLine: {'line': b'5: -                unprocessedMessages.push_front(\n'}
[0.882974] (igus_rebel) StdoutLine: {'line': b'5: +      std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.883015] (igus_rebel) StdoutLine: {'line': b'5: +      unprocessedMessages.push_front(\n'}
[0.883054] (igus_rebel) StdoutLine: {'line': b'5: @@ -119 +110,29 @@\n'}
[0.883095] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.883134] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.883174] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.883214] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.883255] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883293] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::ReceiveThreadFunction()\n'}
[0.883333] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.883409] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to receive messages from robot.");\n'}
[0.883453] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883496] (igus_rebel) StdoutLine: {'line': b'5: +  char buffer[bufferSize * 2] = {0};\n'}
[0.883537] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883578] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueReceive) {\n'}
[0.883619] (igus_rebel) StdoutLine: {'line': b'5: +    if (connectionNeeded) {\n'}
[0.883657] (igus_rebel) StdoutLine: {'line': b'5: +      MakeConnection();\n'}
[0.883703] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.883744] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883782] (igus_rebel) StdoutLine: {'line': b'5: +    int valread = read(sock, buffer + fragmentLength, bufferSize);\n'}
[0.883820] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.883858] (igus_rebel) StdoutLine: {'line': b'5: +    if (!IsSocketOk()) {\n'}
[0.883897] (igus_rebel) StdoutLine: {'line': b'5: +      connectionNeeded = true;\n'}
[0.883937] (igus_rebel) StdoutLine: {'line': b'5: +    } else {\n'}
[0.883975] (igus_rebel) StdoutLine: {'line': b'5: +      if (valread == 0) {\n'}
[0.884014] (igus_rebel) StdoutLine: {'line': b'5: +        RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Empty message received");\n'}
[0.884052] (igus_rebel) StdoutLine: {'line': b'5: +        connectionNeeded = true;\n'}
[0.884090] (igus_rebel) StdoutLine: {'line': b'5: +      } else {\n'}
[0.884130] (igus_rebel) StdoutLine: {'line': b'5: +        if (fragmentLength > 0) {\n'}
[0.884168] (igus_rebel) StdoutLine: {'line': b'5: +          for (int i = 0; i < fragmentLength; i++) {\n'}
[0.884207] (igus_rebel) StdoutLine: {'line': b'5: +            buffer[i] = fragmentBuffer[i];\n'}
[0.884245] (igus_rebel) StdoutLine: {'line': b'5: +          }\n'}
[0.884283] (igus_rebel) StdoutLine: {'line': b'5: +          fragmentLength = 0;\n'}
[0.884322] (igus_rebel) StdoutLine: {'line': b'5: @@ -121,46 +140,4 @@\n'}
[0.884360] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.884400] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.884438] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::ReceiveThreadFunction()\n'}
[0.884477] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.884515] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to receive messages from robot.");\n'}
[0.884553] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.884591] (igus_rebel) StdoutLine: {'line': b'5: -        char buffer[bufferSize * 2] = {0};\n'}
[0.884629] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.884667] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueReceive)\n'}
[0.884712] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.884751] (igus_rebel) StdoutLine: {'line': b'5: -            if (connectionNeeded)\n'}
[0.884789] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.884828] (igus_rebel) StdoutLine: {'line': b'5: -                MakeConnection();\n'}
[0.884867] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.884906] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.884946] (igus_rebel) StdoutLine: {'line': b'5: -            int valread = read(sock, buffer + fragmentLength, bufferSize);\n'}
[0.884986] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.885027] (igus_rebel) StdoutLine: {'line': b'5: -            if (!IsSocketOk())\n'}
[0.885065] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.885102] (igus_rebel) StdoutLine: {'line': b'5: -                connectionNeeded = true;\n'}
[0.885139] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.885175] (igus_rebel) StdoutLine: {'line': b'5: -            else\n'}
[0.885211] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.885248] (igus_rebel) StdoutLine: {'line': b'5: -                if (valread == 0)\n'}
[0.885284] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.885322] (igus_rebel) StdoutLine: {'line': b'5: -                    RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Empty message received");\n'}
[0.885433] (igus_rebel) StdoutLine: {'line': b'5: -                    connectionNeeded = true;\n'}
[0.885511] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.885601] (igus_rebel) StdoutLine: {'line': b'5: -                else\n'}
[0.885638] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.885678] (igus_rebel) StdoutLine: {'line': b'5: -                    if (fragmentLength > 0)\n'}
[0.885851] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.885886] (igus_rebel) StdoutLine: {'line': b'5: -                        for (int i = 0; i < fragmentLength; i++)\n'}
[0.885919] (igus_rebel) StdoutLine: {'line': b'5: -                        {\n'}
[0.885951] (igus_rebel) StdoutLine: {'line': b'5: -                            buffer[i] = fragmentBuffer[i];\n'}
[0.886248] (igus_rebel) StdoutLine: {'line': b'5: -                        }\n'}
[0.886303] (igus_rebel) StdoutLine: {'line': b'5: -                        fragmentLength = 0;\n'}
[0.886341] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.886378] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.886414] (igus_rebel) StdoutLine: {'line': b'5: -                    SeparateMessages(buffer);\n'}
[0.886450] (igus_rebel) StdoutLine: {'line': b'5: -                    for (int i = 0; i < bufferSize * 2; i++)\n'}
[0.886485] (igus_rebel) StdoutLine: {'line': b'5: -                    {\n'}
[0.886520] (igus_rebel) StdoutLine: {'line': b'5: -                        buffer[i] = 0;\n'}
[0.886554] (igus_rebel) StdoutLine: {'line': b'5: -                    }\n'}
[0.886588] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.886622] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.886657] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.886700] (igus_rebel) StdoutLine: {'line': b'5: +        SeparateMessages(buffer);\n'}
[0.886737] (igus_rebel) StdoutLine: {'line': b'5: +        for (int i = 0; i < bufferSize * 2; i++) {\n'}
[0.886773] (igus_rebel) StdoutLine: {'line': b'5: +          buffer[i] = 0;\n'}
[0.886809] (igus_rebel) StdoutLine: {'line': b'5: @@ -168,3 +145,6 @@\n'}
[0.886847] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.886884] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to receive messages from robot.");\n'}
[0.886924] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.886962] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.887000] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.887035] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.887071] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.887104] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to receive messages from robot.");\n'}
[0.887140] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.887174] (igus_rebel) StdoutLine: {'line': b'5: @@ -175,42 +155,41 @@\n'}
[0.887209] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::ListCheckThreadFunction()\n'}
[0.887335] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.887375] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Starting to check if the message list is being processed.");\n'}
[0.887411] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.887446] (igus_rebel) StdoutLine: {'line': b'5: -        while (continueReceive)\n'}
[0.887481] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.887516] (igus_rebel) StdoutLine: {'line': b'5: -            if (unprocessedMessages.size() > maxUnprocessedMessages)\n'}
[0.887551] (igus_rebel) StdoutLine: {'line': b'5: -            {\n'}
[0.887586] (igus_rebel) StdoutLine: {'line': b'5: -                RCLCPP_WARN(rclcpp::get_logger("igus_rebel"), "Robot messages are not processed fast enough. Discarding messages.");\n'}
[0.887622] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.887657] (igus_rebel) StdoutLine: {'line': b'5: -                while (unprocessedMessages.size() > (maxUnprocessedMessages * 0.9))\n'}
[0.887704] (igus_rebel) StdoutLine: {'line': b'5: -                {\n'}
[0.887741] (igus_rebel) StdoutLine: {'line': b'5: -                    unprocessedMessages.pop_back();\n'}
[0.887778] (igus_rebel) StdoutLine: {'line': b'5: -                }\n'}
[0.887812] (igus_rebel) StdoutLine: {'line': b'5: -            }\n'}
[0.887846] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.887880] (igus_rebel) StdoutLine: {'line': b'5: -            std::this_thread::sleep_for(std::chrono::milliseconds(listCheckWaitMs));\n'}
[0.887915] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.887948] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.887982] (igus_rebel) StdoutLine: {'line': b'5: -        RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"), "Stopped to check if the message list is being processed.");\n'}
[0.888016] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.888050] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.888085] (igus_rebel) StdoutLine: {'line': b'5: -    bool RebelSocket::IsSocketOk()\n'}
[0.888120] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.888158] (igus_rebel) StdoutLine: {'line': b'5: -        int error = 0;\n'}
[0.888193] (igus_rebel) StdoutLine: {'line': b'5: -        socklen_t len = sizeof(error);\n'}
[0.888228] (igus_rebel) StdoutLine: {'line': b'5: -        int retval = getsockopt(sock, SOL_SOCKET, SO_ERROR, &error, &len);\n'}
[0.888262] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.888297] (igus_rebel) StdoutLine: {'line': b'5: -        if (retval != 0)\n'}
[0.888330] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.888364] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error getting socket error code: %s", strerror(retval));\n'}
[0.888400] (igus_rebel) StdoutLine: {'line': b'5: -            return false;\n'}
[0.888434] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.888468] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.888501] (igus_rebel) StdoutLine: {'line': b'5: -        if (error != 0)\n'}
[0.888536] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.888570] (igus_rebel) StdoutLine: {'line': b'5: -            RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket error: %s", strerror(error));\n'}
[0.888605] (igus_rebel) StdoutLine: {'line': b'5: -            return false;\n'}
[0.888639] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.888678] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.888717] (igus_rebel) StdoutLine: {'line': b'5: -        return true;\n'}
[0.888753] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.888788] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::ListCheckThreadFunction()\n'}
[0.888822] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.888857] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"),\n'}
[0.888892] (igus_rebel) StdoutLine: {'line': b'5: +      "Starting to check if the message list is being processed.");\n'}
[0.888927] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.888960] (igus_rebel) StdoutLine: {'line': b'5: +  while (continueReceive) {\n'}
[0.888995] (igus_rebel) StdoutLine: {'line': b'5: +    if (unprocessedMessages.size() > maxUnprocessedMessages) {\n'}
[0.889030] (igus_rebel) StdoutLine: {'line': b'5: +      RCLCPP_WARN(rclcpp::get_logger("igus_rebel"),\n'}
[0.889063] (igus_rebel) StdoutLine: {'line': b'5: +          "Robot messages are not processed fast enough. Discarding messages.");\n'}
[0.889098] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.889132] (igus_rebel) StdoutLine: {'line': b'5: +      while (unprocessedMessages.size() > (maxUnprocessedMessages * 0.9)) {\n'}
[0.889167] (igus_rebel) StdoutLine: {'line': b'5: +        unprocessedMessages.pop_back();\n'}
[0.889202] (igus_rebel) StdoutLine: {'line': b'5: +      }\n'}
[0.889237] (igus_rebel) StdoutLine: {'line': b'5: +    }\n'}
[0.889272] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.889307] (igus_rebel) StdoutLine: {'line': b'5: +    std::this_thread::sleep_for(std::chrono::milliseconds(listCheckWaitMs));\n'}
[0.889344] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.889379] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.889412] (igus_rebel) StdoutLine: {'line': b'5: +  RCLCPP_DEBUG(rclcpp::get_logger("igus_rebel"),\n'}
[0.889446] (igus_rebel) StdoutLine: {'line': b'5: +      "Stopped to check if the message list is being processed.");\n'}
[0.889482] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.889516] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.889550] (igus_rebel) StdoutLine: {'line': b'5: +bool RebelSocket::IsSocketOk()\n'}
[0.889585] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.889620] (igus_rebel) StdoutLine: {'line': b'5: +  int error = 0;\n'}
[0.889655] (igus_rebel) StdoutLine: {'line': b'5: +  socklen_t len = sizeof(error);\n'}
[0.889902] (igus_rebel) StdoutLine: {'line': b'5: +  int retval = getsockopt(sock, SOL_SOCKET, SO_ERROR, &error, &len);\n'}
[0.889964] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.890009] (igus_rebel) StdoutLine: {'line': b'5: +  if (retval != 0) {\n'}
[0.890051] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Error getting socket error code: %s",\n'}
[0.890091] (igus_rebel) StdoutLine: {'line': b'5: +        strerror(retval));\n'}
[0.890130] (igus_rebel) StdoutLine: {'line': b'5: +    return false;\n'}
[0.890172] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.890212] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.890250] (igus_rebel) StdoutLine: {'line': b'5: +  if (error != 0) {\n'}
[0.890287] (igus_rebel) StdoutLine: {'line': b'5: +    RCLCPP_ERROR(rclcpp::get_logger("igus_rebel"), "Socket error: %s", strerror(error));\n'}
[0.890324] (igus_rebel) StdoutLine: {'line': b'5: +    return false;\n'}
[0.890360] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.890397] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.890434] (igus_rebel) StdoutLine: {'line': b'5: +  return true;\n'}
[0.890471] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.890514] (igus_rebel) StdoutLine: {'line': b'5: @@ -221,67 +200,61 @@\n'}
[0.890553] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::Start()\n'}
[0.890591] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.890627] (igus_rebel) StdoutLine: {'line': b'5: -        connectionNeeded = true;\n'}
[0.890666] (igus_rebel) StdoutLine: {'line': b'5: -        continueReceive = true;\n'}
[0.890711] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.890750] (igus_rebel) StdoutLine: {'line': b'5: -        listCheckThread = std::thread(&RebelSocket::ListCheckThreadFunction, this);\n'}
[0.890790] (igus_rebel) StdoutLine: {'line': b'5: -        receiveThread = std::thread(&RebelSocket::ReceiveThreadFunction, this);\n'}
[0.890828] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.890867] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.890904] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::Stop()\n'}
[0.890941] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.890978] (igus_rebel) StdoutLine: {'line': b'5: -        connectionNeeded = false;\n'}
[0.891015] (igus_rebel) StdoutLine: {'line': b'5: -        continueReceive = false;\n'}
[0.891053] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.891090] (igus_rebel) StdoutLine: {'line': b'5: -        if (receiveThread.joinable())\n'}
[0.891128] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.891165] (igus_rebel) StdoutLine: {'line': b'5: -            receiveThread.join();\n'}
[0.891203] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.891240] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.891277] (igus_rebel) StdoutLine: {'line': b'5: -        if (listCheckThread.joinable())\n'}
[0.891314] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.891351] (igus_rebel) StdoutLine: {'line': b'5: -            listCheckThread.join();\n'}
[0.891389] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.891426] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.891463] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.891500] (igus_rebel) StdoutLine: {'line': b'5: -    bool RebelSocket::HasMessage()\n'}
[0.891536] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.891605] (igus_rebel) StdoutLine: {'line': b'5: -        return unprocessedMessages.size() > 0;\n'}
[0.891645] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.891689] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.891729] (igus_rebel) StdoutLine: {'line': b'5: -    std::string RebelSocket::GetMessage()\n'}
[0.891768] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.891808] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.891848] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.891887] (igus_rebel) StdoutLine: {'line': b'5: -        if (!HasMessage())\n'}
[0.891927] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.891966] (igus_rebel) StdoutLine: {'line': b'5: -            return "";\n'}
[0.892004] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.892042] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.892081] (igus_rebel) StdoutLine: {'line': b'5: -        std::string msg = unprocessedMessages.back();\n'}
[0.892121] (igus_rebel) StdoutLine: {'line': b'5: -        unprocessedMessages.pop_back();\n'}
[0.892161] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.892200] (igus_rebel) StdoutLine: {'line': b'5: -        return msg;\n'}
[0.892240] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.892278] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.892316] (igus_rebel) StdoutLine: {'line': b'5: -    void RebelSocket::SendMessage(const std::string &msg)\n'}
[0.892444] (igus_rebel) StdoutLine: {'line': b'5: -    {\n'}
[0.892489] (igus_rebel) StdoutLine: {'line': b'5: -        std::lock_guard<std::mutex> lockGuard(socketWriteLock);\n'}
[0.892531] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.892571] (igus_rebel) StdoutLine: {'line': b'5: -        if (connectionNeeded)\n'}
[0.892613] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.892652] (igus_rebel) StdoutLine: {'line': b'5: -            MakeConnection();\n'}
[0.892699] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.892738] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.892777] (igus_rebel) StdoutLine: {'line': b'5: -        int sent = send(sock, msg.c_str(), msg.length(), 0);\n'}
[0.892814] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.892850] (igus_rebel) StdoutLine: {'line': b'5: -        if (!IsSocketOk())\n'}
[0.892887] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.892925] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = true;\n'}
[0.892962] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.893000] (igus_rebel) StdoutLine: {'line': b'5: -\n'}
[0.893038] (igus_rebel) StdoutLine: {'line': b'5: -        if (sent < 0)\n'}
[0.893077] (igus_rebel) StdoutLine: {'line': b'5: -        {\n'}
[0.893114] (igus_rebel) StdoutLine: {'line': b'5: -            connectionNeeded = true;\n'}
[0.893151] (igus_rebel) StdoutLine: {'line': b'5: -        }\n'}
[0.893188] (igus_rebel) StdoutLine: {'line': b'5: -    }\n'}
[0.893225] (igus_rebel) StdoutLine: {'line': b'5: -}\n'}
[0.893265] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::Start()\n'}
[0.893314] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.893351] (igus_rebel) StdoutLine: {'line': b'5: +  connectionNeeded = true;\n'}
[0.893389] (igus_rebel) StdoutLine: {'line': b'5: +  continueReceive = true;\n'}
[0.893426] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.893464] (igus_rebel) StdoutLine: {'line': b'5: +  listCheckThread = std::thread(&RebelSocket::ListCheckThreadFunction, this);\n'}
[0.893501] (igus_rebel) StdoutLine: {'line': b'5: +  receiveThread = std::thread(&RebelSocket::ReceiveThreadFunction, this);\n'}
[0.893538] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.893576] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.893613] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::Stop()\n'}
[0.893650] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.893696] (igus_rebel) StdoutLine: {'line': b'5: +  connectionNeeded = false;\n'}
[0.893746] (igus_rebel) StdoutLine: {'line': b'5: +  continueReceive = false;\n'}
[0.893778] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.893812] (igus_rebel) StdoutLine: {'line': b'5: +  if (receiveThread.joinable()) {\n'}
[0.893852] (igus_rebel) StdoutLine: {'line': b'5: +    receiveThread.join();\n'}
[0.893884] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.893916] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.893947] (igus_rebel) StdoutLine: {'line': b'5: +  if (listCheckThread.joinable()) {\n'}
[0.893979] (igus_rebel) StdoutLine: {'line': b'5: +    listCheckThread.join();\n'}
[0.894010] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.894041] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.894071] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894103] (igus_rebel) StdoutLine: {'line': b'5: +bool RebelSocket::HasMessage()\n'}
[0.894136] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.894167] (igus_rebel) StdoutLine: {'line': b'5: +  return unprocessedMessages.size() > 0;\n'}
[0.894195] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.894224] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894252] (igus_rebel) StdoutLine: {'line': b'5: +std::string RebelSocket::GetMessage()\n'}
[0.894281] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.894309] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(messageLock);\n'}
[0.894339] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894366] (igus_rebel) StdoutLine: {'line': b'5: +  if (!HasMessage()) {\n'}
[0.894395] (igus_rebel) StdoutLine: {'line': b'5: +    return "";\n'}
[0.894423] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.894452] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894481] (igus_rebel) StdoutLine: {'line': b'5: +  std::string msg = unprocessedMessages.back();\n'}
[0.894514] (igus_rebel) StdoutLine: {'line': b'5: +  unprocessedMessages.pop_back();\n'}
[0.894543] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894572] (igus_rebel) StdoutLine: {'line': b'5: +  return msg;\n'}
[0.894601] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.894629] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894657] (igus_rebel) StdoutLine: {'line': b'5: +void RebelSocket::SendMessage(const std::string & msg)\n'}
[0.894694] (igus_rebel) StdoutLine: {'line': b'5: +{\n'}
[0.894724] (igus_rebel) StdoutLine: {'line': b'5: +  std::lock_guard<std::mutex> lockGuard(socketWriteLock);\n'}
[0.894756] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894786] (igus_rebel) StdoutLine: {'line': b'5: +  if (connectionNeeded) {\n'}
[0.894816] (igus_rebel) StdoutLine: {'line': b'5: +    MakeConnection();\n'}
[0.894847] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.894877] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894907] (igus_rebel) StdoutLine: {'line': b'5: +  int sent = send(sock, msg.c_str(), msg.length(), 0);\n'}
[0.894938] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.894968] (igus_rebel) StdoutLine: {'line': b'5: +  if (!IsSocketOk()) {\n'}
[0.894998] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = true;\n'}
[0.895029] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.895058] (igus_rebel) StdoutLine: {'line': b'5: +\n'}
[0.895090] (igus_rebel) StdoutLine: {'line': b'5: +  if (sent < 0) {\n'}
[0.895119] (igus_rebel) StdoutLine: {'line': b'5: +    connectionNeeded = true;\n'}
[0.895149] (igus_rebel) StdoutLine: {'line': b'5: +  }\n'}
[0.895178] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.895206] (igus_rebel) StdoutLine: {'line': b'5: +}\n'}
[0.895234] (igus_rebel) StdoutLine: {'line': b'5: \n'}
[0.895263] (igus_rebel) StdoutLine: {'line': b'5: 7 files with code style divergence\n'}
[0.895291] (igus_rebel) StdoutLine: {'line': b'5: -- run_test.py: return code 1\n'}
[0.895321] (igus_rebel) StdoutLine: {'line': b"5: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/uncrustify.xunit.xml'\n"}
[0.895355] (igus_rebel) StdoutLine: {'line': b'5/6 Test #5: uncrustify .......................***Failed    0.23 sec\n'}
[0.895384] (igus_rebel) StdoutLine: {'line': b'test 6\n'}
[0.895413] (igus_rebel) StdoutLine: {'line': b'    Start 6: xmllint\n'}
[0.895443] (igus_rebel) StdoutLine: {'line': b'\n'}
[0.895476] (igus_rebel) StdoutLine: {'line': b'6: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml" "--package-name" "igus_rebel" "--output-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/ament_xmllint/xmllint.txt" "--command" "/opt/ros/jazzy/bin/ament_xmllint" "--xunit-file" "/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml"\n'}
[0.895509] (igus_rebel) StdoutLine: {'line': b'6: Working Directory: /home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel\n'}
[0.895540] (igus_rebel) StdoutLine: {'line': b'6: Test timeout computed to be: 60\n'}
[0.895571] (igus_rebel) StdoutLine: {'line': b"6: -- run_test.py: invoking following command in '/home/amrl-linux24-04/ros2_ben/src/igus_rebel_ros2/igus_rebel':\n"}
[0.895601] (igus_rebel) StdoutLine: {'line': b'6:  - /opt/ros/jazzy/bin/ament_xmllint --xunit-file /home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml\n'}
[0.895632] (igus_rebel_description) StdoutLine: {'line': b"2: File 'package.xml' is valid\n"}
[0.895676] (igus_rebel_description) StdoutLine: {'line': b'2: \n'}
[0.895712] (igus_rebel_description) StdoutLine: {'line': b'2: No problems found\n'}
[0.895745] (igus_rebel_description) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.895777] (igus_rebel_description) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel_description/test_results/igus_rebel_description/xmllint.xunit.xml'\n"}
[0.895813] (igus_rebel_description) StdoutLine: {'line': b'2/2 Test #2: xmllint ..........................   Passed    0.75 sec\n'}
[0.895844] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.895875] (igus_rebel_description) StdoutLine: {'line': b'\x1b[0;32m100% tests passed\x1b[0;0m, 0 tests failed\x1b[0;0m out of 2\n'}
[0.895907] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.895937] (igus_rebel_description) StdoutLine: {'line': b'Label Time Summary:\n'}
[0.895967] (igus_rebel_description) StdoutLine: {'line': b'lint_cmake    =   0.10 sec*proc (1 test)\n'}
[0.895999] (igus_rebel_description) StdoutLine: {'line': b'linter        =   0.85 sec*proc (2 tests)\n'}
[0.896030] (igus_rebel_description) StdoutLine: {'line': b'xmllint       =   0.75 sec*proc (1 test)\n'}
[0.896064] (igus_rebel_description) StdoutLine: {'line': b'\n'}
[0.896094] (igus_rebel_description) StdoutLine: {'line': b'Total Test time (real) =   0.85 sec\n'}
[0.896126] (igus_rebel_description) CommandEnded: {'returncode': 0}
[0.896273] (igus_rebel_description) JobEnded: {'identifier': 'igus_rebel_description', 'rc': 0}
[0.896661] (igus_rebel_moveit_config) JobStarted: {'identifier': 'igus_rebel_moveit_config'}
[0.900572] (-) TimerEvent: {}
[0.912161] (igus_rebel_moveit_config) JobEnded: {'identifier': 'igus_rebel_moveit_config', 'rc': 0}
[1.000693] (-) TimerEvent: {}
[1.101247] (-) TimerEvent: {}
[1.170971] (igus_rebel) StdoutLine: {'line': b"6: File 'package.xml' is valid\n"}
[1.171176] (igus_rebel) StdoutLine: {'line': b'6: \n'}
[1.171258] (igus_rebel) StdoutLine: {'line': b"6: File 'rebel.xml' is valid\n"}
[1.171330] (igus_rebel) StdoutLine: {'line': b'6: \n'}
[1.171396] (igus_rebel) StdoutLine: {'line': b'6: No problems found\n'}
[1.178905] (igus_rebel) StdoutLine: {'line': b'6: -- run_test.py: return code 0\n'}
[1.179071] (igus_rebel) StdoutLine: {'line': b"6: -- run_test.py: verify result file '/home/amrl-linux24-04/ros2_ben/build/igus_rebel/test_results/igus_rebel/xmllint.xunit.xml'\n"}
[1.185552] (igus_rebel) StdoutLine: {'line': b'6/6 Test #6: xmllint ..........................   Passed    0.40 sec\n'}
[1.186074] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.186258] (igus_rebel) StdoutLine: {'line': b'50% tests passed\x1b[0;0m, \x1b[0;31m3 tests failed\x1b[0;0m out of 6\n'}
[1.186344] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.186413] (igus_rebel) StdoutLine: {'line': b'Label Time Summary:\n'}
[1.186493] (igus_rebel) StdoutLine: {'line': b'cppcheck      =   0.11 sec*proc (1 test)\n'}
[1.186561] (igus_rebel) StdoutLine: {'line': b'flake8        =   0.18 sec*proc (1 test)\n'}
[1.186626] (igus_rebel) StdoutLine: {'line': b'lint_cmake    =   0.10 sec*proc (1 test)\n'}
[1.186702] (igus_rebel) StdoutLine: {'line': b'linter        =   1.13 sec*proc (6 tests)\n'}
[1.186770] (igus_rebel) StdoutLine: {'line': b'pep257        =   0.12 sec*proc (1 test)\n'}
[1.186833] (igus_rebel) StdoutLine: {'line': b'uncrustify    =   0.23 sec*proc (1 test)\n'}
[1.186894] (igus_rebel) StdoutLine: {'line': b'xmllint       =   0.40 sec*proc (1 test)\n'}
[1.186958] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.187024] (igus_rebel) StdoutLine: {'line': b'Total Test time (real) =   1.14 sec\n'}
[1.187088] (igus_rebel) StdoutLine: {'line': b'\n'}
[1.187151] (igus_rebel) StdoutLine: {'line': b'The following tests FAILED:\n'}
[1.187217] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  2 - flake8 (Failed)\x1b[0;0m\n'}
[1.187280] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  3 - lint_cmake (Failed)\x1b[0;0m\n'}
[1.187343] (igus_rebel) StdoutLine: {'line': b'\t\x1b[0;31m  5 - uncrustify (Failed)\x1b[0;0m\n'}
[1.191254] (igus_rebel) StderrLine: {'line': b'Errors while running CTest\n'}
[1.191423] (igus_rebel) StderrLine: {'line': b'Output from these tests are in: /home/amrl-linux24-04/ros2_ben/build/igus_rebel/Testing/Temporary/LastTest.log\n'}
[1.191506] (igus_rebel) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[1.193182] (igus_rebel) CommandEnded: {'returncode': 8}
[1.193638] (igus_rebel) TestFailure: {'identifier': 'igus_rebel'}
[1.193667] (igus_rebel) JobEnded: {'identifier': 'igus_rebel', 'rc': 0}
[1.194120] (-) EventReactorShutdown: {}
